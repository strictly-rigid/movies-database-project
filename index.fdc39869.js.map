{"mappings":"iiBAAAA,EAAA,SCAA,IAAAC,EAAAD,EAAA,S,mCAMsBE,I,OAAAA,EAAfC,EAAAF,EAAA,CAAAE,EAAAC,GAAAC,MAAA,SAAAC,EAAmCC,EAAKC,EAAKC,G,IAE1CC,EAEAC,E,2FAFiBC,EAAAC,QAAMC,IAAI,GAAkBC,OAAfP,EAAI,aAAeO,OAAJR,I,OAA7CG,EAAQM,EAAAC,KACdC,QAAQC,IAAIT,GACNC,EAAaD,EAASU,KAAKC,QACjCZ,EAAaE,G,gDAEbO,QAAQC,IAAI,kCAAmCH,EAAAM,GAAMC,S,0DAPhBC,MAAAC,KAAAC,U,CCNzC,IAAAC,EAAA3B,EAAA,U,SDM0CO,EAAKC,EAAKC,GAA9BP,EAAmBsB,MAAAC,KAAAC,U,CDGzC,CAHgB,mCACC,oDEHV,SAA8BE,GACnC,IAAMC,EAAiBD,EACpBE,KACC,SAAAC,G,IACEC,EAAcD,EAAdC,eACAC,EAAQF,EAARE,SACAC,EAAYH,EAAZG,aACAC,EAAWJ,EAAXI,Y,MACI,mDACyBpB,OAXjB,mCAYkBA,OADDoB,EAAY,oFAENpB,OADLiB,EAAe,oDAENjB,OADJkB,EAAS,uDACmBlB,OAAxBmB,EAAaE,QAAQ,GAAG,2B,IAGlEC,KAAK,IAERV,EAAAW,KAAKC,mBAAmBC,mBAAmB,YAAaX,E","sources":["src/index.js","src/js/TrendingMovies/fetchTrendingMovies.js","src/js/TrendingMovies/renderTrendingMovies.js"],"sourcesContent":["import { refs } from './js/refs';\nimport axios from 'axios';\n\nimport { fetchTrendingMovies } from './js/TrendingMovies/fetchTrendingMovies.js';\nimport { renderTrendingMovies } from './js/TrendingMovies/renderTrendingMovies.js';\n\nconst API_KEY = '86bcaf318e232372b2e8e2623c959f88';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/week';\n\nfetchTrendingMovies(API_KEY, BASE_URL, renderTrendingMovies);\n","import axios from 'axios';\n\nconst API_KEY = '86bcaf318e232372b2e8e2623c959f88';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/week';\n// axios.defaults.headers.common['Authorization'] = API_KEY;\n\nexport async function fetchTrendingMovies(key, url, renderMovies) {\n  try {\n    const response = await axios.get(`${url}?api_key=${key}`);\n    console.log(response);\n    const dataMovies = response.data.results;\n    renderMovies(dataMovies);\n  } catch (error) {\n    console.log('Error fetching trending movies:', error.message);\n  }\n}\n","import { refs } from '../refs';\n\nconst POSTER_URL = `https://image.tmdb.org/t/p/w500`;\n\nexport function renderTrendingMovies(movies) {\n  const trendingMovies = movies\n    .map(\n      ({\n        original_title,\n        overview,\n        vote_average,\n        poster_path,\n      }) => `<li class=\"movies-item\">\n            <img src=\"${POSTER_URL}${poster_path}\" class=\"movie-poster\" alt=\"movie poster\">\n            <h2 class=\"movie-title\">${original_title}</h2>\n            <p class=\"movie-description\">${overview}</p>\n            <span class=\"movie-rate\">Rating: ${vote_average.toFixed(2)}</span>\n          </li>`\n    )\n    .join('');\n\n  refs.trendingMoviesList.insertAdjacentHTML('beforeend', trendingMovies);\n}\n"],"names":["parcelRequire","$bpxeT","$ca020bb5667214b6$var$_fetchTrendingMovies","$parcel$interopDefault","$2TvXO","mark","_callee","key","url","renderMovies","response","dataMovies","$dIxxU","default","get","concat","_ctx","sent","console","log","data","results","t0","message","apply","this","arguments","$4Nugj","movies","trendingMovies","map","param","original_title","overview","vote_average","poster_path","toFixed","join","refs","trendingMoviesList","insertAdjacentHTML"],"version":3,"file":"index.fdc39869.js.map"}