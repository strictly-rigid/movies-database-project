{"mappings":"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","sources":["src/index.js","src/js/refs.js","src/js/TrendingMovies/renderTrendingMovies.js","src/js/TrendingMovies/renderFoundMovies.js","src/js/TrendingMovies/searchMovie.js","src/js/TrendingMovies/fetchSingleMovie.js","src/js/helpers/createModalMarkup.js"],"sourcesContent":["import { refs } from './js/refs';\nimport axios from 'axios';\nimport {\n  URLS,\n  trendingObserverOptions,\n  searchObserverOptions,\n} from './js/constants.js';\n\nimport { renderTrendingMovies } from './js/TrendingMovies/renderTrendingMovies.js';\nimport { renderFoundMovies } from './js/TrendingMovies/renderFoundMovies.js';\n\nimport { searchMovie } from './js/TrendingMovies/searchMovie.js';\nimport { fetchSingleMovie } from './js/TrendingMovies/fetchSingleMovie.js';\nimport { createModalMarkup } from './js/helpers/createModalMarkup.js';\nimport {\n  notifyEndResults,\n  notifyNoResults,\n} from './js/helpers/notifyWarnings.js';\n\nconst API_KEY = '86bcaf318e232372b2e8e2623c959f88';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/week';\n\nlet query = '';\nlet currentPage = 1;\nlet currentSearchPage = 1;\nlet isSearching = false;\n\n/* ====================== TRENDING ======================  */\n\nasync function fetchTrendingMovies(key, url, currentPage) {\n  try {\n    isLoading = true;\n    const response = await axios.get(\n      `${url}?api_key=${key}&page=${currentPage}`\n    );\n\n    if (response.data.total_pages === currentSearchPage) {\n      notifyEndResults();\n      trendingObserver.unobserve(refs.targetObserverMovies);\n    }\n    const dataMovies = response.data.results;\n    return dataMovies;\n  } catch (error) {\n    console.log('Error fetching trending movies:', error.message);\n  } finally {\n    isLoading = false;\n  }\n}\n\nlet trendingObserver = new IntersectionObserver(\n  onLoadMoreTrending,\n  trendingObserverOptions\n);\nfunction onLoadMoreTrending(entries, observer) {\n  console.log(entries);\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentPage += 1;\n      fetchTrendingMovies(API_KEY, URLS.BASE_MOVIES_URL, currentPage).then(\n        data => renderTrendingMovies(data)\n      );\n    }\n  });\n}\n\nfetchTrendingMovies(API_KEY, URLS.BASE_MOVIES_URL, currentPage)\n  .then(data => renderTrendingMovies(data))\n  .then(() => trendingObserver.observe(refs.targetObserverMovies))\n  .catch(err => console.log(err));\n\n/* ====================== SEARCH ======================  */\nrefs.form.addEventListener('submit', searchByName);\n\nasync function searchByName(e) {\n  e.preventDefault();\n\n  trendingObserver.unobserve(refs.targetObserverMovies);\n  searchObserver.unobserve(refs.targetObserverSearch);\n\n  refs.backdrop.classList.add('is-hidden');\n  query = refs.form.searchQuery.value.trim();\n  currentSearchPage = 1;\n\n  try {\n    refs.moviesList.innerHTML = '';\n    refs.endResultsInfo.classList.add('visually-hidden');\n\n    const moviesData = await searchMovie(\n      API_KEY,\n      URLS.SEARCH_MOVIE_URL,\n      query,\n      currentSearchPage\n    );\n\n    const { results, total_results } = moviesData.data;\n\n    if (results && results.length > 0) {\n      renderFoundMovies(results);\n      searchObserver.observe(refs.targetObserverSearch);\n    } else {\n      refs.endResultsInfo.classList.remove('visually-hidden');\n      notifyNoResults();\n    }\n\n    if (\n      total_results &&\n      total_results <= 20 &&\n      moviesData.data.total_pages === currentSearchPage\n    ) {\n      notifyEndResults();\n      searchObserver.unobserve(refs.targetObserverSearch);\n    }\n  } catch (error) {\n    console.log('Error fetching movies:', error.message);\n  } finally {\n    refs.form.searchQuery.value = '';\n  }\n}\n\nlet searchObserver = new IntersectionObserver(\n  onLoadMoreSearch,\n  searchObserverOptions\n);\n\nfunction onLoadMoreSearch(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentSearchPage += 1;\n      searchMovie(\n        API_KEY,\n        URLS.SEARCH_MOVIE_URL,\n        query,\n        currentSearchPage\n      ).then(dataFound => {\n        const { results } = dataFound.data;\n        renderFoundMovies(results);\n      });\n    }\n  });\n}\n\n/* ======================  MOVIE'S DETAILS ======================  */\n\nrefs.moviesContainer.addEventListener('click', onMoviesItemClick);\n\nasync function onMoviesItemClick(e) {\n  e.preventDefault();\n\n  const targetElement = e.target.closest('.movies-item');\n  if (targetElement) {\n    const dataId = targetElement.getAttribute('data-id');\n    const data = await fetchSingleMovie(API_KEY, URLS.SINGLE_MOVIE_URL, dataId);\n    createModalMarkup(data);\n  }\n}\n","export const refs = {\n  form: document.querySelector('.search-form'),\n  moviesContainer: document.querySelector('.data-container'),\n  moviesList: document.querySelector('.movies-list'),\n  targetObserverMovies: document.querySelector('.js-guard-movies'),\n  targetObserverSearch: document.querySelector('.js-guard-search'),\n  backdrop: document.querySelector('.backdrop'),\n  modalWrapper: document.querySelector('.movie-item-wrapper'),\n  endResultsInfo: document.querySelector('.no-results-info-movies'),\n  closeBtn: document.querySelector('.modal-close-btn'),\n};\n","import { refs } from '../refs';\nimport { URLS, genres } from '../constants';\n\nfunction getGenres(genre_ids) {\n  return genre_ids\n    .map(id => {\n      const genre = genres.find(g => g.id === id);\n      return genre ? genre.name : '';\n    })\n    .filter(Boolean)\n    .join(', ');\n}\n\nexport function renderTrendingMovies(movies) {\n  const trendingMovies = movies\n    .map(\n      ({\n        id,\n        genre_ids,\n        original_title,\n        overview,\n        vote_average,\n        poster_path,\n      }) => {\n        const genreNames = getGenres(genre_ids);\n        return `<li class=\"movies-item\" data-id=${id}>\n            <img src=\"${\n              URLS.POSTER_URL\n            }${poster_path}\" class=\"movie-poster\" alt=\"movie poster\">\n            <div class=\"movie-info\">\n            <h2 class=\"movie-title\">${original_title}</h2>\n            <p class=\"movie-description\">${overview}</p>\n            <p class=\"movie-genres\">Genres: ${\n              genreNames || 'Sorry, no genres available'\n            }</p>\n            <span class=\"movie-rate\">Rating: ${vote_average.toFixed(2)}</span> \n          </div>\n     \n          </li>`;\n      }\n    )\n    .join('');\n\n  refs.moviesList.insertAdjacentHTML('beforeend', trendingMovies);\n}\n","import { refs } from '../refs';\nimport { URLS, genres } from '../constants';\n\nfunction getGenres(genre_ids) {\n  return genre_ids\n    .map(id => {\n      const genre = genres.find(g => g.id === id);\n      return genre ? genre.name : '';\n    })\n    .filter(Boolean)\n    .join(', ');\n}\n\nexport function renderFoundMovies(foundMovies) {\n  const foundItems = foundMovies\n    .map(\n      ({\n        id,\n        genre_ids,\n        original_title,\n        overview,\n        release_date,\n        vote_average,\n        vote_count,\n        poster_path,\n      }) => {\n        const genreNames = getGenres(genre_ids);\n\n        return `<li class=\"movies-item\" data-id=${id}>\n            <img src=\"${\n              URLS.POSTER_URL\n            }${poster_path}\" class=\"movie-poster\" alt=\"movie poster\">\n            <div class=\"movie-info\">\n            <h2 class=\"movie-title\">${original_title}</h2>\n            <p class=\"movie-description\">${overview}</p>\n              <p class=\"movie-genres\">Genres: ${\n                genreNames || 'Sorry, no genres available'\n              }</p>\n                <p class=\"movie-genres\">Release date: ${release_date}</p>\n            <span class=\"movie-rate\">Rating: ${vote_average.toFixed(2)}</span> \n                 <span class=\"movie-rate-count\">Total votes: ${vote_count}</span> \n          </div>     \n          </li>`;\n      }\n    )\n    .join('');\n\n  refs.moviesList.insertAdjacentHTML('beforeend', foundItems);\n}\n","import axios from 'axios';\n\nexport async function searchMovie(key, url, searchQuery, page) {\n  try {\n    const response = await axios.get(\n      `${url}?api_key=${key}&query=${searchQuery}&page=${page}`\n    );\n    // console.log(response);\n    return response;\n  } catch (error) {\n    console.log('Error fetching trending movies:', error.message);\n  }\n}\n","import axios from 'axios';\nlet isLoading = false;\n\nexport async function fetchSingleMovie(key, url, id) {\n  try {\n    isLoading = true;\n    const response = await axios.get(`${url}/${id}?api_key=${key}`);\n    console.log(response);\n    const dataMovies = response.data;\n    return dataMovies;\n  } catch (error) {\n    console.log('Error fetching a movie:', error.message);\n  } finally {\n    isLoading = false;\n  }\n}\n","import { refs } from '../refs';\nimport { URLS } from '../constants';\nimport { notifyAddSuccess, notifyIsInFavorites } from './notifyWarnings';\n\nlet favoriteMoviesList =\n  JSON.parse(localStorage.getItem('favorite_movies')) ?? [];\n\nexport async function createModalMarkup(data) {\n  const {\n    id,\n    budget,\n    genres,\n    origin_country,\n    title,\n    original_title,\n    release_date,\n    revenue,\n    runtime,\n    spoken_languages,\n    vote_average,\n    vote_count,\n    overview,\n    poster_path,\n  } = data;\n\n  const genreNames = genres.map(genre => genre.name).join(', ');\n  const languages = spoken_languages\n    .map(language => language.english_name)\n    .join(', ');\n\n  let markup = `<div class=\"movie-item-detailed\" id=${id}>\n        <img src=\"${\n          URLS.POSTER_URL\n        }${poster_path}\" class=\"movie-poster\" alt=\"movie poster\">\n        <h2 class=\"modal-title\">${title}</h2>\n        <h3 class=\"modal-original-title\"><span class=\"modal-bold\">Original title</span>: ${original_title}</h3>\n        <p class=\"modal-genres\"><span class=\"modal-bold\">Genres:</span> ${genreNames}</p>\n        <p class=\"orig-country\"><span class=\"modal-bold\">Country of origin:</span> ${origin_country}</p>\n        <p class=\"modal-release-date\"><span class=\"modal-bold\">Release date:</span> ${release_date}</p>\n        <p class=\"modal-movie-description\"><span class=\"modal-bold\">Desription:</span> ${overview}</p>\n        <p class=\"languages\"><span class=\"modal-bold\">Spoken languages:</span> ${languages}</p>\n        <span class=\"budget\"><span class=\"modal-bold\">Budget:</span> $${(\n          budget / 1000000\n        ).toFixed()} mln</span>\n        <span class=\"revenue\"><span class=\"modal-bold\">Revenue:</span> $${(\n          revenue / 1000000\n        ).toFixed()} mln</span>\n        <p class=\"runtime\"><span class=\"modal-bold\">Time:</span> ${runtime} minutes</p>\n\n         <div class=\"movies-modal-rate\">\n        <span class=\"rating\"><span class=\"modal-bold\">Rating:</span> ${vote_average}</span>\n        <span class=\"vote-count\"><span class=\"modal-bold\">Total votes:</span> ${vote_count}</span>\n        </div>\n\n        <button type=\"button\" class=\"movies-fav\">Add to favorites</button>\n      </div>`;\n\n  refs.backdrop.classList.remove('is-hidden');\n  refs.modalWrapper.innerHTML = markup;\n\n  refs.backdrop.addEventListener('click', onBackdropClick);\n  window.addEventListener('keydown', onEscKeyPress);\n  refs.closeBtn.addEventListener('click', onModalClose);\n\n  /* ======================  ADD TO FAVORITES ======================  */\n  const addFavBtn = document.querySelector('.movies-fav');\n  addFavBtn.addEventListener('click', () => addToFavorites(data));\n}\n\nfunction onModalClose() {\n  refs.modalWrapper.innerHTML = '';\n\n  refs.backdrop.classList.add('is-hidden');\n\n  refs.backdrop.removeEventListener('click', onModalClose);\n  refs.closeBtn.removeEventListener('click', onModalClose);\n  window.removeEventListener('keydown', onEscKeyPress);\n}\n\nfunction onEscKeyPress(event) {\n  if (event.code === 'Escape') {\n    onModalClose();\n  }\n}\n\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    onModalClose();\n  }\n}\n\nfunction addToFavorites(movie) {\n  const inStorage = favoriteMoviesList.some(fav => fav.id === movie.id);\n  const movieItem = {\n    id: movie.id,\n    title: movie.title,\n    origTitle: movie.original_title,\n    budget: movie.budget,\n    languages: movie.spoken_languages,\n    genres: movie.genres,\n    originCountry: movie.origin_country,\n    releaseDate: movie.release_date,\n    posterPath: movie.poster_path,\n    revenue: movie.revenue,\n    runtime: movie.runtime,\n    overview: movie.overview,\n    voteAverage: movie.vote_average,\n    voteCount: movie.vote_count,\n  };\n\n  if (!inStorage) {\n    favoriteMoviesList.push(movieItem);\n    localStorage.setItem('favorite_movies', JSON.stringify(favoriteMoviesList));\n    notifyAddSuccess(movie.title);\n  } else {\n    notifyIsInFavorites(movie.title);\n  }\n}\n"],"names":["$bpxeT","parcelRequire","$37e33676934ad046$export$21666b427502ea6d","form","document","querySelector","moviesContainer","moviesList","targetObserverMovies","targetObserverSearch","backdrop","modalWrapper","endResultsInfo","closeBtn","$4bcacd1770b5f760$export$ae4a60d31ab53252","movies","trendingMovies","map","param","id","genre_ids","original_title","overview","vote_average","poster_path","genreNames","genre","$4s6iC","genres","find","g","name","filter","Boolean","join","$4bcacd1770b5f760$var$getGenres","concat","URLS","POSTER_URL","toFixed","insertAdjacentHTML","$1dd08296ea6f3ae9$export$e70f4eb8e1a081ef","foundMovies","foundItems","release_date","vote_count","$1dd08296ea6f3ae9$var$getGenres","$458a420dbe5c4a85$export$dd14e5c8db127693","key","url","searchQuery","page","$458a420dbe5c4a85$var$_searchMovie","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","$dIxxU","default","get","_ctx","sent","console","log","t0","message","$27bd9ee829202bf4$export$7206e9da159570de","$27bd9ee829202bf4$var$_fetchSingleMovie","dataMovies","data","$a1904e15730cf304$var$ref","$a1904e15730cf304$var$favoriteMoviesList","JSON","parse","localStorage","getItem","$a1904e15730cf304$export$fc0ff788b21a7621","$a1904e15730cf304$var$_createModalMarkup","budget","origin_country","title","revenue","runtime","spoken_languages","languages","markup","language","english_name","classList","remove","innerHTML","addEventListener","$a1904e15730cf304$var$onBackdropClick","window","$a1904e15730cf304$var$onEscKeyPress","$a1904e15730cf304$var$onModalClose","$a1904e15730cf304$var$addToFavorites","add","removeEventListener","event","code","currentTarget","target","movie","inStorage","some","fav","movieItem","origTitle","originCountry","releaseDate","posterPath","voteAverage","voteCount","$lG111","notifyIsInFavorites","push","setItem","stringify","notifyAddSuccess","$b8f9b7833fa37166$var$API_KEY","$b8f9b7833fa37166$var$query","$b8f9b7833fa37166$var$currentPage","$b8f9b7833fa37166$var$currentSearchPage","$b8f9b7833fa37166$var$fetchTrendingMovies","currentPage1","$b8f9b7833fa37166$var$_fetchTrendingMovies","isLoading","total_pages","notifyEndResults","$b8f9b7833fa37166$var$trendingObserver","unobserve","results","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","BASE_MOVIES_URL","then","trendingObserverOptions","$b8f9b7833fa37166$var$_searchByName","e","moviesData","_data","total_results","preventDefault","$b8f9b7833fa37166$var$searchObserver","value","trim","SEARCH_MOVIE_URL","length","observe","notifyNoResults","catch","err","dataFound","searchObserverOptions","$b8f9b7833fa37166$var$_onMoviesItemClick","targetElement","dataId","closest","getAttribute","SINGLE_MOVIE_URL"],"version":3,"file":"index.76b80936.js.map"}