{"mappings":"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","sources":["src/js/refs.js","src/js/TrendingMovies/fetchTrendingMovies.js","src/js/TrendingMovies/renderTrendingMovies.js","src/js/TrendingMovies/fetchSingleMovie.js","src/js/helpers/createModalMarkup.js","src/js/TrendingMovies/searchMovie.js","src/js/TrendingMovies/renderFoundMovies.js","src/index.js"],"sourcesContent":["export const refs = {\n  form: document.querySelector('.search-form'),\n  moviesContainer: document.querySelector('.data-container'),\n  moviesList: document.querySelector('.movies-list'),\n  targetObserver: document.querySelector('.js-guard'),\n  backdrop: document.querySelector('.backdrop'),\n  modalWrapper: document.querySelector('.movie-item-wrapper'),\n  closeBtn: document.querySelector('.modal-close-btn'),\n};\n","import axios from 'axios';\nimport { refs } from '../refs';\nimport { renderTrendingMovies } from './renderTrendingMovies';\nimport { fetchSingleMovie } from './fetchSingleMovie';\n\nconst API_KEY = '86bcaf318e232372b2e8e2623c959f88';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/week';\nlet currentPage = 1;\nlet isLoading = false;\n\nexport async function fetchTrendingMovies(key, url, currentPage) {\n  try {\n    isLoading = true;\n    const response = await axios.get(\n      `${url}?api_key=${key}&page=${currentPage}`\n    );\n    // console.log(response);\n    const dataMovies = response.data.results;\n    return dataMovies;\n  } catch (error) {\n    console.log('Error fetching trending movies:', error.message);\n  } finally {\n    isLoading = false;\n  }\n}\n\nlet options = {\n  root: null,\n  rootMargin: '100px',\n  threshold: 1.0,\n};\n\nlet observer = new IntersectionObserver(onLoadMore, options);\nasync function onLoadMore(entries, observer) {\n  console.log(entries);\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentPage += 1;\n      fetchTrendingMovies(API_KEY, BASE_URL, currentPage).then(data =>\n        renderTrendingMovies(data)\n      );\n    }\n  });\n}\n\nif (document.body.id === 'movies-page') {\n  fetchTrendingMovies(API_KEY, BASE_URL, currentPage)\n    .then(data => {\n      renderTrendingMovies(data);\n    })\n    .then(() => observer.observe(refs.targetObserver))\n    .catch(err => console.log(err));\n}\n\n// import axios from 'axios';\n// import { refs } from '../refs';\n// import { renderTrendingMovies } from './renderTrendingMovies';\n\n// const API_KEY = '86bcaf318e232372b2e8e2623c959f88';\n// const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/week';\n// let currentPage = 1;\n// let isLoading = false;\n\n// export async function fetchTrendingMovies(key, url, renderMovies, currentPage) {\n//   try {\n//     const response = await axios.get(\n//       `${url}?api_key=${key}&page=${currentPage}`\n//     );\n//     console.log(response);\n//     const dataMovies = response.data.results;\n//     renderMovies(dataMovies);\n//   } catch (error) {\n//     console.log('Error fetching trending movies:', error.message);\n//   } finally {\n//     isLoading = false;\n//   }\n// }\n\n// fetchTrendingMovies(API_KEY, BASE_URL, renderTrendingMovies, currentPage)\n//   .then(data => observer.observe(refs.targetObserver))\n//   .catch(err => console.log(err));\n\n// let options = {\n//   root: null,\n//   rootMargin: '10px',\n//   threshold: 1.0,\n// };\n\n// let observer = new IntersectionObserver(onLoadMore, options);\n// function onLoadMore(entries, observer) {\n//   console.log(entries);\n//   entries.forEach(entry => {\n//     if (entry.isIntersecting) {\n//       currentPage += 1;\n//       fetchTrendingMovies(API_KEY, BASE_URL, renderTrendingMovies, currentPage);\n//     }\n//   });\n// }\n","import { refs } from '../refs';\nimport { genres } from '../constants';\n\nconst POSTER_URL = `https://image.tmdb.org/t/p/w500`;\n\nfunction getGenres(genre_ids) {\n  return genre_ids\n    .map(id => {\n      const genre = genres.find(g => g.id === id);\n      return genre ? genre.name : '';\n    })\n    .filter(Boolean)\n    .join(', ');\n}\n\nexport function renderTrendingMovies(movies) {\n  const trendingMovies = movies\n    .map(\n      ({\n        id,\n        genre_ids,\n        original_title,\n        overview,\n        vote_average,\n        poster_path,\n      }) => {\n        const genreNames = getGenres(genre_ids);\n        return `<li class=\"movies-item\" data-id=${id}>\n            <img src=\"${POSTER_URL}${poster_path}\" class=\"movie-poster\" alt=\"movie poster\">\n            <div class=\"movie-info\">\n            <h2 class=\"movie-title\">${original_title}</h2>\n            <p class=\"movie-description\">${overview}</p>\n            <p class=\"movie-genres\">Genres: ${\n              genreNames || 'Sorry, no genres available'\n            }</p>\n            <span class=\"movie-rate\">Rating: ${vote_average.toFixed(2)}</span> \n          </div>\n     \n          </li>`;\n      }\n    )\n    .join('');\n\n  refs.moviesList.insertAdjacentHTML('beforeend', trendingMovies);\n}\n","import axios from 'axios';\nimport { refs } from '../refs';\nimport { URLS } from '../constants';\nimport { createModalMarkup } from '../helpers/createModalMarkup';\nconst API_KEY = '86bcaf318e232372b2e8e2623c959f88';\n\nexport async function fetchSingleMovie(key, url, id) {\n  try {\n    isLoading = true;\n    const response = await axios.get(`${url}/${id}?api_key=${key}`);\n    console.log(response);\n    const dataMovies = response.data;\n    return dataMovies;\n  } catch (error) {\n    console.log('Error fetching a movie:', error.message);\n  } finally {\n    isLoading = false;\n  }\n}\n\nif (refs?.moviesContainer) {\n  refs.moviesContainer.addEventListener('click', onModalOpen);\n}\n\nasync function onModalOpen(e) {\n  e.preventDefault();\n  const targetElement = e.target.closest('.movies-item');\n  if (targetElement) {\n    const dataId = targetElement.getAttribute('data-id');\n    const data = await fetchSingleMovie(API_KEY, URLS.SINGLE_MOVIE_URL, dataId);\n    createModalMarkup(data);\n    // window.addEventListener('keydown', onEscKeyPress);\n    refs.backdrop.addEventListener('click', onBackdropClick);\n  }\n}\n\n// function onEscKeyPress(event) {\n//   if (event.code === 'Escape') {\n//     onModalClose();\n//   }\n// }\n\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    onModalClose();\n  }\n}\n\nfunction onModalClose() {\n  refs.modalWrapper.innerHTML = '';\n\n  refs.backdrop.classList.toggle('is-hidden');\n  // document.body.classList.remove('modal-open');\n\n  // refs.backdrop.removeEventListener('click', onModalClose);\n  // refs.closeBtn.removeEventListener('click', onModalClose);\n  window.removeEventListener('keydown', onEscKeyPress);\n}\n","import { refs } from '../refs';\n\nconst POSTER_URL = `https://image.tmdb.org/t/p/w500`;\n\nexport async function createModalMarkup(data) {\n  const {\n    id,\n    budget,\n    genres,\n    origin_country,\n    title,\n    original_title,\n    release_date,\n    revenue,\n    runtime,\n    spoken_languages,\n    vote_average,\n    vote_count,\n    overview,\n    poster_path,\n  } = data;\n\n  const genreNames = genres.map(genre => genre.name).join(', ');\n  const languages = spoken_languages\n    .map(language => language.english_name)\n    .join(', ');\n\n  let markup = `<div class=\"movie-item-detailed\" id=${id}>\n        <img src=\"${POSTER_URL}${poster_path}\" class=\"movie-poster\" alt=\"movie poster\">\n        <h2 class=\"modal-title\">${title}</h2>\n        <h3 class=\"modal-original-title\"><span class=\"modal-bold\">Original title</span>: ${original_title}</h3>\n        <p class=\"modal-genres\"><span class=\"modal-bold\">Genres:</span> ${genreNames}</p>\n        <p class=\"orig-country\"><span class=\"modal-bold\">Country of origin:</span> ${origin_country}</p>\n        <p class=\"modal-release-date\"><span class=\"modal-bold\">Release date:</span> ${release_date}</p>\n        <p class=\"modal-movie-description\"><span class=\"modal-bold\">Desription:</span> ${overview}</p>\n        <p class=\"languages\"><span class=\"modal-bold\">Spoken languages:</span> ${languages}</p>\n        <span class=\"budget\"><span class=\"modal-bold\">Budget:</span> $${(\n          budget / 1000000\n        ).toFixed()} mln</span>\n        <span class=\"revenue\"><span class=\"modal-bold\">Revenue:</span> $${(\n          revenue / 1000000\n        ).toFixed()} mln</span>\n        <p class=\"runtime\"><span class=\"modal-bold\">Time:</span> ${runtime} minutes</p>\n        <span class=\"rating\"><span class=\"modal-bold\">Rating:</span> ${vote_average}</span>\n        <span class=\"vote-count\"><span class=\"modal-bold\">Total votes:</span> ${vote_count}</span>\n      </div>`;\n\n  refs.backdrop.classList.remove('is-hidden');\n  refs.modalWrapper.innerHTML = markup;\n\n  //   refs.closeBtn = document.querySelector('.modal-close-btn');\n  //   refs.closeBtn.addEventListener('click', onModalClose);\n  window.addEventListener('keydown', onEscKeyPress);\n}\n\nif (refs?.closeBtn) {\n  refs.closeBtn.addEventListener('click', onModalClose);\n}\n\nfunction onModalClose() {\n  refs.modalWrapper.innerHTML = '';\n\n  refs.backdrop.classList.toggle('is-hidden');\n  // document.body.classList.remove('modal-open');\n\n  // refs.backdrop.removeEventListener('click', onModalClose);\n  // refs.closeBtn.removeEventListener('click', onModalClose);\n  window.removeEventListener('keydown', onEscKeyPress);\n}\n\nfunction onEscKeyPress(event) {\n  if (event.code === 'Escape') {\n    onModalClose();\n  }\n}\n\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    onModalClose();\n  }\n}\n","import axios from 'axios';\nimport { refs } from '../refs.js';\n\nexport async function searchMovie(key, url, searchQuery, renderFoundItems) {\n  try {\n    const response = await axios.get(\n      `${url}?api_key=${key}&query=${searchQuery}`\n    );\n    console.log(response);\n    const queryFoundMovies = response.data.results;\n    if (queryFoundMovies) {\n      refs.moviesList.innerHTML = '';\n    }\n\n    renderFoundItems(queryFoundMovies);\n  } catch (error) {\n    console.log('Error fetching trending movies:', error.message);\n  }\n}\n","import { refs } from '../refs';\nimport { genres } from '../constants';\n\nconst POSTER_URL = `https://image.tmdb.org/t/p/w500`;\n\nfunction getGenres(genre_ids) {\n  return genre_ids\n    .map(id => {\n      const genre = genres.find(g => g.id === id);\n      return genre ? genre.name : '';\n    })\n    .filter(Boolean)\n    .join(', ');\n}\n\nexport function renderFoundMovies(foundMovies) {\n  const foundItems = foundMovies\n    .map(\n      ({\n        id,\n        genre_ids,\n        original_title,\n        overview,\n        release_date,\n        vote_average,\n        vote_count,\n        poster_path,\n      }) => {\n        const genreNames = getGenres(genre_ids);\n\n        return `<li class=\"movies-item\" data-id=${id}>\n            <img src=\"${POSTER_URL}${poster_path}\" class=\"movie-poster\" alt=\"movie poster\">\n            <div class=\"movie-info\">\n            <h2 class=\"movie-title\">${original_title}</h2>\n            <p class=\"movie-description\">${overview}</p>\n              <p class=\"movie-genres\">Genres: ${\n                genreNames || 'Sorry, no genres available'\n              }</p>\n                <p class=\"movie-genres\">Release date: ${release_date}</p>\n            <span class=\"movie-rate\">Rating: ${vote_average.toFixed(2)}</span> \n                 <span class=\"movie-rate-count\">Total votes: ${vote_count}</span> \n          </div>     \n          </li>`;\n      }\n    )\n    .join('');\n\n  refs.moviesList.insertAdjacentHTML('beforeend', foundItems);\n}\n","import { refs } from './js/refs';\nimport { refs2 } from './js/refs2';\nimport { refs3 } from './js/refs3';\nimport axios from 'axios';\n\nimport { URLS } from './js/constants.js';\n\nimport { fetchTrendingMovies } from './js/TrendingMovies/fetchTrendingMovies.js';\nimport { renderTrendingMovies } from './js/TrendingMovies/renderTrendingMovies.js';\n\nimport { searchMovie } from './js/TrendingMovies/searchMovie.js';\nimport { renderFoundMovies } from './js/TrendingMovies/renderFoundMovies.js';\n\nimport { fetchTrendingSeries } from './js/TrendingSeries/fetchTrendingSeries.js';\nimport { renderTrendingSeries } from './js/TrendingSeries/renderTrendingSeries.js';\n\nimport { searchSeries } from './js/TrendingSeries/searchSeries.js';\nimport { renderFoundSeries } from './js/TrendingSeries/renderFoundSeries.js';\n\nimport { fetchTrendingPeople } from './js/TrendingPeople/fetchTrendingPeople.js';\nimport { renderTrendingPeople } from './js/TrendingPeople/renderTrendingPeople.js';\n\nimport { searchPerson } from './js/TrendingPeople/searchPerson.js';\nimport { renderFoundPerson } from './js/TrendingPeople/renderFoundPerson.js';\n\nimport { fetchSingleSeries } from './js/TrendingSeries/fetchSingleSeries.js';\nimport { createSeriesModalMarkup } from './js/helpers/createSeriesModalMarkup.js';\n\nimport { fetchSinglePerson } from './js/TrendingPeople/fetchSinglePerson.js';\nimport { createPersonModalMarkup } from './js/helpers/createPersonModalMarkup.js';\n\nconst API_KEY = '86bcaf318e232372b2e8e2623c959f88';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/week';\nconst BASE_SERIES_URL = 'https://api.themoviedb.org/3/trending/tv/week';\nconst BASE_PEOPLE_URL = 'https://api.themoviedb.org/3/trending/person/week';\n\nconst SEARCH_MOVIE_URL = 'https://api.themoviedb.org/3/search/movie';\nconst SEARCH_SERIES_URL = 'https://api.themoviedb.org/3/search/tv';\nconst SEARCH_PERSON_URL = 'https://api.themoviedb.org/3/search/person';\n\n// let currentPage = 1;\n\n// fetchTrendingMovies(API_KEY, BASE_URL, renderTrendingMovies, currentPage);\n\n// fetchTrendingSeries(API_KEY, BASE_SERIES_URL, renderTrendingSeries);\n\n// fetchTrendingPeople(API_KEY, BASE_PEOPLE_URL, renderTrendingPeople);\n\nlet isSearching = false;\n\nif (refs?.form) {\n  refs.form.addEventListener('submit', e => {\n    e.preventDefault();\n    const query = refs.form.searchQuery.value.trim();\n\n    if (query) {\n      isSearching = true;\n      searchMovie(API_KEY, SEARCH_MOVIE_URL, query, renderFoundMovies);\n    } else {\n      isSearching = false;\n    }\n  });\n}\n"],"names":["$37e33676934ad046$export$21666b427502ea6d","form","document","querySelector","moviesContainer","moviesList","targetObserver","backdrop","modalWrapper","closeBtn","$bpxeT","parcelRequire","$4bcacd1770b5f760$export$ae4a60d31ab53252","movies","trendingMovies","map","param","id","genre_ids","original_title","overview","vote_average","poster_path","genreNames","genre","$4s6iC","genres","find","g","name","filter","Boolean","join","$4bcacd1770b5f760$var$getGenres","concat","toFixed","insertAdjacentHTML","$a1904e15730cf304$var$POSTER_URL","$a1904e15730cf304$export$fc0ff788b21a7621","data","$a1904e15730cf304$var$_createModalMarkup","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","budget","origin_country","title","release_date","revenue","runtime","spoken_languages","vote_count","languages","markup","language","english_name","classList","remove","innerHTML","window","addEventListener","$a1904e15730cf304$var$onEscKeyPress","$a1904e15730cf304$var$onModalClose","toggle","removeEventListener","event","code","$27bd9ee829202bf4$var$API_KEY","$27bd9ee829202bf4$export$7206e9da159570de","key","url","$27bd9ee829202bf4$var$_fetchSingleMovie","response","dataMovies","isLoading","$dIxxU","default","get","_ctx","sent","console","log","t0","message","$27bd9ee829202bf4$var$_onModalOpen","e","targetElement","dataId","preventDefault","target","closest","getAttribute","URLS","SINGLE_MOVIE_URL","$27bd9ee829202bf4$var$onBackdropClick","currentTarget","onEscKeyPress","$ca020bb5667214b6$var$API_KEY","$ca020bb5667214b6$var$BASE_URL","$ca020bb5667214b6$var$currentPage","$ca020bb5667214b6$export$a2840eca364d9ff2","currentPage1","$ca020bb5667214b6$var$_fetchTrendingMovies","results","$ca020bb5667214b6$var$observer","IntersectionObserver","entries","observer","$ca020bb5667214b6$var$_onLoadMore","root","rootMargin","threshold","forEach","entry","isIntersecting","then","body","observe","catch","err","$458a420dbe5c4a85$export$dd14e5c8db127693","searchQuery","renderFoundItems","$458a420dbe5c4a85$var$_searchMovie","queryFoundMovies","$1dd08296ea6f3ae9$export$e70f4eb8e1a081ef","foundMovies","foundItems","$1dd08296ea6f3ae9$var$getGenres","query","value","trim"],"version":3,"file":"index.c9842283.js.map"}