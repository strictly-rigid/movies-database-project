var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},n={},s={},t=e.parcelRequired7c6;null==t&&((t=function(e){if(e in n)return n[e].exports;if(e in s){var t=s[e];delete s[e];var a={id:e,exports:{}};return n[e]=a,t.call(a.exports,a,a.exports),a.exports}var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}).register=function(e,n){s[e]=n},e.parcelRequired7c6=t);const a={form:document.querySelector(".search-form"),moviesContainer:document.querySelector(".data-container"),moviesList:document.querySelector(".movies-list"),targetObserverMovies:document.querySelector(".js-guard-movies"),targetObserverSearch:document.querySelector(".js-guard-search"),backdrop:document.querySelector(".backdrop"),modalWrapper:document.querySelector(".movie-item-wrapper"),endResultsInfo:document.querySelector(".no-results-info-movies"),closeBtn:document.querySelector(".modal-close-btn")};var o=t("2shzp"),r=t("8G1wF");r=t("8G1wF");function i(e){const n=e.map((({id:e,genre_ids:n,original_title:s,overview:t,vote_average:a,poster_path:o})=>{const i=function(e){return e.map((e=>{const n=r.genres.find((n=>n.id===e));return n?n.name:""})).filter(Boolean).join(", ")}(n);return`<li class="movies-item" data-id=${e}>\n            <img src="https://image.tmdb.org/t/p/w500${o}" class="movie-poster" alt="movie poster">\n            <div class="movie-info">\n            <h2 class="movie-title">${s}</h2>\n            <p class="movie-description">${t}</p>\n            <p class="movie-genres">Genres: ${i||"Sorry, no genres available"}</p>\n            <span class="movie-rate">Rating: ${a.toFixed(2)}</span> \n          </div>\n     \n          </li>`})).join("");a.moviesList.insertAdjacentHTML("beforeend",n)}r=t("8G1wF");function l(e){const n=e.map((({id:e,genre_ids:n,original_title:s,overview:t,release_date:a,vote_average:o,vote_count:i,poster_path:l})=>{const c=function(e){return e.map((e=>{const n=r.genres.find((n=>n.id===e));return n?n.name:""})).filter(Boolean).join(", ")}(n);return`<li class="movies-item" data-id=${e}>\n            <img src="https://image.tmdb.org/t/p/w500${l}" class="movie-poster" alt="movie poster">\n            <div class="movie-info">\n            <h2 class="movie-title">${s}</h2>\n            <p class="movie-description">${t}</p>\n              <p class="movie-genres">Genres: ${c||"Sorry, no genres available"}</p>\n                <p class="movie-genres">Release date: ${a}</p>\n            <span class="movie-rate">Rating: ${o.toFixed(2)}</span> \n                 <span class="movie-rate-count">Total votes: ${i}</span> \n          </div>     \n          </li>`})).join("");a.moviesList.insertAdjacentHTML("beforeend",n)}o=t("2shzp");async function c(e,n,s,t){try{return await o.default.get(`${n}?api_key=${e}&query=${s}&page=${t}`)}catch(e){console.log("Error fetching trending movies:",e.message)}}o=t("2shzp");let d=!1;async function p(e,n,s){try{d=!0;const t=await o.default.get(`${n}/${s}?api_key=${e}`);console.log(t);return t.data}catch(e){console.log("Error fetching a movie:",e.message)}finally{d=!1}}async function m(e){const{id:n,budget:s,genres:t,origin_country:o,title:r,original_title:i,release_date:l,revenue:c,runtime:d,spoken_languages:p,vote_average:m,vote_count:f,overview:b,poster_path:h}=e;let y=`<div class="movie-item-detailed" id=${n}>\n        <img src="https://image.tmdb.org/t/p/w500${h}" class="movie-poster" alt="movie poster">\n        <h2 class="modal-title">${r}</h2>\n        <h3 class="modal-original-title"><span class="modal-bold">Original title</span>: ${i}</h3>\n        <p class="modal-genres"><span class="modal-bold">Genres:</span> ${t.map((e=>e.name)).join(", ")}</p>\n        <p class="orig-country"><span class="modal-bold">Country of origin:</span> ${o}</p>\n        <p class="modal-release-date"><span class="modal-bold">Release date:</span> ${l}</p>\n        <p class="modal-movie-description"><span class="modal-bold">Desription:</span> ${b}</p>\n        <p class="languages"><span class="modal-bold">Spoken languages:</span> ${p.map((e=>e.english_name)).join(", ")}</p>\n        <span class="budget"><span class="modal-bold">Budget:</span> $${(s/1e6).toFixed()} mln</span>\n        <span class="revenue"><span class="modal-bold">Revenue:</span> $${(c/1e6).toFixed()} mln</span>\n        <p class="runtime"><span class="modal-bold">Time:</span> ${d} minutes</p>\n        <span class="rating"><span class="modal-bold">Rating:</span> ${m}</span>\n        <span class="vote-count"><span class="modal-bold">Total votes:</span> ${f}</span>\n      </div>`;a.backdrop.classList.remove("is-hidden"),a.modalWrapper.innerHTML=y,a.backdrop.addEventListener("click",g),window.addEventListener("keydown",u),a.closeBtn.addEventListener("click",v)}function v(){a.modalWrapper.innerHTML="",a.backdrop.classList.add("is-hidden"),a.backdrop.removeEventListener("click",v),a.closeBtn.removeEventListener("click",v),window.removeEventListener("keydown",u)}function u(e){"Escape"===e.code&&v()}function g(e){e.currentTarget===e.target&&v()}var f=t("kj8Rd");let b="",h=1,y=1;async function $(e,n,s){try{isLoading=!0;const t=await o.default.get(`${n}?api_key=${e}&page=${s}`);t.data.total_pages===y&&((0,f.notifyEndResults)(),L.unobserve(a.targetObserverMovies));return t.data.results}catch(e){console.log("Error fetching trending movies:",e.message)}finally{isLoading=!1}}let L=new IntersectionObserver((function(e,n){console.log(e),e.forEach((e=>{e.isIntersecting&&(h+=1,$("86bcaf318e232372b2e8e2623c959f88",r.URLS.BASE_MOVIES_URL,h).then((e=>i(e))))}))}),{root:null,rootMargin:"400px",threshold:1});$("86bcaf318e232372b2e8e2623c959f88",r.URLS.BASE_MOVIES_URL,h).then((e=>i(e))).then((()=>L.observe(a.targetObserverMovies))).catch((e=>console.log(e))),a.form.addEventListener("submit",(async function(e){e.preventDefault(),L.unobserve(a.targetObserverMovies),_.unobserve(a.targetObserverSearch),a.backdrop.classList.add("is-hidden"),b=a.form.searchQuery.value.trim(),y=1;try{a.moviesList.innerHTML="",a.endResultsInfo.classList.add("visually-hidden");const e=await c("86bcaf318e232372b2e8e2623c959f88",r.URLS.SEARCH_MOVIE_URL,b,y),{results:n,total_results:s}=e.data;n&&n.length>0?(l(n),_.observe(a.targetObserverSearch)):(a.endResultsInfo.classList.remove("visually-hidden"),(0,f.notifyNoResults)()),s&&s<=20&&e.data.total_pages===y&&((0,f.notifyEndResults)(),_.unobserve(a.targetObserverSearch))}catch(e){console.log("Error fetching movies:",e.message)}finally{a.form.searchQuery.value=""}}));let _=new IntersectionObserver((function(e){e.forEach((e=>{e.isIntersecting&&(y+=1,c("86bcaf318e232372b2e8e2623c959f88",r.URLS.SEARCH_MOVIE_URL,b,y).then((e=>{const{results:n}=e.data;l(n)})))}))}),{root:null,rootMargin:"400px",threshold:1});a.moviesContainer.addEventListener("click",(async function(e){e.preventDefault();const n=e.target.closest(".movies-item");if(n){const e=n.getAttribute("data-id");m(await p("86bcaf318e232372b2e8e2623c959f88",r.URLS.SINGLE_MOVIE_URL,e))}}));
//# sourceMappingURL=index.77dc3984.js.map
