{"mappings":"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","sources":["src/js/TrendingPeople/fetchTrendingPeople.js","src/js/refs3.js","src/js/TrendingPeople/renderTrendingPeople.js","src/js/TrendingPeople/renderFoundPerson.js","src/js/TrendingPeople/searchPerson.js","src/js/TrendingPeople/fetchSinglePerson.js","src/js/helpers/createPersonModalMarkup.js"],"sourcesContent":["import { refs3 } from '../refs3';\nimport {\n  URLS,\n  trendingObserverOptions,\n  searchObserverOptions,\n} from '../constants';\nimport { renderTrendingPeople } from './renderTrendingPeople';\nimport { renderFoundPerson } from './renderFoundPerson';\nimport { searchPerson } from './searchPerson';\nimport { fetchSinglePerson } from './fetchSinglePerson';\nimport { createPersonModalMarkup } from '../helpers/createPersonModalMarkup';\nimport { notifyEndResults, notifyNoResults } from '../helpers/notifyWarnings';\nimport { fetchData } from '../helpers/fetchers';\nimport { setNewObserver } from '../helpers/setNewObserver';\n\nconst API_KEY = process.env.API_KEY;\nlet query = '';\nlet currentPage = 1;\nlet currentSearchPage = 1;\n\n/* ====================== TRENDING ======================  */\n\nasync function fetchTrendingPeople(currentPage) {\n  try {\n    const response = await fetchData(URLS.BASE_PEOPLE_URL, {\n      api_key: API_KEY,\n      page: currentPage,\n    });\n\n    if (response.total_pages === currentSearchPage) {\n      notifyEndResults();\n      trendingObserver.unobserve(refs3.targetObserver);\n    }\n    const dataPeople = response.results;\n    return dataPeople;\n  } catch (error) {\n    console.log('Error fetching trending people:', error.message);\n  }\n}\n\nconst trendingObserver = setNewObserver(\n  onLoadMoreTrending,\n  trendingObserverOptions\n);\n\nfunction onLoadMoreTrending(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentPage += 1;\n      fetchTrendingPeople(currentPage).then(data => renderTrendingPeople(data));\n    }\n  });\n}\n\n// Initializing fetch request for trending\n\nfetchTrendingPeople(currentPage)\n  .then(data => renderTrendingPeople(data))\n  .then(() => trendingObserver.observe(refs3.targetObserver))\n  .catch(err => console.log(err));\n\n/* ====================== SEARCH ======================  */\n\nrefs3.form.addEventListener('submit', searchByName);\n\nasync function searchByName(e) {\n  e.preventDefault();\n\n  refs3.backdrop.classList.add('is-hidden');\n  query = refs3.form.searchQuery.value.trim();\n\n  resetState();\n\n  try {\n    const personData = await searchPerson(\n      API_KEY,\n      URLS.SEARCH_PERSON_URL,\n      query,\n      currentSearchPage\n    );\n\n    const { results, total_results } = personData.data;\n\n    if (results && results.length > 0) {\n      renderFoundPerson(results);\n      searchObserver.observe(refs3.targetObserverSearch);\n    } else {\n      refs3.endResultsInfo.classList.remove('visually-hidden');\n      notifyNoResults();\n    }\n\n    if (\n      total_results &&\n      total_results <= 20 &&\n      personData.data.total_pages === currentSearchPage\n    ) {\n      notifyEndResults();\n      searchObserver.unobserve(refs3.targetObserverSearch);\n    }\n  } catch (error) {\n    console.log('Error fetching person:', error.message);\n  } finally {\n    refs3.form.searchQuery.value = '';\n  }\n}\n\nfunction resetState() {\n  trendingObserver.unobserve(refs3.targetObserver);\n  searchObserver.unobserve(refs3.targetObserverSearch);\n\n  refs3.list.innerHTML = '';\n  refs3.endResultsInfo.classList.add('visually-hidden');\n\n  currentSearchPage = 1;\n}\n\nconst searchObserver = setNewObserver(onLoadMoreSearch, searchObserverOptions);\n\nfunction onLoadMoreSearch(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentSearchPage += 1;\n      searchPerson(\n        API_KEY,\n        URLS.SEARCH_PERSON_URL,\n        query,\n        currentSearchPage\n      ).then(dataFound => {\n        const { results } = dataFound.data;\n        renderFoundPerson(results);\n      });\n    }\n  });\n}\n\n/* ====================== PERSON'S DETAILS ======================  */\n\nrefs3.dataContainer.addEventListener('click', onPersonItemClick);\n\nasync function onPersonItemClick(e) {\n  e.preventDefault();\n\n  const targetElement = e.target.closest('.person-item');\n  if (targetElement) {\n    const dataId = targetElement.getAttribute('data-id');\n    const data = await fetchSinglePerson(\n      API_KEY,\n      URLS.SINGLE_PERSON_URL,\n      dataId\n    );\n    createPersonModalMarkup(data);\n  }\n}\n","export const refs3 = {\n  form: document.querySelector('.search-form-people'),\n  dataContainer: document.querySelector('.people-data-container'),\n  list: document.querySelector('.people-list'),\n  targetObserver: document.querySelector('.js-guard-people'),\n  targetObserverSearch: document.querySelector('.js-guard-search'),\n  backdrop: document.querySelector('.person-backdrop'),\n  modalWrapper: document.querySelector('.person-item-wrapper'),\n  endResultsInfo: document.querySelector('.no-results-info-people'),\n  closeBtn: document.querySelector('.modal-people-close-icon'),\n};\n","import { refs3 } from '../refs3';\nimport { URLS, genders } from '../constants';\n\nexport function renderTrendingPeople(people) {\n  const trendingPeople = people\n    .map(({ id, name, gender, known_for_department, profile_path }) => {\n      const imageSrc = profile_path\n        ? `${URLS.POSTER_URL}${profile_path}`\n        : URLS.DEFAULT_IMAGE;\n\n      const personGender = genders[gender] || 'Not specified';\n\n      return `<li class=\"person-item\" data-id=${id}>\n            <img\n              src=\"${imageSrc}\"\n              class=\"person-image\"\n              alt=\"person image\"\n            />\n          <div class=\"person-info\">\n            <h2 class=\"person-name\">${name}</h2>\n            <p class=\"person-gender\">${personGender}</p>\n            <p class=\"popular-movies\">Known for: ${\n              known_for_department || 'No data'\n            } </p>\n          </div>\n          </li>`;\n    })\n    .join('');\n\n  refs3.list.insertAdjacentHTML('beforeend', trendingPeople);\n}\n","import { refs3 } from '../refs3';\nimport { URLS, genders } from '../constants';\n\nexport function renderFoundPerson(foundPerson) {\n  const foundItems = foundPerson\n    .map(({ id, name, gender, profile_path }) => {\n      const imageSrc = profile_path\n        ? `${URLS.POSTER_URL}${profile_path}`\n        : URLS.DEFAULT_IMAGE;\n\n      const personGender = genders[gender] || 'Not specified';\n\n      return `<li class=\"person-item\" data-id=${id}>\n            <img\n              src=\"${imageSrc}\"\n              class=\"person-image\"\n              alt=\"person image\"\n            />\n            <h2 class=\"person-name\">${name}</h2>\n            <p class=\"person-gender\">Gender: ${personGender}</p>\n          \n          </li>`;\n    })\n    .join('');\n\n  refs3.list.insertAdjacentHTML('beforeend', foundItems);\n}\n","import axios from 'axios';\n\nexport async function searchPerson(key, url, searchQuery, page) {\n  try {\n    const response = await axios.get(\n      `${url}?api_key=${key}&query=${searchQuery}&page=${page}`\n    );\n\n    console.log(response);\n\n    return response;\n  } catch (error) {\n    console.log('Error fetching person:', error.message);\n  }\n}\n","import axios from 'axios';\n\nexport async function fetchSinglePerson(key, url, id) {\n  try {\n    const response = await axios.get(`${url}/${id}?api_key=${key}`);\n    const personDetails = response.data;\n\n    return personDetails;\n  } catch (error) {\n    console.log('Error fetching person\"s data:', error.message);\n  }\n}\n","import { refs3 } from '../refs3';\nimport { URLS, genders } from '../constants';\nimport { onBackdropClick, onEscKeyPress } from './onCloseFunctions';\n\nimport { notifyAddSuccess, notifyIsInFavorites } from './notifyWarnings';\n\nconst favoritePeopleList =\n  JSON.parse(localStorage.getItem('favorite_people')) ?? [];\n\nexport async function createPersonModalMarkup(data) {\n  const {\n    id,\n    birthday,\n    biography,\n    place_of_birth,\n    gender,\n    name,\n    known_for_department,\n    profile_path,\n    popularity,\n  } = data;\n\n  const personImg = profile_path\n    ? `${URLS.POSTER_URL}${profile_path}`\n    : URLS.DEFAULT_IMAGE;\n  const personGender = genders[gender] || 'Not specified';\n\n  let markup = `<div class=\"person-item-detailed\" id=${id}>\n           <img src=\"${personImg}\" class=\"person-image\" alt=\"person image\">\n            <h2 class=\"modal-name modal-title\">${name}</h2>\n            <p class=\"gender\"> <span class=\"modal-bold\"> Gender:</span> ${personGender}</p>\n            <p class=\"birthday\"> <span class=\"modal-bold\"> Born:</span> ${\n              birthday || 'unknown'\n            }</p>\n            <p class=\"place_of_birth\"> <span class=\"modal-bold\"> Place of birth:</span> ${\n              place_of_birth || 'unknown'\n            }</span>\n            <p class=\"known_for\"> <span class=\"modal-bold\"> Known for:</span> ${\n              known_for_department || 'No data'\n            }</p>\n            <p class=\"biography\"> <span class=\"modal-bold\">Bio:</span> ${\n              biography || 'no info'\n            }</p>\n            <p class=\"popularity\"> <span class=\"modal-bold\"> Popularity:</span> ${popularity}</p>\n            <button type=\"button\" class=\"person-fav\">Add to favorites</button>\n          </div>`;\n\n  refs3.backdrop.classList.remove('is-hidden');\n  refs3.modalWrapper.innerHTML = markup;\n\n  refs3.backdrop.addEventListener('click', event =>\n    onBackdropClick(event, onModalClose)\n  );\n  window.addEventListener('keydown', event =>\n    onEscKeyPress(event, onModalClose)\n  );\n  refs3.closeBtn.addEventListener('click', onModalClose);\n\n  /* ======================  ADD TO FAVORITES ======================  */\n  const addFavBtn = document.querySelector('.person-fav');\n  addFavBtn.addEventListener('click', () => addToFavorites(data));\n}\n\nfunction onModalClose() {\n  refs3.modalWrapper.innerHTML = '';\n\n  refs3.backdrop.classList.add('is-hidden');\n\n  refs3.backdrop.removeEventListener('click', onModalClose);\n  refs3.closeBtn.removeEventListener('click', onModalClose);\n  window.removeEventListener('keydown', onEscKeyPress);\n}\n\nfunction addToFavorites(person) {\n  const inStorage = favoritePeopleList.some(fav => fav.id === person.id);\n  const personItem = {\n    id: person.id,\n    name: person.name,\n    gender: person.gender,\n    birthday: person.birthday,\n    biography: person.biography,\n    knownFor: person.known_for_department,\n    placeOfBirth: person.place_of_birth,\n    profile_path: person.profile_path,\n    popularity: person.popularity,\n  };\n\n  if (!inStorage) {\n    favoritePeopleList.push(personItem);\n    localStorage.setItem('favorite_people', JSON.stringify(favoritePeopleList));\n    notifyAddSuccess(person.name);\n  } else {\n    notifyIsInFavorites(person.name);\n  }\n}\n"],"names":["$bpxeT","parcelRequire","$a4d089102ee19eea$export$1667d6aa2cee11d8","form","document","querySelector","dataContainer","list","targetObserver","targetObserverSearch","backdrop","modalWrapper","endResultsInfo","closeBtn","$52b520831d0c27f6$export$1f3529df0466b8e9","people","trendingPeople","map","param","id","name","gender","known_for_department","profile_path","imageSrc","concat","$4s6iC","URLS","POSTER_URL","DEFAULT_IMAGE","personGender","genders","join","insertAdjacentHTML","$db9d45747ac3d0d4$export$706c7750293f7a13","foundPerson","foundItems","$a3b62ede7df7fa7d$export$791a87ce43433885","key","url","searchQuery","page","$a3b62ede7df7fa7d$var$_searchPerson","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","$dIxxU","default","get","_ctx","sent","console","log","t0","message","$da5d5aed0ab69a80$export$bda05f064222d25a","$da5d5aed0ab69a80$var$_fetchSinglePerson","personDetails","data","$50ccbe03e1f09353$var$ref","$50ccbe03e1f09353$var$favoritePeopleList","JSON","parse","localStorage","getItem","$50ccbe03e1f09353$export$9a7ad2d283fab89","$50ccbe03e1f09353$var$_createPersonModalMarkup","birthday","biography","place_of_birth","popularity","personImg","markup","classList","remove","innerHTML","addEventListener","event","$gOfal","onBackdropClick","$50ccbe03e1f09353$var$onModalClose","window","onEscKeyPress","$50ccbe03e1f09353$var$addToFavorites","add","removeEventListener","person","inStorage","some","fav","personItem","knownFor","placeOfBirth","$lG111","notifyIsInFavorites","push","setItem","stringify","notifyAddSuccess","$a29f26a4a40c2f0a$var$API_KEY","undefined","$a29f26a4a40c2f0a$var$query","$a29f26a4a40c2f0a$var$currentPage","$a29f26a4a40c2f0a$var$currentSearchPage","$a29f26a4a40c2f0a$var$fetchTrendingPeople","currentPage1","$a29f26a4a40c2f0a$var$_fetchTrendingPeople","dataPeople","$ghquj","fetchData","BASE_PEOPLE_URL","api_key","total_pages","notifyEndResults","$a29f26a4a40c2f0a$var$trendingObserver","unobserve","results","$7t6Gw","setNewObserver","entries","forEach","entry","isIntersecting","then","trendingObserverOptions","$a29f26a4a40c2f0a$var$_searchByName","e","personData","_data","total_results","preventDefault","value","trim","$a29f26a4a40c2f0a$var$resetState","SEARCH_PERSON_URL","length","$a29f26a4a40c2f0a$var$searchObserver","observe","notifyNoResults","catch","err","dataFound","searchObserverOptions","$a29f26a4a40c2f0a$var$_onPersonItemClick","targetElement","dataId","target","closest","getAttribute","SINGLE_PERSON_URL"],"version":3,"file":"trendingpeople.e4e77494.js.map"}