{"mappings":"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","sources":["src/js/TrendingPeople/fetchTrendingPeople.js","src/js/refs3.js","src/js/TrendingPeople/renderTrendingPeople.js","src/js/TrendingPeople/renderFoundPerson.js","src/js/TrendingPeople/searchPerson.js","src/js/TrendingPeople/fetchSinglePerson.js","src/js/helpers/createPersonModalMarkup.js"],"sourcesContent":["import axios from 'axios';\nimport { refs3 } from '../refs3';\nimport {\n  URLS,\n  trendingObserverOptions,\n  searchObserverOptions,\n} from '../constants';\nimport { renderTrendingPeople } from './renderTrendingPeople';\nimport { renderFoundPerson } from './renderFoundPerson';\nimport { searchPerson } from './searchPerson';\nimport { fetchSinglePerson } from './fetchSinglePerson';\nimport { createPersonModalMarkup } from '../helpers/createPersonModalMarkup';\nimport { notifyEndResults, notifyNoResults } from '../helpers/notifyWarnings';\n\nconst API_KEY = '86bcaf318e232372b2e8e2623c959f88';\nlet query = '';\nlet currentPage = 1;\nlet currentSearchPage = 1;\nlet isLoading = false;\n\n/* ====================== TRENDING ======================  */\n\nasync function fetchTrendingPeople(key, url, currentPage) {\n  try {\n    isLoading = true;\n    const response = await axios.get(\n      `${url}?api_key=${key}&page=${currentPage}`\n    );\n    console.log(response);\n\n    if (response.data.total_pages === currentSearchPage) {\n      notifyEndResults();\n      trendingObserver.unobserve(refs3.targetObserverPeople);\n    }\n    const dataPeople = response.data.results;\n    return dataPeople;\n  } catch (error) {\n    console.log('Error fetching trending people:', error.message);\n  } finally {\n    isLoading = false;\n  }\n}\n\nlet trendingObserver = new IntersectionObserver(\n  onLoadMoreTrending,\n  trendingObserverOptions\n);\nfunction onLoadMoreTrending(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentPage += 1;\n      fetchTrendingPeople(API_KEY, URLS.BASE_PEOPLE_URL, currentPage).then(\n        data => renderTrendingPeople(data)\n      );\n    }\n  });\n}\n\nfetchTrendingPeople(API_KEY, URLS.BASE_PEOPLE_URL, currentPage)\n  .then(data => renderTrendingPeople(data))\n  .then(() => trendingObserver.observe(refs3.targetObserverPeople))\n  .catch(err => console.log(err));\n\n/* ====================== SEARCH ======================  */\n\nrefs3.form.addEventListener('submit', searchByName);\n\nasync function searchByName(e) {\n  e.preventDefault();\n\n  trendingObserver.unobserve(refs3.targetObserverPeople);\n  searchObserver.unobserve(refs3.targetObserverSearch);\n\n  refs3.backdrop.classList.add('is-hidden');\n  query = refs3.form.searchQuery.value.trim();\n  currentSearchPage = 1;\n\n  try {\n    refs3.peopleList.innerHTML = '';\n    refs3.endResultsInfo.classList.add('visually-hidden');\n\n    const personData = await searchPerson(\n      API_KEY,\n      URLS.SEARCH_PERSON_URL,\n      query,\n      currentSearchPage\n    );\n\n    const { results, total_results } = personData.data;\n\n    if (results && results.length > 0) {\n      renderFoundPerson(results);\n      searchObserver.observe(refs3.targetObserverSearch);\n    } else {\n      refs3.endResultsInfo.classList.remove('visually-hidden');\n      notifyNoResults();\n    }\n\n    if (\n      total_results &&\n      total_results <= 20 &&\n      personData.data.total_pages === currentSearchPage\n    ) {\n      notifyEndResults();\n      searchObserver.unobserve(refs3.targetObserverSearch);\n    }\n  } catch (error) {\n    console.log('Error fetching person:', error.message);\n  } finally {\n    refs3.form.searchQuery.value = '';\n  }\n}\n\nlet searchObserver = new IntersectionObserver(\n  onLoadMoreSearch,\n  searchObserverOptions\n);\n\nfunction onLoadMoreSearch(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentSearchPage += 1;\n      searchPerson(\n        API_KEY,\n        URLS.SEARCH_PERSON_URL,\n        query,\n        currentSearchPage\n      ).then(dataFound => {\n        const { results } = dataFound.data;\n        renderFoundPerson(results);\n      });\n    }\n  });\n}\n\n/* ====================== PERSON'S DETAILS ======================  */\n\nrefs3.peopleContainer.addEventListener('click', onPersonItemClick);\n\nasync function onPersonItemClick(e) {\n  e.preventDefault();\n\n  const targetElement = e.target.closest('.person-item');\n  if (targetElement) {\n    const dataId = targetElement.getAttribute('data-id');\n    const data = await fetchSinglePerson(\n      API_KEY,\n      URLS.SINGLE_PERSON_URL,\n      dataId\n    );\n    createPersonModalMarkup(data);\n  }\n}\n","export const refs3 = {\n  form: document.querySelector('.search-form-people'),\n  peopleContainer: document.querySelector('.people-data-container'),\n  peopleList: document.querySelector('.people-list'),\n  targetObserverPeople: document.querySelector('.js-guard-people'),\n  targetObserverSearch: document.querySelector('.js-guard-search'),\n  backdrop: document.querySelector('.person-backdrop'),\n  modalWrapper: document.querySelector('.person-item-wrapper'),\n  endResultsInfo: document.querySelector('.no-results-info-people'),\n  closeBtn: document.querySelector('.modal-people-close-icon'),\n};\n","import { refs3 } from '../refs3';\nimport { URLS, genders } from '../constants';\n\nexport function renderTrendingPeople(people) {\n  const trendingPeople = people\n    .map(({ id, name, gender, known_for_department, profile_path }) => {\n      const imageSrc = profile_path\n        ? `${URLS.POSTER_URL}${profile_path}`\n        : URLS.DEFAULT_IMAGE;\n\n      const personGender = genders[gender] || 'Not specified';\n\n      return `<li class=\"person-item\" data-id=${id}>\n            <img\n              src=\"${imageSrc}\"\n              class=\"person-image\"\n              alt=\"person image\"\n            />\n          <div class=\"person-info\">\n            <h2 class=\"person-name\">${name}</h2>\n            <p class=\"person-gender\">${personGender}</p>\n            <p class=\"popular-movies\">Known for: ${\n              known_for_department || 'No data'\n            } </p>\n          </div>\n          </li>`;\n    })\n    .join('');\n\n  refs3.peopleList.insertAdjacentHTML('beforeend', trendingPeople);\n}\n","import { refs3 } from '../refs3';\nimport { URLS, genders } from '../constants';\n\nexport function renderFoundPerson(foundPerson) {\n  const foundItems = foundPerson\n    .map(({ id, known_for_department, name, gender, profile_path }) => {\n      const imageSrc = profile_path\n        ? `${URLS.POSTER_URL}${profile_path}`\n        : URLS.DEFAULT_IMAGE;\n\n      const personGender = genders[gender] || 'Not specified';\n\n      return `<li class=\"person-item\" data-id=${id}>\n            <img\n              src=\"${imageSrc}\"\n              class=\"person-image\"\n              alt=\"person image\"\n            />\n            <h2 class=\"person-name\">${name}</h2>\n            <p class=\"person-gender\">${personGender}</p>\n          \n          </li>`;\n    })\n    .join('');\n\n  refs3.peopleList.insertAdjacentHTML('beforeend', foundItems);\n}\n","import axios from 'axios';\n\nexport async function searchPerson(key, url, searchQuery, page) {\n  try {\n    const response = await axios.get(\n      `${url}?api_key=${key}&query=${searchQuery}&page=${page}`\n    );\n\n    console.log(response);\n\n    return response;\n  } catch (error) {\n    console.log('Error fetching person:', error.message);\n  }\n}\n","import axios from 'axios';\n\nlet isLoading = false;\n\nexport async function fetchSinglePerson(key, url, id) {\n  try {\n    isLoading = true;\n    const response = await axios.get(`${url}/${id}?api_key=${key}`);\n    const personDetails = response.data;\n\n    return personDetails;\n  } catch (error) {\n    console.log('Error fetching person\"s data:', error.message);\n  } finally {\n    isLoading = false;\n  }\n}\n","import { refs3 } from '../refs3';\nimport { URLS, genders } from '../constants';\nimport { notifyAddSuccess, notifyIsInFavorites } from './notifyWarnings';\n\nconst favoritePeopleList =\n  JSON.parse(localStorage.getItem('favorite_people')) ?? [];\n\nexport async function createPersonModalMarkup(data) {\n  const {\n    id,\n    birthday,\n    biography,\n    place_of_birth,\n    gender,\n    name,\n    known_for_department,\n    profile_path,\n    popularity,\n  } = data;\n  console.log(data);\n\n  const personImg = profile_path\n    ? `${URLS.POSTER_URL}${profile_path}`\n    : URLS.DEFAULT_IMAGE;\n  const personGender = genders[gender] || 'Not specified';\n\n  let markup = `<div class=\"person-item-detailed\" id=${id}>\n           <img src=\"${personImg}\" class=\"person-image\" alt=\"person image\">\n            <h2 class=\"modal-name modal-title\">${name}</h2>\n            <p class=\"gender\"> <span class=\"modal-bold\"> Gender:</span> ${personGender}</p>\n            <p class=\"birthday\"> <span class=\"modal-bold\"> Born:</span> ${\n              birthday || 'unknown'\n            }</p>\n            <p class=\"place_of_birth\"> <span class=\"modal-bold\"> Place of birth:</span> ${\n              place_of_birth || 'unknown'\n            }</span>\n            <p class=\"known_for\"> <span class=\"modal-bold\"> Known for:</span> ${\n              known_for_department || 'No data'\n            }</p>\n            <p class=\"biography\"> <span class=\"modal-bold\">Bio:</span> ${\n              biography || 'no info'\n            }</p>\n            <p class=\"popularity\"> <span class=\"modal-bold\"> Popularity:</span> ${popularity}</p>\n            <button type=\"button\" class=\"person-fav\">Add to favorites</button>\n          </div>`;\n\n  refs3.backdrop.classList.remove('is-hidden');\n  refs3.modalWrapper.innerHTML = markup;\n\n  refs3.backdrop.addEventListener('click', onBackdropClick);\n  window.addEventListener('keydown', onEscKeyPress);\n  refs3.closeBtn.addEventListener('click', onModalClose);\n\n  /* ======================  ADD TO FAVORITES ======================  */\n  const addFavBtn = document.querySelector('.person-fav');\n  addFavBtn.addEventListener('click', () => addToFavorites(data));\n}\n\nfunction onModalClose() {\n  refs3.modalWrapper.innerHTML = '';\n\n  refs3.backdrop.classList.add('is-hidden');\n  // document.body.classList.remove('modal-open');\n\n  refs3.backdrop.removeEventListener('click', onModalClose);\n  refs3.closeBtn.removeEventListener('click', onModalClose);\n  window.removeEventListener('keydown', onEscKeyPress);\n}\n\nfunction onEscKeyPress(event) {\n  if (event.code === 'Escape') {\n    onModalClose();\n  }\n}\n\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    onModalClose();\n  }\n}\n\nfunction addToFavorites(person) {\n  const inStorage = favoritePeopleList.some(fav => fav.id === person.id);\n  const personItem = {\n    id: person.id,\n    name: person.name,\n    gender: person.gender,\n    birthday: person.birthday,\n    biography: person.biography,\n    knownFor: person.known_for_department,\n    placeOfBirth: person.place_of_birth,\n    profile_path: person.profile_path,\n    popularity: person.popularity,\n  };\n\n  if (!inStorage) {\n    favoritePeopleList.push(personItem);\n    localStorage.setItem('favorite_people', JSON.stringify(favoritePeopleList));\n    notifyAddSuccess(person.name);\n  } else {\n    notifyIsInFavorites(person.name);\n  }\n}\n"],"names":["$2shzp","parcelRequire","$e906e16ee62abe85$export$1667d6aa2cee11d8","form","document","querySelector","peopleContainer","peopleList","targetObserverPeople","targetObserverSearch","backdrop","modalWrapper","endResultsInfo","closeBtn","$45ebb74e1e41cb42$export$1f3529df0466b8e9","people","trendingPeople","map","id","name","gender","known_for_department","profile_path","$8G1wF","URLS","POSTER_URL","DEFAULT_IMAGE","genders","join","insertAdjacentHTML","$3031f43cc7f53ebe$export$706c7750293f7a13","foundPerson","foundItems","async","$33a9d54fb0f6f81e$export$791a87ce43433885","key","url","searchQuery","page","response","default","get","console","log","error","message","$d289a749cf5d8107$var$isLoading","$d289a749cf5d8107$export$bda05f064222d25a","data","$06bcc255bee61c4e$var$ref","$06bcc255bee61c4e$var$favoritePeopleList","JSON","parse","localStorage","getItem","$06bcc255bee61c4e$export$9a7ad2d283fab89","birthday","biography","place_of_birth","popularity","markup","classList","remove","innerHTML","addEventListener","$06bcc255bee61c4e$var$onBackdropClick","window","$06bcc255bee61c4e$var$onEscKeyPress","$06bcc255bee61c4e$var$onModalClose","person","inStorage","some","fav","personItem","knownFor","placeOfBirth","$kj8Rd","notifyIsInFavorites","push","setItem","stringify","notifyAddSuccess","$06bcc255bee61c4e$var$addToFavorites","add","removeEventListener","event","code","currentTarget","target","$313ad1f2210997b7$var$query","$313ad1f2210997b7$var$currentPage","$313ad1f2210997b7$var$currentSearchPage","$313ad1f2210997b7$var$isLoading","$313ad1f2210997b7$var$fetchTrendingPeople","currentPage1","total_pages","notifyEndResults","$313ad1f2210997b7$var$trendingObserver","unobserve","results","IntersectionObserver","entries","forEach","entry","isIntersecting","BASE_PEOPLE_URL","then","trendingObserverOptions","observe","catch","err","e","preventDefault","$313ad1f2210997b7$var$searchObserver","value","trim","personData","SEARCH_PERSON_URL","total_results","length","notifyNoResults","dataFound","searchObserverOptions","targetElement","closest","dataId","getAttribute","SINGLE_PERSON_URL"],"version":3,"file":"trendingpeople.378a8b24.js.map"}