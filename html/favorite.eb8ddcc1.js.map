{"mappings":"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","sources":["src/js/refs4.js","src/js/Favorite/favoriteMovies.js","src/js/Favorite/favoriteSeries.js","src/js/Favorite/favoritePeople.js","src/js/Favorite/getFavorite.js"],"sourcesContent":["export const refs4 = {\n  favWrapper: document.querySelector('.favorite-data-container'),\n  favMovies: document.querySelector('.favorite-movies'),\n  favMoviesTitle: document.querySelector('.fav-movies-title'),\n  favSeries: document.querySelector('.favorite-series'),\n  favSeriesTitle: document.querySelector('.fav-series-title'),\n  favPeople: document.querySelector('.favorite-people'),\n  favPeopleTitle: document.querySelector('.fav-people-title'),\n  noResultsMovies: document.querySelector('.no-results-info-movies'),\n  noResultsSeries: document.querySelector('.no-results-info-series'),\n  noResultsPeople: document.querySelector('.no-results-info-people'),\n};\n","import { refs4 } from '../refs4';\nimport { notifyDeleteSuccess } from '../helpers/notifyWarnings';\n\nconst POSTER_URL = `https://image.tmdb.org/t/p/w500`;\n\nlet favoriteMoviesList =\n  JSON.parse(localStorage.getItem('favorite_movies')) ?? [];\n\nexport function renderFavoriteMovies(movies) {\n  const favoriteMovies = movies\n    .map(\n      ({\n        id,\n        title,\n        origTitle,\n        budget,\n        languages,\n        genres,\n        originCountry,\n        releaseDate,\n        posterPath,\n        revenue,\n        runtime,\n        overview,\n        voteAverage,\n        voteCount,\n      }) => {\n        const genreNames = genres.map(genre => genre.name).join(', ');\n        const languagesSpoken = languages.map(language => language).join(', ');\n\n        return `<div class=\"movie-item-detailed-fav\" id=${id}>\n        <img src=\"${POSTER_URL}${posterPath}\" class=\"movie-poster\" alt=\"movie poster\">\n        <h2 class=\"modal-title\" id=\"movieName\">${title}</h2>\n        <h3 class=\"modal-original-title\"><span class=\"modal-bold\">Original title</span>: ${origTitle}</h3>\n        <p class=\"modal-genres\"><span class=\"modal-bold\">Genres:</span> ${genreNames}</p>\n        <p class=\"orig-country\"><span class=\"modal-bold\">Country of origin:</span> ${originCountry}</p>\n        <p class=\"modal-release-date\"><span class=\"modal-bold\">Release date:</span> ${releaseDate}</p>\n        <p class=\"modal-movie-description\"><span class=\"modal-bold\">Desription:</span> ${overview}</p>\n        <p class=\"languages\"><span class=\"modal-bold\">Spoken languages:</span> ${languagesSpoken}</p>\n        <span class=\"budget\"><span class=\"modal-bold\">Budget:</span> $${(\n          budget / 1000000\n        ).toFixed()} mln</span>\n        <span class=\"revenue\"><span class=\"modal-bold\">Revenue:</span> $${(\n          revenue / 1000000\n        ).toFixed()} mln</span>\n        <p class=\"runtime\"><span class=\"modal-bold\">Time:</span> ${runtime} minutes</p>\n\n         <div class=\"movies-modal-rate\">\n        <span class=\"rating\"><span class=\"modal-bold\">Rating:</span> ${voteAverage}</span>\n        <span class=\"vote-count\"><span class=\"modal-bold\">Total votes:</span> ${voteCount}</span>\n        </div>\n\n          <button type=\"button\" class=\"delete-btn-movies\">Delete from favorites</button>\n   \n      </div>`;\n      }\n    )\n    .join('');\n\n  refs4.favMovies.insertAdjacentHTML('beforeend', favoriteMovies);\n\n  const deleteBtns = document.querySelectorAll('.delete-btn-movies');\n  deleteBtns.forEach(btn => {\n    btn.addEventListener('click', event => {\n      const movieItem = event.target.closest('.movie-item-detailed-fav');\n      const deletedName = movieItem.querySelector('#movieName').innerText;\n      deleteFromFavoriteMovies(event, deletedName);\n    });\n  });\n}\n\nfunction deleteFromFavoriteMovies(event, movieName) {\n  const movieId = event.target.closest('.movie-item-detailed-fav').id;\n\n  favoriteMoviesList = favoriteMoviesList.filter(movie => movie.id != movieId);\n\n  localStorage.setItem('favorite_movies', JSON.stringify(favoriteMoviesList));\n\n  event.target.closest('.movie-item-detailed-fav').remove();\n\n  notifyDeleteSuccess(movieName);\n\n  if (favoriteMoviesList.length === 0) {\n    refs4.noResultsMovies.classList.remove('visually-hidden');\n    refs4.favMoviesTitle.classList.add('visually-hidden');\n  }\n}\n","import { refs4 } from '../refs4';\nimport { notifyDeleteSuccess } from '../helpers/notifyWarnings';\n\nconst POSTER_URL = `https://image.tmdb.org/t/p/w500`;\n\nlet favoriteSeriesList =\n  JSON.parse(localStorage.getItem('favorite_series')) ?? [];\n\nexport function renderFavoriteSeries(series) {\n  const favoriteSeries = series\n    .map(\n      ({\n        id,\n        createdBy,\n        inProduction,\n        languages,\n        genres,\n        originCountry,\n        name,\n        firstAir,\n        numberSeasons,\n        numberEpisodes,\n        voteAverage,\n        voteCount,\n        overview,\n        posterPath,\n      }) => {\n        const genreNames = genres.map(genre => genre.name).join(', ');\n        const languagesSpoken = languages.map(language => language).join(', ');\n        const creators = createdBy.map(creator => creator.name).join(', ');\n\n        return `<div class=\"series-item-detailed-fav\" id=${id}>\n       <img src=\"${POSTER_URL}${posterPath}\" class=\"series-poster\" alt=\"series poster\">\n        <h2 class=\"modal-title\" id=\"seriesName\">${name}</h2>\n        <p class=\"modal-genres\"><span class=\"modal-bold\">Genres:</span> ${genreNames}</p>\n       \n        <p class=\"orig-country\"><span class=\"modal-bold\">Origin country:</span> ${originCountry}</p>\n        <p class=\"in-production\"><span class=\"modal-bold\">Still in production:</span> ${inProduction}</p>\n      \n\n     \n        <p class=\"first-air-date\"><span class=\"modal-bold\">First air date:</span> ${firstAir}</p>\n        <p class=\"modal-series-description\"><span class=\"modal-bold\">Desription:</span> ${overview}</p>\n      \n        <p class=\"created-by\"><span class=\"modal-bold\">Creators:</span> ${creators}</p>\n        <p class=\"languages\"><span class=\"modal-bold\">Spoken languages:</span> ${languagesSpoken}</p>\n        <div class=\"series-length\">\n        <span class=\"seasons\"><span class=\"modal-bold\">Number of seasons:</span> ${numberSeasons}</span>\n        <span class=\"episodes\"><span class=\"modal-bold\">Number of episodes:</span> ${numberEpisodes}</span>\n        </div>\n\n        <div class=\"series-modal-rate\">\n         <span class=\"rating\"><span class=\"modal-bold\">Rating:</span> ${voteAverage}</span>\n         <span class=\"vote-count\"><span class=\"modal-bold\">Total votes:</span> ${voteCount}</span>\n         </div>\n\n          <button type=\"button\" class=\"delete-btn-series\">Delete from favorites</button>\n   \n      </div>`;\n      }\n    )\n    .join('');\n\n  refs4.favSeries.insertAdjacentHTML('beforeend', favoriteSeries);\n\n  const deleteBtns = document.querySelectorAll('.delete-btn-series');\n  deleteBtns.forEach(btn => {\n    btn.addEventListener('click', event => {\n      const seriesItem = event.target.closest('.series-item-detailed-fav');\n      const deletedName = seriesItem.querySelector('#seriesName').innerText;\n      deleteFromFavoriteSeries(event, deletedName);\n    });\n  });\n}\n\nfunction deleteFromFavoriteSeries(event, seriesName) {\n  const seriesId = event.target.closest('.series-item-detailed-fav').id;\n\n  favoriteSeriesList = favoriteSeriesList.filter(serie => serie.id != seriesId);\n\n  localStorage.setItem('favorite_series', JSON.stringify(favoriteSeriesList));\n\n  event.target.closest('.series-item-detailed-fav').remove();\n\n  notifyDeleteSuccess(seriesName);\n\n  if (favoriteSeriesList.length === 0) {\n    refs4.noResultsSeries.classList.remove('visually-hidden');\n    refs4.favSeriesTitle.classList.add('visually-hidden');\n  }\n}\n","import { refs4 } from '../refs4';\nimport { genders } from '../constants';\nimport { notifyDeleteSuccess } from '../helpers/notifyWarnings';\n\nconst POSTER_URL = `https://image.tmdb.org/t/p/w500`;\nconst DEFAULT_IMAGE =\n  'https://t4.ftcdn.net/jpg/00/64/67/63/360_F_64676383_LdbmhiNM6Ypzb3FM4PPuFP9rHe7ri8Ju.jpg';\n\nlet favoritePeopleList =\n  JSON.parse(localStorage.getItem('favorite_people')) ?? [];\n\nexport function renderFavoritePeople(people) {\n  const favoritePeople = people\n    .map(\n      ({\n        id,\n        name: personName,\n        gender,\n        birthday,\n        biography,\n        knownFor,\n        placeOfBirth,\n        profile_path,\n        popularity,\n      }) => {\n        const personGender = genders[gender] || 'Not specified';\n        const personImg = profile_path\n          ? `${POSTER_URL}${profile_path}`\n          : DEFAULT_IMAGE;\n\n        return `<div class=\"person-item-detailed-fav\" id=${id}>\n           <img src=\"${personImg}\" class=\"person-image\" alt=\"person image\">\n            <h2 class=\"modal-name modal-title\" id=\"personName\">${personName}</h2>\n            <p class=\"gender\"> <span class=\"modal-bold\"> Gender:</span> ${personGender}</p>\n            <p class=\"birthday\"> <span class=\"modal-bold\"> Born:</span> ${\n              birthday || 'unknown'\n            }</p>\n            <p class=\"place_of_birth\"> <span class=\"modal-bold\"> Place of birth:</span> ${\n              placeOfBirth || 'unknown'\n            }</span>\n            <p class=\"known_for\"> <span class=\"modal-bold\"> Known for:</span> ${\n              knownFor || 'No data'\n            }</p>\n            <p class=\"biography\"> <span class=\"modal-bold\"> Bio:</span> ${\n              biography || 'no info'\n            }</p>\n            <p class=\"popularity\"> <span class=\"modal-bold\"> Popularity:</span> ${popularity}</p>\n            <button type=\"button\" class=\"delete-btn-people\">Delete from favorites</button>\n          </div>`;\n      }\n    )\n    .join('');\n\n  refs4.favPeople.insertAdjacentHTML('beforeend', favoritePeople);\n\n  const deleteBtns = document.querySelectorAll('.delete-btn-people');\n  deleteBtns.forEach(btn => {\n    btn.addEventListener('click', event => {\n      const personItem = event.target.closest('.person-item-detailed-fav');\n      const deletedName = personItem.querySelector('#personName').innerText;\n      deleteFromFavoritePeople(event, deletedName);\n    });\n  });\n}\n\nfunction deleteFromFavoritePeople(event, personName) {\n  const personId = event.target.closest('.person-item-detailed-fav').id;\n\n  favoritePeopleList = favoritePeopleList.filter(\n    person => person.id != personId\n  );\n\n  localStorage.setItem('favorite_people', JSON.stringify(favoritePeopleList));\n\n  event.target.closest('.person-item-detailed-fav').remove();\n\n  notifyDeleteSuccess(personName);\n\n  if (favoritePeopleList.length === 0) {\n    refs4.noResultsPeople.classList.remove('visually-hidden');\n    refs4.favPeopleTitle.classList.add('visually-hidden');\n  }\n}\n","import { refs4 } from '../refs4';\nimport { renderFavoriteMovies } from './favoriteMovies';\nimport { renderFavoriteSeries } from './favoriteSeries';\nimport { renderFavoritePeople } from './favoritePeople';\n\n/* ====================== FAVORITE MOVIES ======================  */\nlet favoriteMoviesList =\n  JSON.parse(localStorage.getItem('favorite_movies')) ?? [];\n\nif (favoriteMoviesList.length) {\n  refs4.noResultsMovies.classList.add('visually-hidden');\n  refs4.favMoviesTitle.classList.remove('visually-hidden');\n}\n\nrenderFavoriteMovies(favoriteMoviesList);\n\n/* ====================== FAVORITE SERIES ======================  */\nlet favoriteSeriesList =\n  JSON.parse(localStorage.getItem('favorite_series')) ?? [];\n\nif (favoriteSeriesList.length) {\n  refs4.noResultsSeries.classList.add('visually-hidden');\n  refs4.favSeriesTitle.classList.remove('visually-hidden');\n}\n\nrenderFavoriteSeries(favoriteSeriesList);\n\n/* ====================== FAVORITE PEOPLE ======================  */\nlet favoritePeopleList =\n  JSON.parse(localStorage.getItem('favorite_people')) ?? [];\n\nif (favoritePeopleList.length) {\n  refs4.noResultsPeople.classList.add('visually-hidden');\n  refs4.favPeopleTitle.classList.remove('visually-hidden');\n}\n\nrenderFavoritePeople(favoritePeopleList);\n"],"names":["$3e9a3a014ae88b12$var$ref","$acb2c83039e4dfa8$export$d67093779195cf92","favWrapper","document","querySelector","favMovies","favMoviesTitle","favSeries","favSeriesTitle","favPeople","favPeopleTitle","noResultsMovies","noResultsSeries","noResultsPeople","$3e9a3a014ae88b12$var$favoriteMoviesList","JSON","parse","localStorage","getItem","$13b2939b7e046266$var$ref","$13b2939b7e046266$var$favoriteSeriesList","$8f9cef5dc239661d$var$ref","$95fb08203b915e84$var$ref","$8f9cef5dc239661d$var$favoritePeopleList","favoriteMovies","$95fb08203b915e84$var$ref1","$95fb08203b915e84$var$favoriteMoviesList","length","classList","add","remove","map","param","id","title","origTitle","budget","languages","genres","originCountry","releaseDate","posterPath","revenue","runtime","overview","voteAverage","voteCount","genreNames","genre","name","join","languagesSpoken","language","concat","toFixed","insertAdjacentHTML","querySelectorAll","forEach","btn","addEventListener","event","movieItem","target","closest","movieName","movieId","filter","movie","setItem","stringify","$lG111","notifyDeleteSuccess","$3e9a3a014ae88b12$var$deleteFromFavoriteMovies","innerText","favoriteSeries","$95fb08203b915e84$var$ref2","$95fb08203b915e84$var$favoriteSeriesList","createdBy","inProduction","firstAir","numberSeasons","numberEpisodes","creators","creator","seriesItem","seriesName","seriesId","serie","$13b2939b7e046266$var$deleteFromFavoriteSeries","favoritePeople","$95fb08203b915e84$var$favoritePeopleList","personName","gender","birthday","biography","knownFor","placeOfBirth","profile_path","popularity","personGender","$4s6iC","genders","personImg","personItem","personId","person","$8f9cef5dc239661d$var$deleteFromFavoritePeople"],"version":3,"file":"favorite.eb8ddcc1.js.map"}