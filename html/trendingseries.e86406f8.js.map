{"mappings":"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","sources":["src/js/TrendingSeries/fetchTrendingSeries.js","src/js/refs2.js","src/js/helpers/getGenres.js","src/js/TrendingSeries/renderTrendingSeries.js","src/js/TrendingSeries/renderFoundSeries.js","src/js/TrendingSeries/searchSeries.js","src/js/TrendingSeries/fetchSingleSeries.js","src/js/helpers/createSeriesModalMarkup.js"],"sourcesContent":["import axios from 'axios';\nimport { refs2 } from '../refs2';\nimport {\n  URLS,\n  trendingObserverOptions,\n  searchObserverOptions,\n} from '../constants';\nimport { renderTrendingSeries } from './renderTrendingSeries';\nimport { renderFoundSeries } from './renderFoundSeries';\nimport { searchSeries } from './searchSeries';\nimport { fetchSingleSeries } from './fetchSingleSeries';\nimport { createSeriesModalMarkup } from '../helpers/createSeriesModalMarkup';\nimport { notifyEndResults, notifyNoResults } from '../helpers/notifyWarnings';\n\nconst API_KEY = '86bcaf318e232372b2e8e2623c959f88';\nlet query = '';\nlet currentPage = 1;\nlet currentSearchPage = 1;\nlet isLoading = false;\n\n/* ====================== TRENDING ======================  */\n\nasync function fetchTrendingSeries(key, url, currentPage) {\n  try {\n    isLoading = true;\n    const response = await axios.get(\n      `${url}?api_key=${key}&page=${currentPage}`\n    );\n    console.log(response);\n    if (response.data.total_pages === currentSearchPage) {\n      notifyEndResults();\n      trendingObserver.unobserve(refs2.targetObserverSeries);\n    }\n    const dataSeries = response.data.results;\n    return dataSeries;\n  } catch (error) {\n    console.log('Error fetching trending series:', error.message);\n  } finally {\n    isLoading = false;\n  }\n}\n\nlet trendingObserver = new IntersectionObserver(\n  onLoadMoreTrending,\n  trendingObserverOptions\n);\nfunction onLoadMoreTrending(entries, observer) {\n  console.log(entries);\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentPage += 1;\n      fetchTrendingSeries(API_KEY, URLS.BASE_SERIES_URL, currentPage).then(\n        data => renderTrendingSeries(data)\n      );\n    }\n  });\n}\n\nfetchTrendingSeries(API_KEY, URLS.BASE_SERIES_URL, currentPage)\n  .then(data => renderTrendingSeries(data))\n  .then(() => trendingObserver.observe(refs2.targetObserverSeries))\n  .catch(err => console.log(err));\n\n/* ====================== SEARCH ======================  */\n\nrefs2.form.addEventListener('submit', searchByName);\n\nasync function searchByName(e) {\n  e.preventDefault();\n\n  trendingObserver.unobserve(refs2.targetObserverSeries);\n  searchObserver.unobserve(refs2.targetObserverSearch);\n\n  refs2.backdrop.classList.add('is-hidden');\n  query = refs2.form.searchQuery.value.trim();\n  currentSearchPage = 1;\n\n  try {\n    refs2.seriesList.innerHTML = '';\n    refs2.endResultsInfo.classList.add('visually-hidden');\n\n    const seriesData = await searchSeries(\n      API_KEY,\n      URLS.SEARCH_SERIES_URL,\n      query,\n      currentSearchPage\n    );\n\n    const { results, total_results } = seriesData.data;\n\n    if (results && results.length > 0) {\n      renderFoundSeries(results);\n      searchObserver.observe(refs2.targetObserverSearch);\n    } else {\n      refs2.endResultsInfo.classList.remove('visually-hidden');\n      notifyNoResults();\n    }\n\n    if (\n      total_results &&\n      total_results <= 20 &&\n      seriesData.data.total_pages === currentSearchPage\n    ) {\n      notifyEndResults();\n      searchObserver.unobserve(refs2.targetObserverSearch);\n    }\n  } catch (error) {\n    console.log('Error fetching series:', error.message);\n  } finally {\n    refs2.form.searchQuery.value = '';\n  }\n}\n\nlet searchObserver = new IntersectionObserver(\n  onLoadMoreSearch,\n  searchObserverOptions\n);\n\nfunction onLoadMoreSearch(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentSearchPage += 1;\n      searchSeries(\n        API_KEY,\n        URLS.SEARCH_SERIES_URL,\n        query,\n        currentSearchPage\n      ).then(dataFound => {\n        const { results } = dataFound.data;\n        renderFoundSeries(results);\n      });\n    }\n  });\n}\n\n/* ======================  SERIES' DETAILS ======================  */\n\nrefs2.seriesContainer.addEventListener('click', onSeriesItemClick);\n\nasync function onSeriesItemClick(e) {\n  e.preventDefault();\n\n  const targetElement = e.target.closest('.series-item');\n  if (targetElement) {\n    const dataId = targetElement.getAttribute('data-id');\n    const data = await fetchSingleSeries(\n      API_KEY,\n      URLS.SINGLE_SERIES_URL,\n      dataId\n    );\n    createSeriesModalMarkup(data);\n  }\n}\n","export const refs2 = {\n  form: document.querySelector('.search-form-series'),\n  seriesContainer: document.querySelector('.series-data-container'),\n  seriesList: document.querySelector('.series-list'),\n  targetObserverSeries: document.querySelector('.js-guard-series'),\n  targetObserverSearch: document.querySelector('.js-guard-search'),\n  backdrop: document.querySelector('.series-backdrop'),\n  modalWrapper: document.querySelector('.series-item-wrapper'),\n  endResultsInfo: document.querySelector('.no-results-info-series'),\n  closeBtn: document.querySelector('.modal-close-btn'),\n};\n","export function getGenres(genre_ids, genres) {\n  return genre_ids\n    .map(id => {\n      const genre = genres.find(g => g.id === id);\n      return genre ? genre.name : '';\n    })\n    .filter(Boolean)\n    .join(', ');\n}\n","import { refs2 } from '../refs2.js';\nimport { URLS, genres } from '../constants.js';\nimport { getGenres } from '../helpers/getGenres';\n\nexport function renderTrendingSeries(series) {\n  console.log(series);\n  const trendingSeries = series\n    .map(\n      ({\n        id,\n        name,\n        overview,\n        vote_average,\n        poster_path,\n        first_air_date,\n        genre_ids,\n      }) => {\n        const genreNames = getGenres(genre_ids, genres);\n\n        return `<li class=\"series-item\" data-id=${id}>\n            <img src=\"${\n              URLS.POSTER_URL\n            }${poster_path}\" class=\"series-poster\" alt=\"series poster\">\n            <div class=\"series-info\">\n            <h2 class=\"series-title\">${name}</h2>\n            <p class=\"series-description\">${overview}</p>\n            <p class=\"series-genres\">Genres: ${genreNames || 'No data'}</p>\n            <p class=\"series-premiere\">Premiere date: ${first_air_date}</p>\n            <span class=\"series-rate\">Rating: ${vote_average.toFixed(2)}</span>\n            </div>\n          </li>`;\n      }\n    )\n    .join('');\n\n  refs2.seriesList.insertAdjacentHTML('beforeend', trendingSeries);\n}\n","import { refs2 } from '../refs2';\nimport { URLS, genres } from '../constants';\nimport { getGenres } from '../helpers/getGenres';\n\nexport function renderFoundSeries(foundSeries) {\n  const foundItems = foundSeries\n    .map(\n      ({\n        id,\n        genre_ids,\n        name,\n        overview,\n        first_air_date,\n        vote_average,\n        vote_count,\n        poster_path,\n      }) => {\n        const genreNames = getGenres(genre_ids, genres);\n\n        return `<li class=\"series-item\" data-id=${id}>\n            <img src=\"${\n              URLS.POSTER_URL\n            }${poster_path}\" class=\"series-poster\" alt=\"series poster\">\n            <div class=\"series-info\">\n            <h2 class=\"series-title\">${name}</h2>\n            <p class=\"series-description\">${overview}</p>\n              <p class=\"series-genres\">Genres: ${genreNames || 'No data'}</p>\n                <p class=\"series-premiere\">Premiere date: ${first_air_date}</p>\n                 <span class=\"series-rate\">Rating: ${vote_average.toFixed(\n                   2\n                 )}</span> \n                 <span class=\"series-rate-count\">Total votes: ${vote_count}</span> \n          </div>     \n          </li>`;\n      }\n    )\n    .join('');\n\n  refs2.seriesList.insertAdjacentHTML('beforeend', foundItems);\n}\n","import axios from 'axios';\n\nexport async function searchSeries(key, url, searchQuery, page) {\n  try {\n    const response = await axios.get(\n      `${url}?api_key=${key}&query=${searchQuery}&page=${page}`\n    );\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.log('Error fetching trending series:', error.message);\n  }\n}\n","import axios from 'axios';\nlet isLoading = false;\n\nexport async function fetchSingleSeries(key, url, id) {\n  try {\n    isLoading = true;\n    const response = await axios.get(`${url}/${id}?api_key=${key}`);\n    console.log(response);\n    const seriesMovies = response.data;\n    return seriesMovies;\n  } catch (error) {\n    console.log('Error fetching series:', error.message);\n  } finally {\n    isLoading = false;\n  }\n}\n","import { refs2 } from '../refs2';\nimport { URLS } from '../constants';\n\nimport { onBackdropClick, onEscKeyPress } from './onCloseFunctions';\nimport { notifyAddSuccess, notifyIsInFavorites } from './notifyWarnings';\n\nlet favoriteSeriesList =\n  JSON.parse(localStorage.getItem('favorite_series')) ?? [];\n\nexport async function createSeriesModalMarkup(data) {\n  const {\n    id,\n    created_by,\n    in_production,\n    languages,\n    genres,\n    origin_country,\n    name,\n    first_air_date,\n    number_of_seasons,\n    number_of_episodes,\n    vote_average,\n    vote_count,\n    overview,\n    poster_path,\n  } = data;\n\n  const genreNames = genres.map(genre => genre.name).join(', ');\n  const languagesSpoken = languages.map(language => language).join(', ');\n  const creators = created_by.map(creator => creator.name).join(', ');\n\n  let markup = `<div class=\"series-item-detailed\" id=${id}>\n       <img src=\"${URLS.POSTER_URL}${poster_path}\" class=\"series-poster\" alt=\"series poster\">\n        <h2 class=\"modal-title\">${name}</h2>\n        <p class=\"modal-genres\"><span class=\"modal-bold\">Genres:</span> ${genreNames}</p>\n       \n        <p class=\"orig-country\"><span class=\"modal-bold\">Origin country:</span> ${origin_country}</p>\n        <p class=\"in-production\"><span class=\"modal-bold\">Still in production:</span> ${in_production}</p>\n      \n\n     \n        <p class=\"first-air-date\"><span class=\"modal-bold\">First air date:</span> ${first_air_date}</p>\n        <p class=\"modal-series-description\"><span class=\"modal-bold\">Desription:</span> ${overview}</p>\n      \n        <p class=\"created-by\"><span class=\"modal-bold\">Creators:</span> ${creators}</p>\n        <p class=\"languages\"><span class=\"modal-bold\">Spoken languages:</span> ${languagesSpoken}</p>\n        <div class=\"series-length\">\n        <span class=\"seasons\"><span class=\"modal-bold\">Number of seasons:</span> ${number_of_seasons}</span>\n        <span class=\"episodes\"><span class=\"modal-bold\">Number of episodes:</span> ${number_of_episodes}</span>\n        </div>\n\n        <div class=\"series-modal-rate\">\n         <span class=\"rating\"><span class=\"modal-bold\">Rating:</span> ${vote_average}</span>\n         <span class=\"vote-count\"><span class=\"modal-bold\">Total votes:</span> ${vote_count}</span>\n         </div>\n\n         <button type=\"button\" class=\"series-fav\">Add to favorites</button>\n   \n      </div>`;\n\n  refs2.backdrop.classList.remove('is-hidden');\n  refs2.modalWrapper.innerHTML = markup;\n\n  refs2.backdrop.addEventListener('click', event =>\n    onBackdropClick(event, onModalClose)\n  );\n  window.addEventListener('keydown', event =>\n    onEscKeyPress(event, onModalClose)\n  );\n  refs2.closeBtn.addEventListener('click', onModalClose);\n\n  /* ======================  ADD TO FAVORITES ======================  */\n  const addFavBtn = document.querySelector('.series-fav');\n  addFavBtn.addEventListener('click', () => addToFavorites(data));\n}\n\nfunction onModalClose() {\n  refs2.modalWrapper.innerHTML = '';\n\n  refs2.backdrop.classList.add('is-hidden');\n\n  refs2.backdrop.removeEventListener('click', onModalClose);\n  refs2.closeBtn.removeEventListener('click', onModalClose);\n  window.removeEventListener('keydown', onEscKeyPress);\n}\n\nfunction addToFavorites(series) {\n  const inStorage = favoriteSeriesList.some(fav => fav.id === series.id);\n  const seriesItem = {\n    id: series.id,\n    name: series.name,\n    createdBy: series.created_by,\n    inProduction: series.in_production,\n    languages: series.languages,\n    genres: series.genres,\n    originCountry: series.origin_country,\n    posterPath: series.poster_path,\n    firstAir: series.first_air_date,\n    numberSeasons: series.number_of_seasons,\n    numberEpisodes: series.number_of_episodes,\n    overview: series.overview,\n    voteAverage: series.vote_average,\n    voteCount: series.vote_count,\n  };\n\n  if (!inStorage) {\n    favoriteSeriesList.push(seriesItem);\n    localStorage.setItem('favorite_series', JSON.stringify(favoriteSeriesList));\n    notifyAddSuccess(series.name);\n  } else {\n    notifyIsInFavorites(series.name);\n  }\n}\n"],"names":["$bpxeT","parcelRequire","$f7f0efa6c7f437e8$export$dd54c2f2d692d36f","form","document","querySelector","seriesContainer","seriesList","targetObserverSeries","targetObserverSearch","backdrop","modalWrapper","endResultsInfo","closeBtn","$85c58b14da9c2029$export$c5604fa8028da00","genre_ids","genres","map","id","genre","find","g","name","filter","Boolean","join","$70471455671d24b4$export$3a1ca11763a591fc","series","console","log","trendingSeries","param","overview","vote_average","poster_path","first_air_date","genreNames","$4s6iC","concat","URLS","POSTER_URL","toFixed","insertAdjacentHTML","$39d3062942c19417$export$1035edcb0883cee","foundSeries","foundItems","vote_count","$dbda837601adec74$export$87284bbc4af8de3","key","url","searchQuery","page","$dbda837601adec74$var$_searchSeries","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","$dIxxU","default","get","_ctx","sent","t0","message","$6b848aded986c971$export$18d2d9a21124daea","$6b848aded986c971$var$_fetchSingleSeries","seriesMovies","data","$7bb17b9a23564351$var$ref","$7bb17b9a23564351$var$favoriteSeriesList","JSON","parse","localStorage","getItem","$7bb17b9a23564351$export$6b84cf0fb22670f7","$7bb17b9a23564351$var$_createSeriesModalMarkup","created_by","in_production","languages","origin_country","number_of_seasons","number_of_episodes","languagesSpoken","creators","markup","language","creator","classList","remove","innerHTML","addEventListener","event","$gOfal","onBackdropClick","$7bb17b9a23564351$var$onModalClose","window","onEscKeyPress","$7bb17b9a23564351$var$addToFavorites","add","removeEventListener","inStorage","some","fav","seriesItem","createdBy","inProduction","originCountry","posterPath","firstAir","numberSeasons","numberEpisodes","voteAverage","voteCount","$lG111","notifyIsInFavorites","push","setItem","stringify","notifyAddSuccess","$4bd51fddaa51488b$var$API_KEY","$4bd51fddaa51488b$var$query","$4bd51fddaa51488b$var$currentPage","$4bd51fddaa51488b$var$currentSearchPage","$4bd51fddaa51488b$var$fetchTrendingSeries","currentPage1","$4bd51fddaa51488b$var$_fetchTrendingSeries","dataSeries","total_pages","notifyEndResults","$4bd51fddaa51488b$var$trendingObserver","unobserve","results","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","BASE_SERIES_URL","then","trendingObserverOptions","$4bd51fddaa51488b$var$_searchByName","e","seriesData","_data","total_results","preventDefault","$4bd51fddaa51488b$var$searchObserver","value","trim","SEARCH_SERIES_URL","length","observe","notifyNoResults","catch","err","dataFound","searchObserverOptions","$4bd51fddaa51488b$var$_onSeriesItemClick","targetElement","dataId","target","closest","getAttribute","SINGLE_SERIES_URL"],"version":3,"file":"trendingseries.e86406f8.js.map"}