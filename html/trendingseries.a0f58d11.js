function e(e,s,n,r){Object.defineProperty(e,s,{get:n,set:r,enumerable:!0,configurable:!0})}var s="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},n={},r={},t=s.parcelRequired7c6;null==t&&((t=function(e){if(e in n)return n[e].exports;if(e in r){var s=r[e];delete r[e];var t={id:e,exports:{}};return n[e]=t,s.call(t.exports,t,t.exports),t.exports}var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}).register=function(e,s){r[e]=s},s.parcelRequired7c6=t),t.register("gw4ii",(function(e,s){var n=t("2shzp"),r=t("aNcKc"),a=t("8G1wF"),i=t("gvMD9"),o=t("ch2Ak"),c=t("4bPF1"),l=t("jiT4K"),d=t("4WBqU");const p="86bcaf318e232372b2e8e2623c959f88";let u=1,f=!1;async function g(e,s,r){try{f=!0;const t=await n.default.get(`${s}?api_key=${e}&page=${r}`);return t.data.results}catch(e){console.log("Error fetching trending series:",e.message)}finally{f=!1}}let m=new IntersectionObserver((function(e,s){console.log(e),e.forEach((e=>{e.isIntersecting&&(u+=1,g(p,a.URLS.BASE_SERIES_URL,u).then((e=>(0,i.renderTrendingSeries)(e))))}))}),{root:null,rootMargin:"400px",threshold:1});g(p,a.URLS.BASE_SERIES_URL,u).then((e=>(0,i.renderTrendingSeries)(e))).then((()=>m.observe(r.refs2.targetObserverSeries))).catch((e=>console.log(e))),r.refs2.seriesContainer.addEventListener("click",(async function(e){e.preventDefault(),console.log("Hellow from callback");const s=e.target.closest(".series-item");if(s){const e=s.getAttribute("data-id"),n=await(0,l.fetchSingleSeries)(p,a.URLS.SINGLE_SERIES_URL,e);(0,d.createSeriesModalMarkup)(n)}})),r.refs2.form.addEventListener("submit",(e=>{e.preventDefault(),r.refs2.backdrop.classList.add("is-hidden");const s=r.refs2.form.searchQuery.value.trim();(0,o.searchSeries)(p,a.URLS.SEARCH_SERIES_URL,s,c.renderFoundSeries)}))})),t.register("aNcKc",(function(s,n){e(s.exports,"refs2",(function(){return r}));const r={form:document.querySelector(".search-form-series"),seriesContainer:document.querySelector(".series-data-container"),seriesList:document.querySelector(".series-list"),targetObserverSeries:document.querySelector(".js-guard-series"),backdrop:document.querySelector(".series-backdrop"),modalWrapper:document.querySelector(".series-item-wrapper"),closeBtn:document.querySelector(".modal-close-btn")}})),t.register("gvMD9",(function(s,n){e(s.exports,"renderTrendingSeries",(function(){return a}));var r=t("aNcKc");function a(e){console.log(e);const s=e.map((({id:e,name:s,overview:n,vote_average:r,poster_path:t,first_air_date:a})=>`<li class="series-item" data-id=${e}>\n            <img src="https://image.tmdb.org/t/p/w500${t}" class="series-poster" alt="series poster">\n            <div class="series-info">\n            <h2 class="series-title">${s}</h2>\n            <p class="series-description">${n}</p>\n            <p class="series-premiere">Premiere date: ${a}</p>\n            <span class="series-rate">Rating: ${r.toFixed(2)}</span>\n            </div>\n          </li>`)).join("");r.refs2.seriesList.insertAdjacentHTML("beforeend",s)}})),t.register("ch2Ak",(function(s,n){e(s.exports,"searchSeries",(function(){return i}));var r=t("2shzp"),a=t("aNcKc");async function i(e,s,n,t){try{const i=await r.default.get(`${s}?api_key=${e}&query=${n}`);console.log(i);const o=i.data.results;o&&(a.refs2.seriesList.innerHTML=""),t(o)}catch(e){console.log("Error fetching trending series:",e.message)}}})),t.register("4bPF1",(function(s,n){e(s.exports,"renderFoundSeries",(function(){return i}));var r=t("aNcKc"),a=t("8G1wF");function i(e){const s=e.map((({id:e,genre_ids:s,name:n,overview:r,first_air_date:t,vote_average:i,vote_count:o,poster_path:c})=>{const l=function(e){return e.map((e=>{const s=a.genres.find((s=>s.id===e));return s?s.name:""})).filter(Boolean).join(", ")}(s);return`<li class="movies-item" data-id=${e}>\n            <img src="https://image.tmdb.org/t/p/w500${c}" class="movie-poster" alt="movie poster">\n            <div class="movie-info">\n            <h2 class="movie-title">${n}</h2>\n            <p class="movie-description">${r}</p>\n              <p class="movie-genres">Genres: ${l||"Sorry, no genres available"}</p>\n                <p class="series-premiere">Premiere date: ${t}</p>\n                 <span class="movie-rate">Rating: ${i.toFixed(2)}</span> \n                 <span class="movie-rate-count">Total votes: ${o}</span> \n          </div>     \n          </li>`})).join("");r.refs2.seriesList.insertAdjacentHTML("beforeend",s)}})),t.register("jiT4K",(function(s,n){e(s.exports,"fetchSingleSeries",(function(){return i}));var r=t("2shzp");t("aNcKc"),t("8G1wF"),t("4WBqU");let a=!1;async function i(e,s,n){try{a=!0;const t=await r.default.get(`${s}/${n}?api_key=${e}`);console.log(t);return t.data}catch(e){console.log("Error fetching series:",e.message)}finally{a=!1}}})),t.register("4WBqU",(function(s,n){e(s.exports,"createSeriesModalMarkup",(function(){return a}));var r=t("aNcKc");async function a(e){const{id:s,created_by:n,in_production:t,languages:a,genres:i,origin_country:o,name:c,first_air_date:l,number_of_seasons:d,number_of_episodes:p,vote_average:u,vote_count:f,overview:g,poster_path:m}=e,v=i.map((e=>e.name)).join(", "),b=a.map((e=>e)).join(", ");let h=`<div class="series-item-detailed" id=${s}>\n       <img src="https://image.tmdb.org/t/p/w500${m}" class="movie-poster" alt="movie poster">\n        <h2 class="modal-title">${c}</h2>\n        <p class="modal-genres"><span class="modal-bold">Genres:</span> ${v}</p>\n       \n        <p class="orig-country"><span class="modal-bold">Origin country:</span> ${o}</p>\n        <p class="in-production"><span class="modal-bold">Still in production:</span> ${t}</p>\n      \n\n     \n        <p class="first-air-date"><span class="modal-bold">First air date:</span> ${l}</p>\n        <p class="modal-series-description"><span class="modal-bold">Desription:</span> ${g}</p>\n      \n        <p class="created-by"><span class="modal-bold">Creators:</span> ${n.map((e=>e.name)).join(", ")}</p>\n        <p class="languages"><span class="modal-bold">Spoken languages:</span> ${b}</p>\n        <div class="series-length">\n        <span class="seasons"><span class="modal-bold">Number of seasons:</span> ${d}</span>\n        <span class="episodes"><span class="modal-bold">Number of episodes:</span> ${p}</span>\n        </div>\n\n        <div class="series-modal-rate">\n         <span class="rating"><span class="modal-bold">Rating:</span> ${u}</span>\n         <span class="vote-count"><span class="modal-bold">Total votes:</span> ${f}</span>\n         </div>\n   \n      </div>`;r.refs2.backdrop.classList.remove("is-hidden"),r.refs2.modalWrapper.innerHTML=h}})),t("gw4ii");
//# sourceMappingURL=trendingseries.a0f58d11.js.map
