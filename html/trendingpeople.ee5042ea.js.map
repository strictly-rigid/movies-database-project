{"mappings":"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","sources":["src/js/TrendingPeople/fetchTrendingPeople.js","src/js/refs3.js","src/js/constants.js","src/js/TrendingPeople/renderTrendingPeople.js","src/js/TrendingPeople/renderFoundPerson.js","src/js/TrendingPeople/searchPerson.js","src/js/TrendingPeople/fetchSinglePerson.js","src/js/helpers/createPersonModalMarkup.js"],"sourcesContent":["import axios from 'axios';\nimport { refs3 } from '../refs3';\nimport { URLS } from '../constants';\nimport { renderTrendingPeople } from './renderTrendingPeople';\nimport { renderFoundPerson } from './renderFoundPerson';\nimport { searchPerson } from './searchPerson';\nimport { fetchSinglePerson } from './fetchSinglePerson';\nimport { createPersonModalMarkup } from '../helpers/createPersonModalMarkup';\nimport { notifyEndResults, notifyNoResults } from '../helpers/notifyWarnings';\n\nconst API_KEY = '86bcaf318e232372b2e8e2623c959f88';\nlet query = '';\nlet currentPage = 1;\nlet currentSearchPage = 1;\nlet isLoading = false;\n\n/* ====================== TRENDING ======================  */\n\nasync function fetchTrendingPeople(key, url, currentPage) {\n  try {\n    isLoading = true;\n    const response = await axios.get(\n      `${url}?api_key=${key}&page=${currentPage}`\n    );\n    console.log(response);\n\n    if (response.data.total_pages === currentSearchPage) {\n      notifyEndResults();\n      trendingObserver.unobserve(refs3.targetObserverPeople);\n    }\n    const dataPeople = response.data.results;\n    return dataPeople;\n  } catch (error) {\n    console.log('Error fetching trending people:', error.message);\n  } finally {\n    isLoading = false;\n  }\n}\n\nconst trendingObserverOptions = {\n  root: null,\n  rootMargin: '400px',\n  threshold: 1.0,\n};\n\nlet trendingObserver = new IntersectionObserver(\n  onLoadMoreTrending,\n  trendingObserverOptions\n);\nfunction onLoadMoreTrending(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentPage += 1;\n      fetchTrendingPeople(API_KEY, URLS.BASE_PEOPLE_URL, currentPage).then(\n        data => renderTrendingPeople(data)\n      );\n    }\n  });\n}\n\nfetchTrendingPeople(API_KEY, URLS.BASE_PEOPLE_URL, currentPage)\n  .then(data => renderTrendingPeople(data))\n  .then(() => trendingObserver.observe(refs3.targetObserverPeople))\n  .catch(err => console.log(err));\n\n/* ====================== SEARCH ======================  */\n\nrefs3.form.addEventListener('submit', searchByName);\n\nasync function searchByName(e) {\n  e.preventDefault();\n\n  trendingObserver.unobserve(refs3.targetObserverPeople);\n  searchObserver.unobserve(refs3.targetObserverSearch);\n\n  refs3.backdrop.classList.add('is-hidden');\n  query = refs3.form.searchQuery.value.trim();\n  currentSearchPage = 1;\n\n  try {\n    refs3.peopleList.innerHTML = '';\n    refs3.endResultsInfo.classList.add('visually-hidden');\n\n    const personData = await searchPerson(\n      API_KEY,\n      URLS.SEARCH_PERSON_URL,\n      query,\n      currentSearchPage\n    );\n\n    const { results, total_results } = personData.data;\n\n    if (results && results.length > 0) {\n      renderFoundPerson(results);\n      searchObserver.observe(refs3.targetObserverSearch);\n    } else {\n      refs3.endResultsInfo.classList.remove('visually-hidden');\n      notifyNoResults();\n    }\n\n    if (\n      total_results &&\n      total_results <= 20 &&\n      personData.data.total_pages === currentSearchPage\n    ) {\n      notifyEndResults();\n      searchObserver.unobserve(refs3.targetObserverSearch);\n    }\n  } catch (error) {\n    console.log('Error fetching person:', error.message);\n  } finally {\n    refs3.form.searchQuery.value = '';\n  }\n}\n\nconst searchObserverOptions = {\n  root: null,\n  rootMargin: '400px',\n  threshold: 1.0,\n};\n\nlet searchObserver = new IntersectionObserver(\n  onLoadMoreSearch,\n  searchObserverOptions\n);\n\nfunction onLoadMoreSearch(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentSearchPage += 1;\n      searchPerson(\n        API_KEY,\n        URLS.SEARCH_PERSON_URL,\n        query,\n        currentSearchPage\n      ).then(dataFound => {\n        const { results } = dataFound.data;\n        renderFoundPerson(results);\n      });\n    }\n  });\n}\n\n/* ====================== PERSON'S DETAILS ======================  */\n\nrefs3.peopleContainer.addEventListener('click', onPersonItemClick);\n\nasync function onPersonItemClick(e) {\n  e.preventDefault();\n\n  const targetElement = e.target.closest('.person-item');\n  if (targetElement) {\n    const dataId = targetElement.getAttribute('data-id');\n    const data = await fetchSinglePerson(\n      API_KEY,\n      URLS.SINGLE_PERSON_URL,\n      dataId\n    );\n    createPersonModalMarkup(data);\n  }\n}\n","export const refs3 = {\n  form: document.querySelector('.search-form-people'),\n  peopleContainer: document.querySelector('.people-data-container'),\n  peopleList: document.querySelector('.people-list'),\n  targetObserverPeople: document.querySelector('.js-guard-people'),\n  targetObserverSearch: document.querySelector('.js-guard-search'),\n  backdrop: document.querySelector('.person-backdrop'),\n  modalWrapper: document.querySelector('.person-item-wrapper'),\n  endResultsInfo: document.querySelector('.no-results-info-people'),\n  closeBtn: document.querySelector('.modal-people-close-icon'),\n};\n","export const URLS = {\n  BASE_MOVIES_URL: 'https://api.themoviedb.org/3/trending/movie/week',\n  BASE_SERIES_URL: 'https://api.themoviedb.org/3/trending/tv/week',\n  BASE_PEOPLE_URL: 'https://api.themoviedb.org/3/trending/person/week',\n  SEARCH_MOVIE_URL: 'https://api.themoviedb.org/3/search/movie',\n  SEARCH_SERIES_URL: 'https://api.themoviedb.org/3/search/tv',\n  SINGLE_MOVIE_URL: 'https://api.themoviedb.org/3/movie',\n  SINGLE_SERIES_URL: 'https://api.themoviedb.org/3/tv',\n  SEARCH_PERSON_URL: 'https://api.themoviedb.org/3/search/person',\n  SINGLE_PERSON_URL: 'https://api.themoviedb.org/3/person',\n};\n\nexport const genres = [\n  {\n    id: 28,\n    name: 'Action',\n  },\n  {\n    id: 12,\n    name: 'Adventure',\n  },\n  {\n    id: 16,\n    name: 'Animation',\n  },\n  {\n    id: 35,\n    name: 'Comedy',\n  },\n  {\n    id: 80,\n    name: 'Crime',\n  },\n  {\n    id: 99,\n    name: 'Documentary',\n  },\n  {\n    id: 18,\n    name: 'Drama',\n  },\n  {\n    id: 10751,\n    name: 'Family',\n  },\n  {\n    id: 14,\n    name: 'Fantasy',\n  },\n  {\n    id: 36,\n    name: 'History',\n  },\n  {\n    id: 27,\n    name: 'Horror',\n  },\n  {\n    id: 10402,\n    name: 'Music',\n  },\n  {\n    id: 9648,\n    name: 'Mystery',\n  },\n  {\n    id: 10749,\n    name: 'Romance',\n  },\n  {\n    id: 878,\n    name: 'Science Fiction',\n  },\n  {\n    id: 10770,\n    name: 'TV Movie',\n  },\n  {\n    id: 53,\n    name: 'Thriller',\n  },\n  {\n    id: 10752,\n    name: 'War',\n  },\n  {\n    id: 37,\n    name: 'Western',\n  },\n];\n\nexport const genders = {\n  0: 'Not set / not specified',\n  1: 'Female',\n  2: 'Male',\n  3: 'Non-binary',\n};\n","import { refs3 } from '../refs3';\nimport { genders } from '../constants';\n\nconst POSTER_URL = `https://image.tmdb.org/t/p/w500`;\nconst DEFAULT_IMAGE =\n  'https://t4.ftcdn.net/jpg/00/64/67/63/360_F_64676383_LdbmhiNM6Ypzb3FM4PPuFP9rHe7ri8Ju.jpg';\n\nexport function renderTrendingPeople(people) {\n  console.log(people);\n  const trendingPeople = people\n    .map(({ id, name, gender, known_for_department, profile_path }) => {\n      const imageSrc = profile_path\n        ? `${POSTER_URL}${profile_path}`\n        : DEFAULT_IMAGE;\n\n      const personGender = genders[gender] || 'Not specified';\n\n      return `<li class=\"person-item\" data-id=${id}>\n            <img\n              src=\"${imageSrc}\"\n              class=\"person-image\"\n              alt=\"person image\"\n            />\n          <div class=\"person-info\">\n            <h2 class=\"person-name\">${name}</h2>\n            <p class=\"person-gender\">${personGender}</p>\n            <p class=\"popular-movies\">Known for: ${\n              known_for_department || 'No data'\n            } </p>\n          </div>\n          </li>`;\n    })\n    .join('');\n\n  refs3.peopleList.insertAdjacentHTML('beforeend', trendingPeople);\n}\n","import { refs3 } from '../refs3';\nimport { genders } from '../constants';\n\nconst POSTER_URL = `https://image.tmdb.org/t/p/w500`;\nconst DEFAULT_IMAGE =\n  'https://t4.ftcdn.net/jpg/00/64/67/63/360_F_64676383_LdbmhiNM6Ypzb3FM4PPuFP9rHe7ri8Ju.jpg';\n\nexport function renderFoundPerson(foundPerson) {\n  // console.log(foundPerson);\n  const foundItems = foundPerson\n    .map(({ id, known_for_department, name, gender, profile_path }) => {\n      // const titles = known_for_department\n      //   .map(item => item.title || item.name)\n      //   .join(', ');\n\n      const imageSrc = profile_path\n        ? `${POSTER_URL}${profile_path}`\n        : DEFAULT_IMAGE;\n\n      const personGender = genders[gender] || 'Not specified';\n\n      return `<li class=\"person-item\" data-id=${id}>\n            <img\n              src=\"${imageSrc}\"\n              class=\"person-image\"\n              alt=\"person image\"\n            />\n            <h2 class=\"person-name\">${name}</h2>\n            <p class=\"person-gender\">${personGender}</p>\n          \n          </li>`;\n    })\n    .join('');\n\n  refs3.peopleList.insertAdjacentHTML('beforeend', foundItems);\n}\n","import axios from 'axios';\n\nexport async function searchPerson(key, url, searchQuery, page) {\n  try {\n    const response = await axios.get(\n      `${url}?api_key=${key}&query=${searchQuery}&page=${page}`\n    );\n\n    console.log(response);\n\n    return response;\n  } catch (error) {\n    console.log('Error fetching person:', error.message);\n  }\n}\n","import axios from 'axios';\n\nlet isLoading = false;\n\nexport async function fetchSinglePerson(key, url, id) {\n  try {\n    isLoading = true;\n    const response = await axios.get(`${url}/${id}?api_key=${key}`);\n    // console.log(response);\n    const personDetails = response.data;\n    return personDetails;\n  } catch (error) {\n    console.log('Error fetching person\"s data:', error.message);\n  } finally {\n    isLoading = false;\n  }\n}\n","import { Notify } from 'notiflix';\n\nimport { refs3 } from '../refs3';\nimport { genders } from '../constants';\nimport { notifyAddSuccess, notifyIsInFavorites } from './notifyWarnings';\n\nconst POSTER_URL = `https://image.tmdb.org/t/p/w500`;\nconst DEFAULT_IMAGE =\n  'https://t4.ftcdn.net/jpg/00/64/67/63/360_F_64676383_LdbmhiNM6Ypzb3FM4PPuFP9rHe7ri8Ju.jpg';\n\nconst favoriteList = JSON.parse(localStorage.getItem('favorites')) ?? [];\n\nexport async function createPersonModalMarkup(data) {\n  const {\n    id,\n    birthday,\n    biography,\n    place_of_birth,\n    gender,\n    name,\n    known_for_department,\n    profile_path,\n    popularity,\n  } = data;\n  console.log(data);\n\n  const personImg = profile_path\n    ? `${POSTER_URL}${profile_path}`\n    : DEFAULT_IMAGE;\n  const personGender = genders[gender] || 'Not specified';\n\n  let markup = `<div class=\"person-item-detailed\" id=${id}>\n           <img src=\"${personImg}\" class=\"person-image\" alt=\"person image\">\n            <h2 class=\"modal-name modal-title\">${name}</h2>\n            <p class=\"gender\"> <span class=\"modal-bold\"> Gender:</span> ${personGender}</p>\n            <p class=\"birthday\"> <span class=\"modal-bold\"> Born:</span> ${\n              birthday || 'unknown'\n            }</p>\n            <p class=\"place_of_birth\"> <span class=\"modal-bold\"> Place of birth:</span> ${\n              place_of_birth || 'unknown'\n            }</span>\n            <p class=\"known_for\"> <span class=\"modal-bold\"> Known for:</span> ${\n              known_for_department || 'No data'\n            }</p>\n            <p class=\"biography\"> <span class=\"modal-bold\">Bio:</span> ${\n              biography || 'no info'\n            }</p>\n            <p class=\"popularity\"> <span class=\"modal-bold\"> Popularity:</span> ${popularity}</p>\n            <button type=\"button\" class=\"person-fav\">Add to favorites</button>\n          </div>`;\n\n  refs3.backdrop.classList.remove('is-hidden');\n  refs3.modalWrapper.innerHTML = markup;\n\n  refs3.backdrop.addEventListener('click', onBackdropClick);\n  window.addEventListener('keydown', onEscKeyPress);\n  refs3.closeBtn.addEventListener('click', onModalClose);\n\n  /* ======================  ADD TO FAVORITES ======================  */\n  const addFavBtn = document.querySelector('.person-fav');\n  addFavBtn.addEventListener('click', () => addToFavorites(data));\n}\n\nfunction onModalClose() {\n  refs3.modalWrapper.innerHTML = '';\n\n  refs3.backdrop.classList.add('is-hidden');\n  // document.body.classList.remove('modal-open');\n\n  refs3.backdrop.removeEventListener('click', onModalClose);\n  refs3.closeBtn.removeEventListener('click', onModalClose);\n  window.removeEventListener('keydown', onEscKeyPress);\n}\n\nfunction onEscKeyPress(event) {\n  if (event.code === 'Escape') {\n    onModalClose();\n  }\n}\n\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    onModalClose();\n  }\n}\n\nfunction addToFavorites(person) {\n  const inStorage = favoriteList.some(fav => fav.id === person.id);\n  const personItem = {\n    id: person.id,\n    name: person.name,\n    gender: person.gender,\n    birthday: person.birthday,\n    biography: person.biography,\n    knownFor: person.known_for_department,\n    place_of_birth: person.place_of_birth,\n    profile_path: person.profile_path,\n    popularity: person.popularity,\n  };\n\n  if (!inStorage) {\n    favoriteList.push(personItem);\n    localStorage.setItem('favorites', JSON.stringify(favoriteList));\n    notifyAddSuccess(person.name);\n  } else {\n    notifyIsInFavorites(person.name);\n  }\n}\n"],"names":["$bpxeT","parcelRequire","$a4d089102ee19eea$export$1667d6aa2cee11d8","form","document","querySelector","peopleContainer","peopleList","targetObserverPeople","targetObserverSearch","backdrop","modalWrapper","endResultsInfo","closeBtn","$33dea9d9a6da4c9a$export$2389c26b9ec125dd","BASE_MOVIES_URL","BASE_SERIES_URL","BASE_PEOPLE_URL","SEARCH_MOVIE_URL","SEARCH_SERIES_URL","SINGLE_MOVIE_URL","SINGLE_SERIES_URL","SEARCH_PERSON_URL","SINGLE_PERSON_URL","$33dea9d9a6da4c9a$export$1ad618005f166230","$52b520831d0c27f6$export$1f3529df0466b8e9","people","console","log","trendingPeople","map","param","id","name","gender","known_for_department","profile_path","imageSrc","concat","personGender","join","insertAdjacentHTML","$db9d45747ac3d0d4$export$706c7750293f7a13","foundPerson","foundItems","$a3b62ede7df7fa7d$export$791a87ce43433885","key","url","searchQuery","page","$a3b62ede7df7fa7d$var$_searchPerson","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","$dIxxU","default","get","_ctx","sent","t0","message","$da5d5aed0ab69a80$export$bda05f064222d25a","$da5d5aed0ab69a80$var$_fetchSinglePerson","personDetails","data","$50ccbe03e1f09353$var$ref","$50ccbe03e1f09353$var$POSTER_URL","$50ccbe03e1f09353$var$DEFAULT_IMAGE","$50ccbe03e1f09353$var$favoriteList","JSON","parse","localStorage","getItem","$50ccbe03e1f09353$export$9a7ad2d283fab89","$50ccbe03e1f09353$var$_createPersonModalMarkup","birthday","biography","place_of_birth","popularity","personImg","markup","classList","remove","innerHTML","addEventListener","$50ccbe03e1f09353$var$onBackdropClick","window","$50ccbe03e1f09353$var$onEscKeyPress","$50ccbe03e1f09353$var$onModalClose","$50ccbe03e1f09353$var$addToFavorites","add","removeEventListener","event","code","currentTarget","target","person","inStorage","some","fav","personItem","knownFor","$lG111","notifyIsInFavorites","push","setItem","stringify","notifyAddSuccess","$a29f26a4a40c2f0a$var$API_KEY","$a29f26a4a40c2f0a$var$query","$a29f26a4a40c2f0a$var$currentPage","$a29f26a4a40c2f0a$var$currentSearchPage","$a29f26a4a40c2f0a$var$fetchTrendingPeople","currentPage1","$a29f26a4a40c2f0a$var$_fetchTrendingPeople","dataPeople","total_pages","notifyEndResults","$a29f26a4a40c2f0a$var$trendingObserver","unobserve","results","IntersectionObserver","entries","forEach","entry","isIntersecting","then","root","rootMargin","threshold","$a29f26a4a40c2f0a$var$_searchByName","e","personData","_data","total_results","preventDefault","$a29f26a4a40c2f0a$var$searchObserver","value","trim","length","observe","notifyNoResults","catch","err","dataFound","$a29f26a4a40c2f0a$var$_onPersonItemClick","targetElement","dataId","closest","getAttribute"],"version":3,"file":"trendingpeople.ee5042ea.js.map"}