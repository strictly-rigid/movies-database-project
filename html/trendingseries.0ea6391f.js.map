{"mappings":"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","sources":["src/js/TrendingSeries/fetchTrendingSeries.js","src/js/refs2.js","src/js/TrendingSeries/renderTrendingSeries.js","src/js/TrendingSeries/renderFoundSeries.js","src/js/TrendingSeries/searchSeries.js","src/js/TrendingSeries/fetchSingleSeries.js","src/js/helpers/createSeriesModalMarkup.js"],"sourcesContent":["import axios from 'axios';\nimport { refs2 } from '../refs2';\nimport { URLS } from '../constants';\nimport { renderTrendingSeries } from './renderTrendingSeries';\nimport { renderFoundSeries } from './renderFoundSeries';\nimport { searchSeries } from './searchSeries';\nimport { fetchSingleSeries } from './fetchSingleSeries';\nimport { createSeriesModalMarkup } from '../helpers/createSeriesModalMarkup';\nimport { notifyEndResults, notifyNoResults } from '../helpers/notifyWarnings';\n\nconst API_KEY = '86bcaf318e232372b2e8e2623c959f88';\n// const BASE_SERIES_URL = 'https://api.themoviedb.org/3/trending/tv/week';\n// const SEARCH_SERIES_URL = 'https://api.themoviedb.org/3/search/tv';\nlet query = '';\nlet currentPage = 1;\nlet currentSearchPage = 1;\nlet isLoading = false;\n\n/* ====================== TRENDING ======================  */\n\nexport async function fetchTrendingSeries(key, url, currentPage) {\n  try {\n    isLoading = true;\n    const response = await axios.get(\n      `${url}?api_key=${key}&page=${currentPage}`\n    );\n    console.log(response);\n    if (response.data.total_pages === currentSearchPage) {\n      notifyEndResults();\n      trendingObserver.unobserve(refs2.targetObserverSeries);\n    }\n    const dataSeries = response.data.results;\n    return dataSeries;\n  } catch (error) {\n    console.log('Error fetching trending series:', error.message);\n  } finally {\n    isLoading = false;\n  }\n}\n\nconst trendingObserverOptions = {\n  root: null,\n  rootMargin: '400px',\n  threshold: 1.0,\n};\n\nlet trendingObserver = new IntersectionObserver(\n  onLoadMoreTrending,\n  trendingObserverOptions\n);\nfunction onLoadMoreTrending(entries, observer) {\n  console.log(entries);\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentPage += 1;\n      fetchTrendingSeries(API_KEY, URLS.BASE_SERIES_URL, currentPage).then(\n        data => renderTrendingSeries(data)\n      );\n    }\n  });\n}\n\nfetchTrendingSeries(API_KEY, URLS.BASE_SERIES_URL, currentPage)\n  .then(data => renderTrendingSeries(data))\n  .then(() => trendingObserver.observe(refs2.targetObserverSeries))\n  .catch(err => console.log(err));\n\n/* ====================== SEARCH ======================  */\n\nrefs2.form.addEventListener('submit', searchByName);\n\nasync function searchByName(e) {\n  e.preventDefault();\n\n  trendingObserver.unobserve(refs2.targetObserverSeries);\n  searchObserver.unobserve(refs2.targetObserverSearch);\n\n  refs2.backdrop.classList.add('is-hidden');\n  query = refs2.form.searchQuery.value.trim();\n  currentSearchPage = 1;\n\n  try {\n    refs2.seriesList.innerHTML = '';\n    refs2.endResultsInfo.classList.add('visually-hidden');\n\n    const seriesData = await searchSeries(\n      API_KEY,\n      URLS.SEARCH_SERIES_URL,\n      query,\n      currentSearchPage\n    );\n\n    const { results, total_results } = seriesData.data;\n\n    if (results && results.length > 0) {\n      renderFoundSeries(results);\n      searchObserver.observe(refs2.targetObserverSearch);\n    } else {\n      refs2.endResultsInfo.classList.remove('visually-hidden');\n      notifyNoResults();\n    }\n\n    if (\n      total_results &&\n      total_results <= 20 &&\n      seriesData.data.total_pages === currentSearchPage\n    ) {\n      notifyEndResults();\n      searchObserver.unobserve(refs2.targetObserverSearch);\n    }\n  } catch (error) {\n    console.log('Error fetching person:', error.message);\n  } finally {\n    refs2.form.searchQuery.value = '';\n  }\n}\n\nconst searchObserverOptions = {\n  root: null,\n  rootMargin: '400px',\n  threshold: 1.0,\n};\n\nlet searchObserver = new IntersectionObserver(\n  onLoadMoreSearch,\n  searchObserverOptions\n);\n\nfunction onLoadMoreSearch(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentSearchPage += 1;\n      searchSeries(\n        API_KEY,\n        URLS.SEARCH_SERIES_URL,\n        query,\n        currentSearchPage\n      ).then(dataFound => {\n        const { results } = dataFound.data;\n        renderFoundSeries(results);\n      });\n    }\n  });\n}\n\n/* ======================  SERIES' DETAILS ======================  */\n\nrefs2.seriesContainer.addEventListener('click', onSeriesItemClick);\n\nasync function onSeriesItemClick(e) {\n  e.preventDefault();\n\n  const targetElement = e.target.closest('.series-item');\n  if (targetElement) {\n    const dataId = targetElement.getAttribute('data-id');\n    const data = await fetchSingleSeries(\n      API_KEY,\n      URLS.SINGLE_SERIES_URL,\n      dataId\n    );\n    createSeriesModalMarkup(data);\n  }\n}\n","export const refs2 = {\n  form: document.querySelector('.search-form-series'),\n  seriesContainer: document.querySelector('.series-data-container'),\n  seriesList: document.querySelector('.series-list'),\n  targetObserverSeries: document.querySelector('.js-guard-series'),\n  targetObserverSearch: document.querySelector('.js-guard-search'),\n  backdrop: document.querySelector('.series-backdrop'),\n  modalWrapper: document.querySelector('.series-item-wrapper'),\n  endResultsInfo: document.querySelector('.no-results-info-series'),\n  closeBtn: document.querySelector('.modal-close-btn'),\n};\n","import { refs2 } from '../refs2.js';\n\nconst POSTER_URL = `https://image.tmdb.org/t/p/w500`;\n\nexport function renderTrendingSeries(series) {\n  console.log(series);\n  const trendingSeries = series\n    .map(\n      ({\n        id,\n        name,\n        overview,\n        vote_average,\n        poster_path,\n        first_air_date,\n      }) => `<li class=\"series-item\" data-id=${id}>\n            <img src=\"${POSTER_URL}${poster_path}\" class=\"series-poster\" alt=\"series poster\">\n            <div class=\"series-info\">\n            <h2 class=\"series-title\">${name}</h2>\n            <p class=\"series-description\">${overview}</p>\n            <p class=\"series-premiere\">Premiere date: ${first_air_date}</p>\n            <span class=\"series-rate\">Rating: ${vote_average.toFixed(2)}</span>\n            </div>\n          </li>`\n    )\n    .join('');\n\n  refs2.seriesList.insertAdjacentHTML('beforeend', trendingSeries);\n}\n","import { refs2 } from '../refs2';\nimport { genres } from '../constants';\n\nconst POSTER_URL = `https://image.tmdb.org/t/p/w500`;\n\nfunction getGenres(genre_ids) {\n  return genre_ids\n    .map(id => {\n      const genre = genres.find(g => g.id === id);\n      return genre ? genre.name : '';\n    })\n    .filter(Boolean)\n    .join(', ');\n}\n\nexport function renderFoundSeries(foundSeries) {\n  const foundItems = foundSeries\n    .map(\n      ({\n        id,\n        genre_ids,\n        name,\n        overview,\n        first_air_date,\n        vote_average,\n        vote_count,\n        poster_path,\n      }) => {\n        const genreNames = getGenres(genre_ids);\n\n        return `<li class=\"series-item\" data-id=${id}>\n            <img src=\"${POSTER_URL}${poster_path}\" class=\"movie-poster\" alt=\"movie poster\">\n            <div class=\"series-info\">\n            <h2 class=\"series-title\">${name}</h2>\n            <p class=\"series-description\">${overview}</p>\n              <p class=\"series-genres\">Genres: ${genreNames || 'No data'}</p>\n                <p class=\"series-premiere\">Premiere date: ${first_air_date}</p>\n                 <span class=\"series-rate\">Rating: ${vote_average.toFixed(\n                   2\n                 )}</span> \n                 <span class=\"series-rate-count\">Total votes: ${vote_count}</span> \n          </div>     \n          </li>`;\n      }\n    )\n    .join('');\n\n  refs2.seriesList.insertAdjacentHTML('beforeend', foundItems);\n}\n","import axios from 'axios';\nimport { refs2 } from '../refs2.js';\n\nexport async function searchSeries(key, url, searchQuery, page) {\n  try {\n    const response = await axios.get(\n      `${url}?api_key=${key}&query=${searchQuery}&page=${page}`\n    );\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.log('Error fetching trending series:', error.message);\n  }\n}\n\n// import axios from 'axios';\n// import { refs2 } from '../refs2.js';\n\n// export async function searchSeries(key, url, searchQuery, renderFoundItems) {\n//   try {\n//     const response = await axios.get(\n//       `${url}?api_key=${key}&query=${searchQuery}`\n//     );\n//     console.log(response);\n//     const queryFoundSeries = response.data.results;\n//     if (queryFoundSeries) {\n//       refs2.seriesList.innerHTML = '';\n//     }\n\n//     renderFoundItems(queryFoundSeries);\n//   } catch (error) {\n//     console.log('Error fetching trending series:', error.message);\n//   }\n// }\n","import axios from 'axios';\nimport { refs2 } from '../refs2';\nimport { URLS } from '../constants';\nimport { createSeriesModalMarkup } from '../helpers/createSeriesModalMarkup';\nconst API_KEY = '86bcaf318e232372b2e8e2623c959f88';\n\nlet isLoading = false;\n\nexport async function fetchSingleSeries(key, url, id) {\n  try {\n    isLoading = true;\n    const response = await axios.get(`${url}/${id}?api_key=${key}`);\n    console.log(response);\n    const seriesMovies = response.data;\n    return seriesMovies;\n  } catch (error) {\n    console.log('Error fetching series:', error.message);\n  } finally {\n    isLoading = false;\n  }\n}\n\n// if (refs2?.seriesContainer) {\n//   refs2.seriesContainer.addEventListener('click', onItemClick);\n// }\n\n// async function onItemClick(e) {\n//   e.preventDefault();\n//   console.log('Hellow from callback');\n//   const targetElement = e.target.closest('.series-item');\n//   if (targetElement) {\n//     const dataId = targetElement.getAttribute('data-id');\n//     const data = await fetchSingleSeries(\n//       API_KEY,\n//       URLS.SINGLE_SERIES_URL,\n//       dataId\n//     );\n//     createSeriesModalMarkup(data);\n//   }\n// }\n","import { refs2 } from '../refs2';\n\nconst POSTER_URL = `https://image.tmdb.org/t/p/w500`;\n\nexport async function createSeriesModalMarkup(data) {\n  const {\n    id,\n    created_by,\n    in_production,\n    languages,\n    genres,\n    origin_country,\n    name,\n    first_air_date,\n    number_of_seasons,\n    number_of_episodes,\n    vote_average,\n    vote_count,\n    overview,\n    poster_path,\n  } = data;\n\n  const genreNames = genres.map(genre => genre.name).join(', ');\n  const languagesSpoken = languages.map(language => language).join(', ');\n  const creators = created_by.map(creator => creator.name).join(', ');\n\n  let markup = `<div class=\"series-item-detailed\" id=${id}>\n       <img src=\"${POSTER_URL}${poster_path}\" class=\"movie-poster\" alt=\"movie poster\">\n        <h2 class=\"modal-title\">${name}</h2>\n        <p class=\"modal-genres\"><span class=\"modal-bold\">Genres:</span> ${genreNames}</p>\n       \n        <p class=\"orig-country\"><span class=\"modal-bold\">Origin country:</span> ${origin_country}</p>\n        <p class=\"in-production\"><span class=\"modal-bold\">Still in production:</span> ${in_production}</p>\n      \n\n     \n        <p class=\"first-air-date\"><span class=\"modal-bold\">First air date:</span> ${first_air_date}</p>\n        <p class=\"modal-series-description\"><span class=\"modal-bold\">Desription:</span> ${overview}</p>\n      \n        <p class=\"created-by\"><span class=\"modal-bold\">Creators:</span> ${creators}</p>\n        <p class=\"languages\"><span class=\"modal-bold\">Spoken languages:</span> ${languagesSpoken}</p>\n        <div class=\"series-length\">\n        <span class=\"seasons\"><span class=\"modal-bold\">Number of seasons:</span> ${number_of_seasons}</span>\n        <span class=\"episodes\"><span class=\"modal-bold\">Number of episodes:</span> ${number_of_episodes}</span>\n        </div>\n\n        <div class=\"series-modal-rate\">\n         <span class=\"rating\"><span class=\"modal-bold\">Rating:</span> ${vote_average}</span>\n         <span class=\"vote-count\"><span class=\"modal-bold\">Total votes:</span> ${vote_count}</span>\n         </div>\n   \n      </div>`;\n\n  refs2.backdrop.classList.remove('is-hidden');\n  refs2.modalWrapper.innerHTML = markup;\n\n  refs2.backdrop.addEventListener('click', onBackdropClick);\n  window.addEventListener('keydown', onEscKeyPress);\n  refs2.closeBtn.addEventListener('click', onModalClose);\n}\n\nfunction onModalClose() {\n  refs2.modalWrapper.innerHTML = '';\n\n  refs2.backdrop.classList.add('is-hidden');\n  // document.body.classList.remove('modal-open');\n\n  refs2.backdrop.removeEventListener('click', onModalClose);\n  refs2.closeBtn.removeEventListener('click', onModalClose);\n  window.removeEventListener('keydown', onEscKeyPress);\n}\n\nfunction onEscKeyPress(event) {\n  if (event.code === 'Escape') {\n    onModalClose();\n  }\n}\n\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    onModalClose();\n  }\n}\n"],"names":["$bpxeT","parcelRequire","$4bd51fddaa51488b$var$API_KEY","$4bd51fddaa51488b$var$query","$4bd51fddaa51488b$var$currentPage","$4bd51fddaa51488b$var$currentSearchPage","$4bd51fddaa51488b$export$fd6d8660eb32605b","key","url","currentPage1","$4bd51fddaa51488b$var$_fetchTrendingSeries","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","dataSeries","$dIxxU","default","get","concat","_ctx","sent","console","log","data","total_pages","$lG111","notifyEndResults","$4bd51fddaa51488b$var$trendingObserver","unobserve","$lhMFn","refs2","targetObserverSeries","results","t0","message","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","$4s6iC","URLS","BASE_SERIES_URL","then","$9DEnF","renderTrendingSeries","root","rootMargin","threshold","$4bd51fddaa51488b$var$_searchByName","e","seriesData","_data","total_results","preventDefault","$4bd51fddaa51488b$var$searchObserver","targetObserverSearch","backdrop","classList","add","form","searchQuery","value","trim","seriesList","innerHTML","endResultsInfo","$iSh4A","searchSeries","SEARCH_SERIES_URL","length","$4XNrr","renderFoundSeries","observe","remove","notifyNoResults","catch","err","addEventListener","dataFound","$4bd51fddaa51488b$var$_onSeriesItemClick","targetElement","dataId","target","closest","getAttribute","$9ejuF","fetchSingleSeries","SINGLE_SERIES_URL","$aCpOZ","createSeriesModalMarkup","seriesContainer","$f7f0efa6c7f437e8$export$dd54c2f2d692d36f","document","querySelector","modalWrapper","closeBtn","$70471455671d24b4$export$3a1ca11763a591fc","series","trendingSeries","map","param","id","name","overview","vote_average","poster_path","first_air_date","toFixed","join","insertAdjacentHTML","$39d3062942c19417$export$1035edcb0883cee","foundSeries","foundItems","genre_ids","vote_count","genreNames","genre","genres","find","g","filter","Boolean","$39d3062942c19417$var$getGenres","$dbda837601adec74$export$87284bbc4af8de3","page","$dbda837601adec74$var$_searchSeries","$6b848aded986c971$export$18d2d9a21124daea","$6b848aded986c971$var$_fetchSingleSeries","seriesMovies","$7bb17b9a23564351$var$POSTER_URL","$7bb17b9a23564351$export$6b84cf0fb22670f7","$7bb17b9a23564351$var$_createSeriesModalMarkup","created_by","in_production","languages","origin_country","number_of_seasons","number_of_episodes","languagesSpoken","creators","markup","language","creator","$7bb17b9a23564351$var$onBackdropClick","window","$7bb17b9a23564351$var$onEscKeyPress","$7bb17b9a23564351$var$onModalClose","removeEventListener","event","code","currentTarget"],"version":3,"file":"trendingseries.0ea6391f.js.map"}