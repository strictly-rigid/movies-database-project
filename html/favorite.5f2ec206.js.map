{"mappings":"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","sources":["src/js/refs4.js","src/js/Favorite/favoriteMovies.js","src/js/Favorite/favoriteSeries.js","src/js/Favorite/favoritePeople.js","src/js/Favorite/getFavorite.js"],"sourcesContent":["export const refs4 = {\n  favWrapper: document.querySelector('.favorite-data-container'),\n  favMovies: document.querySelector('.favorite-movies'),\n  favMoviesTitle: document.querySelector('.fav-movies-title'),\n  favSeries: document.querySelector('.favorite-series'),\n  favSeriesTitle: document.querySelector('.fav-series-title'),\n  favPeople: document.querySelector('.favorite-people'),\n  favPeopleTitle: document.querySelector('.fav-people-title'),\n  noResultsMovies: document.querySelector('.no-results-info-movies'),\n  noResultsSeries: document.querySelector('.no-results-info-series'),\n  noResultsPeople: document.querySelector('.no-results-info-people'),\n};\n","import { refs4 } from '../refs4';\nimport { URLS } from '../constants';\n\nimport { notifyDeleteSuccess } from '../helpers/notifyWarnings';\n\nlet favoriteMoviesList =\n  JSON.parse(localStorage.getItem('favorite_movies')) ?? [];\n\nexport function renderFavoriteMovies(movies) {\n  const favoriteMovies = movies\n    .map(\n      ({\n        id,\n        title,\n        origTitle,\n        budget,\n        languages,\n        genres,\n        originCountry,\n        releaseDate,\n        posterPath,\n        revenue,\n        runtime,\n        overview,\n        voteAverage,\n        voteCount,\n      }) => {\n        console.log(languages);\n        const genreNames = genres.map(genre => genre.name).join(', ');\n\n        const spokenLanguages = languages\n          .map(language => language.english_name)\n          .join(', ');\n\n        return `<div class=\"movie-item-detailed-fav\" id=${id}>\n        <img src=\"${\n          URLS.POSTER_URL\n        }${posterPath}\" class=\"movie-poster\" alt=\"movie poster\">\n        <h2 class=\"modal-title\" id=\"movieName\">${title}</h2>\n        <h3 class=\"modal-original-title\"><span class=\"modal-bold\">Original title</span>: ${origTitle}</h3>\n        <p class=\"modal-genres\"><span class=\"modal-bold\">Genres:</span> ${genreNames}</p>\n        <p class=\"orig-country\"><span class=\"modal-bold\">Country of origin:</span> ${originCountry}</p>\n        <p class=\"modal-release-date\"><span class=\"modal-bold\">Release date:</span> ${releaseDate}</p>\n        <p class=\"modal-movie-description\"><span class=\"modal-bold\">Desription:</span> ${overview}</p>\n        <p class=\"languages\"><span class=\"modal-bold\">Spoken languages:</span> ${spokenLanguages}</p>\n        <span class=\"budget\"><span class=\"modal-bold\">Budget:</span> $${(\n          budget / 1000000\n        ).toFixed()} mln</span>\n        <span class=\"revenue\"><span class=\"modal-bold\">Revenue:</span> $${(\n          revenue / 1000000\n        ).toFixed()} mln</span>\n        <p class=\"runtime\"><span class=\"modal-bold\">Time:</span> ${runtime} minutes</p>\n\n         <div class=\"movies-modal-rate\">\n        <span class=\"rating\"><span class=\"modal-bold\">Rating:</span> ${voteAverage}</span>\n        <span class=\"vote-count\"><span class=\"modal-bold\">Total votes:</span> ${voteCount}</span>\n        </div>\n\n          <button type=\"button\" class=\"delete-btn-movies\">Delete from favorites</button>\n   \n      </div>`;\n      }\n    )\n    .join('');\n\n  refs4.favMovies.insertAdjacentHTML('beforeend', favoriteMovies);\n\n  const deleteBtns = document.querySelectorAll('.delete-btn-movies');\n  deleteBtns.forEach(btn => {\n    btn.addEventListener('click', event => {\n      const movieItem = event.target.closest('.movie-item-detailed-fav');\n      const deletedName = movieItem.querySelector('#movieName').innerText;\n      deleteFromFavoriteMovies(event, deletedName);\n    });\n  });\n}\n\nfunction deleteFromFavoriteMovies(event, movieName) {\n  const movieId = event.target.closest('.movie-item-detailed-fav').id;\n\n  favoriteMoviesList = favoriteMoviesList.filter(movie => movie.id != movieId);\n\n  localStorage.setItem('favorite_movies', JSON.stringify(favoriteMoviesList));\n\n  event.target.closest('.movie-item-detailed-fav').remove();\n\n  notifyDeleteSuccess(movieName);\n\n  if (favoriteMoviesList.length === 0) {\n    refs4.noResultsMovies.classList.remove('visually-hidden');\n    refs4.favMoviesTitle.classList.add('visually-hidden');\n  }\n}\n","import { refs4 } from '../refs4';\nimport { URLS } from '../constants';\n\nimport { notifyDeleteSuccess } from '../helpers/notifyWarnings';\n\nlet favoriteSeriesList =\n  JSON.parse(localStorage.getItem('favorite_series')) ?? [];\n\nexport function renderFavoriteSeries(series) {\n  const favoriteSeries = series\n    .map(\n      ({\n        id,\n        createdBy,\n        inProduction,\n        languages,\n        genres,\n        originCountry,\n        name,\n        firstAir,\n        numberSeasons,\n        numberEpisodes,\n        voteAverage,\n        voteCount,\n        overview,\n        posterPath,\n      }) => {\n        const genreNames = genres.map(genre => genre.name).join(', ');\n        const languagesSpoken = languages.map(language => language).join(', ');\n        const creators = createdBy.map(creator => creator.name).join(', ');\n\n        return `<div class=\"series-item-detailed-fav\" id=${id}>\n       <img src=\"${URLS.POSTER_URL}${posterPath}\" class=\"series-poster\" alt=\"series poster\">\n        <h2 class=\"modal-title\" id=\"seriesName\">${name}</h2>\n        <p class=\"modal-genres\"><span class=\"modal-bold\">Genres:</span> ${genreNames}</p>\n       \n        <p class=\"orig-country\"><span class=\"modal-bold\">Origin country:</span> ${originCountry}</p>\n        <p class=\"in-production\"><span class=\"modal-bold\">Still in production:</span> ${inProduction}</p>\n      \n\n     \n        <p class=\"first-air-date\"><span class=\"modal-bold\">First air date:</span> ${firstAir}</p>\n        <p class=\"modal-series-description\"><span class=\"modal-bold\">Desription:</span> ${overview}</p>\n      \n        <p class=\"created-by\"><span class=\"modal-bold\">Creators:</span> ${creators}</p>\n        <p class=\"languages\"><span class=\"modal-bold\">Spoken languages:</span> ${languagesSpoken}</p>\n        <div class=\"series-length\">\n        <span class=\"seasons\"><span class=\"modal-bold\">Number of seasons:</span> ${numberSeasons}</span>\n        <span class=\"episodes\"><span class=\"modal-bold\">Number of episodes:</span> ${numberEpisodes}</span>\n        </div>\n\n        <div class=\"series-modal-rate\">\n         <span class=\"rating\"><span class=\"modal-bold\">Rating:</span> ${voteAverage}</span>\n         <span class=\"vote-count\"><span class=\"modal-bold\">Total votes:</span> ${voteCount}</span>\n         </div>\n\n          <button type=\"button\" class=\"delete-btn-series\">Delete from favorites</button>\n   \n      </div>`;\n      }\n    )\n    .join('');\n\n  refs4.favSeries.insertAdjacentHTML('beforeend', favoriteSeries);\n\n  const deleteBtns = document.querySelectorAll('.delete-btn-series');\n  deleteBtns.forEach(btn => {\n    btn.addEventListener('click', event => {\n      const seriesItem = event.target.closest('.series-item-detailed-fav');\n      const deletedName = seriesItem.querySelector('#seriesName').innerText;\n      deleteFromFavoriteSeries(event, deletedName);\n    });\n  });\n}\n\nfunction deleteFromFavoriteSeries(event, seriesName) {\n  const seriesId = event.target.closest('.series-item-detailed-fav').id;\n\n  favoriteSeriesList = favoriteSeriesList.filter(serie => serie.id != seriesId);\n\n  localStorage.setItem('favorite_series', JSON.stringify(favoriteSeriesList));\n\n  event.target.closest('.series-item-detailed-fav').remove();\n\n  notifyDeleteSuccess(seriesName);\n\n  if (favoriteSeriesList.length === 0) {\n    refs4.noResultsSeries.classList.remove('visually-hidden');\n    refs4.favSeriesTitle.classList.add('visually-hidden');\n  }\n}\n","import { refs4 } from '../refs4';\nimport { genders, URLS } from '../constants';\n\nimport { notifyDeleteSuccess } from '../helpers/notifyWarnings';\n\nlet favoritePeopleList =\n  JSON.parse(localStorage.getItem('favorite_people')) ?? [];\n\nexport function renderFavoritePeople(people) {\n  const favoritePeople = people\n    .map(\n      ({\n        id,\n        name: personName,\n        gender,\n        birthday,\n        biography,\n        knownFor,\n        placeOfBirth,\n        profile_path,\n        popularity,\n      }) => {\n        const personGender = genders[gender] || 'Not specified';\n        const personImg = profile_path\n          ? `${URLS.POSTER_URL}${profile_path}`\n          : URLS.DEFAULT_IMAGE;\n\n        return `<div class=\"person-item-detailed-fav\" id=${id}>\n           <img src=\"${personImg}\" class=\"person-image\" alt=\"person image\">\n            <h2 class=\"modal-name modal-title\" id=\"personName\">${personName}</h2>\n            <p class=\"gender\"> <span class=\"modal-bold\"> Gender:</span> ${personGender}</p>\n            <p class=\"birthday\"> <span class=\"modal-bold\"> Born:</span> ${\n              birthday || 'unknown'\n            }</p>\n            <p class=\"place_of_birth\"> <span class=\"modal-bold\"> Place of birth:</span> ${\n              placeOfBirth || 'unknown'\n            }</span>\n            <p class=\"known_for\"> <span class=\"modal-bold\"> Known for:</span> ${\n              knownFor || 'No data'\n            }</p>\n            <p class=\"biography\"> <span class=\"modal-bold\"> Bio:</span> ${\n              biography || 'no info'\n            }</p>\n            <p class=\"popularity\"> <span class=\"modal-bold\"> Popularity:</span> ${popularity}</p>\n            <button type=\"button\" class=\"delete-btn-people\">Delete from favorites</button>\n          </div>`;\n      }\n    )\n    .join('');\n\n  refs4.favPeople.insertAdjacentHTML('beforeend', favoritePeople);\n\n  const deleteBtns = document.querySelectorAll('.delete-btn-people');\n  deleteBtns.forEach(btn => {\n    btn.addEventListener('click', event => {\n      const personItem = event.target.closest('.person-item-detailed-fav');\n      const deletedName = personItem.querySelector('#personName').innerText;\n      deleteFromFavoritePeople(event, deletedName);\n    });\n  });\n}\n\nfunction deleteFromFavoritePeople(event, personName) {\n  const personId = event.target.closest('.person-item-detailed-fav').id;\n\n  favoritePeopleList = favoritePeopleList.filter(\n    person => person.id != personId\n  );\n\n  localStorage.setItem('favorite_people', JSON.stringify(favoritePeopleList));\n\n  event.target.closest('.person-item-detailed-fav').remove();\n\n  notifyDeleteSuccess(personName);\n\n  if (favoritePeopleList.length === 0) {\n    refs4.noResultsPeople.classList.remove('visually-hidden');\n    refs4.favPeopleTitle.classList.add('visually-hidden');\n  }\n}\n","import { refs4 } from '../refs4';\nimport { renderFavoriteMovies } from './favoriteMovies';\nimport { renderFavoriteSeries } from './favoriteSeries';\nimport { renderFavoritePeople } from './favoritePeople';\n\n/* ====================== FAVORITE MOVIES ======================  */\nlet favoriteMoviesList =\n  JSON.parse(localStorage.getItem('favorite_movies')) ?? [];\n\nif (favoriteMoviesList.length) {\n  refs4.noResultsMovies.classList.add('visually-hidden');\n  refs4.favMoviesTitle.classList.remove('visually-hidden');\n}\n\nrenderFavoriteMovies(favoriteMoviesList);\n\n/* ====================== FAVORITE SERIES ======================  */\nlet favoriteSeriesList =\n  JSON.parse(localStorage.getItem('favorite_series')) ?? [];\n\nif (favoriteSeriesList.length) {\n  refs4.noResultsSeries.classList.add('visually-hidden');\n  refs4.favSeriesTitle.classList.remove('visually-hidden');\n}\n\nrenderFavoriteSeries(favoriteSeriesList);\n\n/* ====================== FAVORITE PEOPLE ======================  */\nlet favoritePeopleList =\n  JSON.parse(localStorage.getItem('favorite_people')) ?? [];\n\nif (favoritePeopleList.length) {\n  refs4.noResultsPeople.classList.add('visually-hidden');\n  refs4.favPeopleTitle.classList.remove('visually-hidden');\n}\n\nrenderFavoritePeople(favoritePeopleList);\n"],"names":["$2217cab88f798ece$export$d67093779195cf92","favWrapper","document","querySelector","favMovies","favMoviesTitle","favSeries","favSeriesTitle","favPeople","favPeopleTitle","noResultsMovies","noResultsSeries","noResultsPeople","$4b6be65a513012fc$var$ref","$4b6be65a513012fc$var$favoriteMoviesList","JSON","parse","localStorage","getItem","$95b3c284ed63c6ed$var$ref","$95b3c284ed63c6ed$var$favoriteSeriesList","$9a8b55975ae42fd7$var$ref","$9a8b55975ae42fd7$var$favoritePeopleList","$01fd40f2f2accb7f$var$ref","$01fd40f2f2accb7f$var$favoriteMoviesList","$01fd40f2f2accb7f$var$ref1","length","classList","add","remove","movies","favoriteMovies","map","id","title","origTitle","budget","languages","genres","originCountry","releaseDate","posterPath","revenue","runtime","overview","voteAverage","voteCount","console","log","genreNames","genre","name","join","spokenLanguages","language","english_name","$8G1wF","URLS","POSTER_URL","toFixed","insertAdjacentHTML","querySelectorAll","forEach","btn","addEventListener","event","movieItem","target","closest","movieName","movieId","filter","movie","setItem","stringify","$kj8Rd","notifyDeleteSuccess","$4b6be65a513012fc$var$deleteFromFavoriteMovies","innerText","$01fd40f2f2accb7f$var$favoriteSeriesList","$01fd40f2f2accb7f$var$ref2","series","favoriteSeries","createdBy","inProduction","firstAir","numberSeasons","numberEpisodes","languagesSpoken","creators","creator","seriesItem","seriesName","seriesId","serie","$95b3c284ed63c6ed$var$deleteFromFavoriteSeries","$01fd40f2f2accb7f$var$favoritePeopleList","people","favoritePeople","personName","gender","birthday","biography","knownFor","placeOfBirth","profile_path","popularity","personGender","genders","DEFAULT_IMAGE","personItem","personId","person","$9a8b55975ae42fd7$var$deleteFromFavoritePeople"],"version":3,"file":"favorite.5f2ec206.js.map"}