{"mappings":"oeAAO,MAAMA,EAAQ,CACnBC,KAAMC,SAASC,cAAc,uBAC7BC,cAAeF,SAASC,cAAc,0BACtCE,KAAMH,SAASC,cAAc,gBAC7BG,eAAgBJ,SAASC,cAAc,oBACvCI,qBAAsBL,SAASC,cAAc,oBAC7CK,SAAUN,SAASC,cAAc,oBACjCM,aAAcP,SAASC,cAAc,wBACrCO,eAAgBR,SAASC,cAAc,2BACvCQ,SAAUT,SAASC,cAAc,6B,8BCN5B,SAASS,EAAqBC,GACnC,MAAMC,EAAiBD,EACpBE,KAAI,EAACC,GAAEA,EAAEC,KAAEA,EAAIC,OAAEA,EAAMC,qBAAEA,EAAoBC,aAAEA,KAOvC,mCAAmCJ,4CANzBI,EACb,GAAGC,EAAAC,KAAKC,aAAaH,IACrBC,EAAAC,KAAKE,kLAWuBP,gDATXI,EAAAI,QAAQP,IAAW,yEAYhCC,GAAwB,sDAKjCO,KAAK,IAER1B,EAAMK,KAAKsB,mBAAmB,YAAab,E,cC1BtC,SAASc,EAAkBC,GAChC,MAAMC,EAAaD,EAChBd,KAAI,EAACC,GAAEA,EAAEC,KAAEA,EAAIC,OAAEA,EAAME,aAAEA,KAOjB,mCAAmCJ,4CANzBI,EACb,GAAGC,EAAAC,KAAKC,aAAaH,IACrBC,EAAAC,KAAKE,6IAUuBP,wDARXI,EAAAI,QAAQP,IAAW,qDAazCQ,KAAK,IAER1B,EAAMK,KAAKsB,mBAAmB,YAAaG,E,CCzB7C,IAAAC,EAAAC,EAAA,SAEOC,eAAeC,EAAaC,EAAKC,EAAKC,EAAaC,GACxD,IAKE,aAJuBP,EAAAQ,QAAMC,IAC3B,GAAGJ,aAAeD,WAAaE,UAAoBC,I,CAIrD,MAAOG,GACPC,QAAQC,IAAI,yBAA0BF,EAAMG,Q,ECVhDb,EAAAC,EAAA,SAEOC,eAAeY,EAAkBV,EAAKC,EAAKpB,GAChD,IACE,MAAM8B,QAAiBf,EAAAQ,QAAMC,IAAI,GAAGJ,KAAOpB,aAAcmB,KAGzD,OAFsBW,EAASC,I,CAG/B,MAAON,GACPC,QAAQC,IAAI,gCAAiCF,EAAMG,Q,mBCFrDI,E,0BADF,MAAMC,EAC+C,QAAnDD,EAAAE,KAAKC,MAAMC,aAAaC,QAAQ,2BAAmB,IAAnDL,IAAuD,GAElDf,eAAeqB,EAAwBP,GAC5C,MAAM/B,GACJA,EAAEuC,SACFA,EAAQC,UACRA,EAASC,eACTA,EAAcvC,OACdA,EAAMD,KACNA,EAAIE,qBACJA,EAAoBC,aACpBA,EAAYsC,WACZA,GACEX,EAOJ,IAAIY,EAAS,wCAAwC3C,4BALnCI,EACd,GAAGC,EAAAC,KAAKC,aAAaH,IACrBC,EAAAC,KAAKE,2GAKsCP,mFAJ1BI,EAAAI,QAAQP,IAAW,gGAO5BqC,GAAY,0GAGZE,GAAkB,mGAGlBtC,GAAwB,yFAGxBqC,GAAa,kGAEuDE,0GAIhF1D,EAAMQ,SAASoD,UAAUC,OAAO,aAChC7D,EAAMS,aAAaqD,UAAYH,EAE/B3D,EAAMQ,SAASuD,iBAAiB,SAASC,IACvC,EAAAC,EAAAC,iBAAgBF,EAAOG,KAEzBC,OAAOL,iBAAiB,WAAWC,IACjC,EAAAC,EAAAI,eAAcL,EAAOG,KAEvBnE,EAAMW,SAASoD,iBAAiB,QAASI,GAGvBjE,SAASC,cAAc,eAC/B4D,iBAAiB,SAAS,IAatC,SAAwBO,GACtB,MAAMC,EAAYtB,EAAmBuB,MAAKC,GAAOA,EAAIzD,KAAOsD,EAAOtD,KAC7D0D,EAAa,CACjB1D,GAAIsD,EAAOtD,GACXC,KAAMqD,EAAOrD,KACbC,OAAQoD,EAAOpD,OACfqC,SAAUe,EAAOf,SACjBC,UAAWc,EAAOd,UAClBmB,SAAUL,EAAOnD,qBACjByD,aAAcN,EAAOb,eACrBrC,aAAckD,EAAOlD,aACrBsC,WAAYY,EAAOZ,YAGhBa,GAKH,EAAAM,EAAAC,qBAAoBR,EAAOrD,OAJ3BgC,EAAmB8B,KAAKL,GACxBtB,aAAa4B,QAAQ,kBAAmB9B,KAAK+B,UAAUhC,KACvD,EAAA4B,EAAAK,kBAAiBZ,EAAOrD,M,CA9BgBkE,CAAepC,I,CAG3D,SAASoB,IACPnE,EAAMS,aAAaqD,UAAY,GAE/B9D,EAAMQ,SAASoD,UAAUwB,IAAI,aAE7BpF,EAAMQ,SAAS6E,oBAAoB,QAASlB,GAC5CnE,EAAMW,SAAS0E,oBAAoB,QAASlB,GAC5CC,OAAOiB,oBAAoB,UAAWpB,EAAAI,c,4CCpDxC,IAAIiB,EAAQ,GACRC,EAAc,EACdC,EAAoB,EAIxBvD,eAAewD,EAAoBC,GACjC,IACE,MAAM5C,QAAiB,EAAA6C,EAAAC,WAAUvE,EAAAC,KAAKuE,gBAAiB,CACrDC,QAVU,mCAWVxD,KAAMoD,IAGJ5C,EAASiD,cAAgBP,KAC3B,EAAAX,EAAAmB,oBACAC,EAAiBC,UAAUlG,EAAMM,iBAGnC,OADmBwC,EAASqD,O,CAE5B,MAAO1D,GACPC,QAAQC,IAAI,kCAAmCF,EAAMG,Q,EAIzD,MAAMqD,GAAmB,EAAAG,EAAAC,iBAKzB,SAA4BC,GAC1BA,EAAQC,SAAQC,IACVA,EAAMC,iBACRlB,GAAe,EACfE,EAAoBF,GAAamB,MAAK3D,GAAQnC,EAAqBmC,K,MAPvE1B,EAAAsF,yBAcFlB,EAAoBF,GACjBmB,MAAK3D,GAAQnC,EAAqBmC,KAClC2D,MAAK,IAAMT,EAAiBW,QAAQ5G,EAAMM,kBAC1CuG,OAAMC,GAAOpE,QAAQC,IAAImE,KAI5B9G,EAAMC,KAAK8D,iBAAiB,UAE5B9B,eAA4B8E,GAC1BA,EAAEC,iBAEFhH,EAAMQ,SAASoD,UAAUwB,IAAI,aAC7BE,EAAQtF,EAAMC,KAAKoC,YAAY4E,MAAMC,OAsCrCjB,EAAiBC,UAAUlG,EAAMM,gBACjC6G,EAAejB,UAAUlG,EAAMO,sBAE/BP,EAAMK,KAAKyD,UAAY,GACvB9D,EAAMU,eAAekD,UAAUwB,IAAI,mBAEnCI,EAAoB,EAxCpB,IACE,MAAM4B,QAAmBlF,EA3Db,mCA6DVb,EAAAC,KAAK+F,kBACL/B,EACAE,IAGIW,QAAEA,EAAOmB,cAAEA,GAAkBF,EAAWrE,KAE1CoD,GAAWA,EAAQoB,OAAS,GAC9B3F,EAAkBuE,GAClBgB,EAAeP,QAAQ5G,EAAMO,wBAE7BP,EAAMU,eAAekD,UAAUC,OAAO,oBACtC,EAAAgB,EAAA2C,oBAIAF,GACAA,GAAiB,IACjBF,EAAWrE,KAAKgD,cAAgBP,KAEhC,EAAAX,EAAAmB,oBACAmB,EAAejB,UAAUlG,EAAMO,sB,CAEjC,MAAOkC,GACPC,QAAQC,IAAI,yBAA0BF,EAAMG,Q,CAC7C,QACC5C,EAAMC,KAAKoC,YAAY4E,MAAQ,E,KAcnC,MAAME,GAAiB,EAAAf,EAAAC,iBAEvB,SAA0BC,GACxBA,EAAQC,SAAQC,IACVA,EAAMC,iBACRjB,GAAqB,EACrBtD,EA3GU,mCA6GRb,EAAAC,KAAK+F,kBACL/B,EACAE,GACAkB,MAAKe,IACL,MAAMtB,QAAEA,GAAYsB,EAAU1E,KAC9BnB,EAAkBuE,EAAQ,I,MAbsB9E,EAAAqG,uBAqBxD1H,EAAMI,cAAc2D,iBAAiB,SAErC9B,eAAiC8E,GAC/BA,EAAEC,iBAEF,MAAMW,EAAgBZ,EAAEa,OAAOC,QAAQ,gBACvC,GAAIF,EAAe,CACjB,MAAMG,EAASH,EAAcI,aAAa,WAM1CzE,QALmBT,EAlIP,mCAoIVxB,EAAAC,KAAK0G,kBACLF,G","sources":["src/js/refs3.js","src/js/TrendingPeople/renderTrendingPeople.js","src/js/TrendingPeople/renderFoundPerson.js","src/js/TrendingPeople/searchPerson.js","src/js/TrendingPeople/fetchSinglePerson.js","src/js/helpers/createPersonModalMarkup.js","src/js/TrendingPeople/fetchTrendingPeople.js"],"sourcesContent":["export const refs3 = {\n  form: document.querySelector('.search-form-people'),\n  dataContainer: document.querySelector('.people-data-container'),\n  list: document.querySelector('.people-list'),\n  targetObserver: document.querySelector('.js-guard-people'),\n  targetObserverSearch: document.querySelector('.js-guard-search'),\n  backdrop: document.querySelector('.person-backdrop'),\n  modalWrapper: document.querySelector('.person-item-wrapper'),\n  endResultsInfo: document.querySelector('.no-results-info-people'),\n  closeBtn: document.querySelector('.modal-people-close-icon'),\n};\n","import { refs3 } from '../refs3';\nimport { URLS, genders } from '../constants';\n\nexport function renderTrendingPeople(people) {\n  const trendingPeople = people\n    .map(({ id, name, gender, known_for_department, profile_path }) => {\n      const imageSrc = profile_path\n        ? `${URLS.POSTER_URL}${profile_path}`\n        : URLS.DEFAULT_IMAGE;\n\n      const personGender = genders[gender] || 'Not specified';\n\n      return `<li class=\"person-item\" data-id=${id}>\n            <img\n              src=\"${imageSrc}\"\n              class=\"person-image\"\n              alt=\"person image\"\n            />\n          <div class=\"person-info\">\n            <h2 class=\"person-name\">${name}</h2>\n            <p class=\"person-gender\">${personGender}</p>\n            <p class=\"popular-movies\">Known for: ${\n              known_for_department || 'No data'\n            } </p>\n          </div>\n          </li>`;\n    })\n    .join('');\n\n  refs3.list.insertAdjacentHTML('beforeend', trendingPeople);\n}\n","import { refs3 } from '../refs3';\nimport { URLS, genders } from '../constants';\n\nexport function renderFoundPerson(foundPerson) {\n  const foundItems = foundPerson\n    .map(({ id, name, gender, profile_path }) => {\n      const imageSrc = profile_path\n        ? `${URLS.POSTER_URL}${profile_path}`\n        : URLS.DEFAULT_IMAGE;\n\n      const personGender = genders[gender] || 'Not specified';\n\n      return `<li class=\"person-item\" data-id=${id}>\n            <img\n              src=\"${imageSrc}\"\n              class=\"person-image\"\n              alt=\"person image\"\n            />\n            <h2 class=\"person-name\">${name}</h2>\n            <p class=\"person-gender\">Gender: ${personGender}</p>\n          \n          </li>`;\n    })\n    .join('');\n\n  refs3.list.insertAdjacentHTML('beforeend', foundItems);\n}\n","import axios from 'axios';\n\nexport async function searchPerson(key, url, searchQuery, page) {\n  try {\n    const response = await axios.get(\n      `${url}?api_key=${key}&query=${searchQuery}&page=${page}`\n    );\n\n    return response;\n  } catch (error) {\n    console.log('Error fetching person:', error.message);\n  }\n}\n","import axios from 'axios';\n\nexport async function fetchSinglePerson(key, url, id) {\n  try {\n    const response = await axios.get(`${url}/${id}?api_key=${key}`);\n    const personDetails = response.data;\n\n    return personDetails;\n  } catch (error) {\n    console.log('Error fetching person\"s data:', error.message);\n  }\n}\n","import { refs3 } from '../refs3';\nimport { URLS, genders } from '../constants';\nimport { onBackdropClick, onEscKeyPress } from './onCloseFunctions';\n\nimport { notifyAddSuccess, notifyIsInFavorites } from './notifyWarnings';\n\nconst favoritePeopleList =\n  JSON.parse(localStorage.getItem('favorite_people')) ?? [];\n\nexport async function createPersonModalMarkup(data) {\n  const {\n    id,\n    birthday,\n    biography,\n    place_of_birth,\n    gender,\n    name,\n    known_for_department,\n    profile_path,\n    popularity,\n  } = data;\n\n  const personImg = profile_path\n    ? `${URLS.POSTER_URL}${profile_path}`\n    : URLS.DEFAULT_IMAGE;\n  const personGender = genders[gender] || 'Not specified';\n\n  let markup = `<div class=\"person-item-detailed\" id=${id}>\n           <img src=\"${personImg}\" class=\"person-image\" alt=\"person image\">\n            <h2 class=\"modal-name modal-title\">${name}</h2>\n            <p class=\"gender\"> <span class=\"modal-bold\"> Gender:</span> ${personGender}</p>\n            <p class=\"birthday\"> <span class=\"modal-bold\"> Born:</span> ${\n              birthday || 'unknown'\n            }</p>\n            <p class=\"place_of_birth\"> <span class=\"modal-bold\"> Place of birth:</span> ${\n              place_of_birth || 'unknown'\n            }</span>\n            <p class=\"known_for\"> <span class=\"modal-bold\"> Known for:</span> ${\n              known_for_department || 'No data'\n            }</p>\n            <p class=\"biography\"> <span class=\"modal-bold\">Bio:</span> ${\n              biography || 'no info'\n            }</p>\n            <p class=\"popularity\"> <span class=\"modal-bold\"> Popularity:</span> ${popularity}</p>\n            <button type=\"button\" class=\"person-fav\">Add to favorites</button>\n          </div>`;\n\n  refs3.backdrop.classList.remove('is-hidden');\n  refs3.modalWrapper.innerHTML = markup;\n\n  refs3.backdrop.addEventListener('click', event =>\n    onBackdropClick(event, onModalClose)\n  );\n  window.addEventListener('keydown', event =>\n    onEscKeyPress(event, onModalClose)\n  );\n  refs3.closeBtn.addEventListener('click', onModalClose);\n\n  /* ======================  ADD TO FAVORITES ======================  */\n  const addFavBtn = document.querySelector('.person-fav');\n  addFavBtn.addEventListener('click', () => addToFavorites(data));\n}\n\nfunction onModalClose() {\n  refs3.modalWrapper.innerHTML = '';\n\n  refs3.backdrop.classList.add('is-hidden');\n\n  refs3.backdrop.removeEventListener('click', onModalClose);\n  refs3.closeBtn.removeEventListener('click', onModalClose);\n  window.removeEventListener('keydown', onEscKeyPress);\n}\n\nfunction addToFavorites(person) {\n  const inStorage = favoritePeopleList.some(fav => fav.id === person.id);\n  const personItem = {\n    id: person.id,\n    name: person.name,\n    gender: person.gender,\n    birthday: person.birthday,\n    biography: person.biography,\n    knownFor: person.known_for_department,\n    placeOfBirth: person.place_of_birth,\n    profile_path: person.profile_path,\n    popularity: person.popularity,\n  };\n\n  if (!inStorage) {\n    favoritePeopleList.push(personItem);\n    localStorage.setItem('favorite_people', JSON.stringify(favoritePeopleList));\n    notifyAddSuccess(person.name);\n  } else {\n    notifyIsInFavorites(person.name);\n  }\n}\n","import { refs3 } from '../refs3';\nimport {\n  URLS,\n  trendingObserverOptions,\n  searchObserverOptions,\n} from '../constants';\nimport { renderTrendingPeople } from './renderTrendingPeople';\nimport { renderFoundPerson } from './renderFoundPerson';\nimport { searchPerson } from './searchPerson';\nimport { fetchSinglePerson } from './fetchSinglePerson';\nimport { createPersonModalMarkup } from '../helpers/createPersonModalMarkup';\nimport { notifyEndResults, notifyNoResults } from '../helpers/notifyWarnings';\nimport { fetchData } from '../helpers/fetchers';\nimport { setNewObserver } from '../helpers/setNewObserver';\n\n// const API_KEY = process.env.API_KEY;\n\nconst API_KEY = '86bcaf318e232372b2e8e2623c959f88';\nlet query = '';\nlet currentPage = 1;\nlet currentSearchPage = 1;\n\n/* ====================== TRENDING ======================  */\n\nasync function fetchTrendingPeople(currentPage) {\n  try {\n    const response = await fetchData(URLS.BASE_PEOPLE_URL, {\n      api_key: API_KEY,\n      page: currentPage,\n    });\n\n    if (response.total_pages === currentSearchPage) {\n      notifyEndResults();\n      trendingObserver.unobserve(refs3.targetObserver);\n    }\n    const dataPeople = response.results;\n    return dataPeople;\n  } catch (error) {\n    console.log('Error fetching trending people:', error.message);\n  }\n}\n\nconst trendingObserver = setNewObserver(\n  onLoadMoreTrending,\n  trendingObserverOptions\n);\n\nfunction onLoadMoreTrending(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentPage += 1;\n      fetchTrendingPeople(currentPage).then(data => renderTrendingPeople(data));\n    }\n  });\n}\n\n// Initializing fetch request for trending\n\nfetchTrendingPeople(currentPage)\n  .then(data => renderTrendingPeople(data))\n  .then(() => trendingObserver.observe(refs3.targetObserver))\n  .catch(err => console.log(err));\n\n/* ====================== SEARCH ======================  */\n\nrefs3.form.addEventListener('submit', searchByName);\n\nasync function searchByName(e) {\n  e.preventDefault();\n\n  refs3.backdrop.classList.add('is-hidden');\n  query = refs3.form.searchQuery.value.trim();\n\n  resetState();\n\n  try {\n    const personData = await searchPerson(\n      API_KEY,\n      URLS.SEARCH_PERSON_URL,\n      query,\n      currentSearchPage\n    );\n\n    const { results, total_results } = personData.data;\n\n    if (results && results.length > 0) {\n      renderFoundPerson(results);\n      searchObserver.observe(refs3.targetObserverSearch);\n    } else {\n      refs3.endResultsInfo.classList.remove('visually-hidden');\n      notifyNoResults();\n    }\n\n    if (\n      total_results &&\n      total_results <= 20 &&\n      personData.data.total_pages === currentSearchPage\n    ) {\n      notifyEndResults();\n      searchObserver.unobserve(refs3.targetObserverSearch);\n    }\n  } catch (error) {\n    console.log('Error fetching person:', error.message);\n  } finally {\n    refs3.form.searchQuery.value = '';\n  }\n}\n\nfunction resetState() {\n  trendingObserver.unobserve(refs3.targetObserver);\n  searchObserver.unobserve(refs3.targetObserverSearch);\n\n  refs3.list.innerHTML = '';\n  refs3.endResultsInfo.classList.add('visually-hidden');\n\n  currentSearchPage = 1;\n}\n\nconst searchObserver = setNewObserver(onLoadMoreSearch, searchObserverOptions);\n\nfunction onLoadMoreSearch(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentSearchPage += 1;\n      searchPerson(\n        API_KEY,\n        URLS.SEARCH_PERSON_URL,\n        query,\n        currentSearchPage\n      ).then(dataFound => {\n        const { results } = dataFound.data;\n        renderFoundPerson(results);\n      });\n    }\n  });\n}\n\n/* ====================== PERSON'S DETAILS ======================  */\n\nrefs3.dataContainer.addEventListener('click', onPersonItemClick);\n\nasync function onPersonItemClick(e) {\n  e.preventDefault();\n\n  const targetElement = e.target.closest('.person-item');\n  if (targetElement) {\n    const dataId = targetElement.getAttribute('data-id');\n    const data = await fetchSinglePerson(\n      API_KEY,\n      URLS.SINGLE_PERSON_URL,\n      dataId\n    );\n    createPersonModalMarkup(data);\n  }\n}\n"],"names":["$e906e16ee62abe85$export$1667d6aa2cee11d8","form","document","querySelector","dataContainer","list","targetObserver","targetObserverSearch","backdrop","modalWrapper","endResultsInfo","closeBtn","$45ebb74e1e41cb42$export$1f3529df0466b8e9","people","trendingPeople","map","id","name","gender","known_for_department","profile_path","$8G1wF","URLS","POSTER_URL","DEFAULT_IMAGE","genders","join","insertAdjacentHTML","$3031f43cc7f53ebe$export$706c7750293f7a13","foundPerson","foundItems","$2shzp","parcelRequire","async","$33a9d54fb0f6f81e$export$791a87ce43433885","key","url","searchQuery","page","default","get","error","console","log","message","$d289a749cf5d8107$export$bda05f064222d25a","response","data","$06bcc255bee61c4e$var$ref","$06bcc255bee61c4e$var$favoritePeopleList","JSON","parse","localStorage","getItem","$06bcc255bee61c4e$export$9a7ad2d283fab89","birthday","biography","place_of_birth","popularity","markup","classList","remove","innerHTML","addEventListener","event","$6Ipdt","onBackdropClick","$06bcc255bee61c4e$var$onModalClose","window","onEscKeyPress","person","inStorage","some","fav","personItem","knownFor","placeOfBirth","$kj8Rd","notifyIsInFavorites","push","setItem","stringify","notifyAddSuccess","$06bcc255bee61c4e$var$addToFavorites","add","removeEventListener","$313ad1f2210997b7$var$query","$313ad1f2210997b7$var$currentPage","$313ad1f2210997b7$var$currentSearchPage","$313ad1f2210997b7$var$fetchTrendingPeople","currentPage1","$dB5GG","fetchData","BASE_PEOPLE_URL","api_key","total_pages","notifyEndResults","$313ad1f2210997b7$var$trendingObserver","unobserve","results","$hlWSz","setNewObserver","entries","forEach","entry","isIntersecting","then","trendingObserverOptions","observe","catch","err","e","preventDefault","value","trim","$313ad1f2210997b7$var$searchObserver","personData","SEARCH_PERSON_URL","total_results","length","notifyNoResults","dataFound","searchObserverOptions","targetElement","target","closest","dataId","getAttribute","SINGLE_PERSON_URL"],"version":3,"file":"trendingpeople.4f5e4d9d.js.map"}