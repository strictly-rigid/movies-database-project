{"mappings":"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","sources":["src/js/TrendingSeries/fetchTrendingSeries.js","src/js/refs2.js","src/js/TrendingSeries/renderTrendingSeries.js","src/js/TrendingSeries/renderFoundSeries.js","src/js/TrendingSeries/searchSeries.js","src/js/TrendingSeries/fetchSingleSeries.js","src/js/helpers/createSeriesModalMarkup.js"],"sourcesContent":["import axios from 'axios';\nimport { refs2 } from '../refs2';\nimport {\n  URLS,\n  trendingObserverOptions,\n  searchObserverOptions,\n} from '../constants';\nimport { renderTrendingSeries } from './renderTrendingSeries';\nimport { renderFoundSeries } from './renderFoundSeries';\nimport { searchSeries } from './searchSeries';\nimport { fetchSingleSeries } from './fetchSingleSeries';\nimport { createSeriesModalMarkup } from '../helpers/createSeriesModalMarkup';\nimport { notifyEndResults, notifyNoResults } from '../helpers/notifyWarnings';\n\nconst API_KEY = '86bcaf318e232372b2e8e2623c959f88';\nlet query = '';\nlet currentPage = 1;\nlet currentSearchPage = 1;\nlet isLoading = false;\n\n/* ====================== TRENDING ======================  */\n\nasync function fetchTrendingSeries(key, url, currentPage) {\n  try {\n    isLoading = true;\n    const response = await axios.get(\n      `${url}?api_key=${key}&page=${currentPage}`\n    );\n    console.log(response);\n    if (response.data.total_pages === currentSearchPage) {\n      notifyEndResults();\n      trendingObserver.unobserve(refs2.targetObserverSeries);\n    }\n    const dataSeries = response.data.results;\n    return dataSeries;\n  } catch (error) {\n    console.log('Error fetching trending series:', error.message);\n  } finally {\n    isLoading = false;\n  }\n}\n\nlet trendingObserver = new IntersectionObserver(\n  onLoadMoreTrending,\n  trendingObserverOptions\n);\nfunction onLoadMoreTrending(entries, observer) {\n  console.log(entries);\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentPage += 1;\n      fetchTrendingSeries(API_KEY, URLS.BASE_SERIES_URL, currentPage).then(\n        data => renderTrendingSeries(data)\n      );\n    }\n  });\n}\n\nfetchTrendingSeries(API_KEY, URLS.BASE_SERIES_URL, currentPage)\n  .then(data => renderTrendingSeries(data))\n  .then(() => trendingObserver.observe(refs2.targetObserverSeries))\n  .catch(err => console.log(err));\n\n/* ====================== SEARCH ======================  */\n\nrefs2.form.addEventListener('submit', searchByName);\n\nasync function searchByName(e) {\n  e.preventDefault();\n\n  trendingObserver.unobserve(refs2.targetObserverSeries);\n  searchObserver.unobserve(refs2.targetObserverSearch);\n\n  refs2.backdrop.classList.add('is-hidden');\n  query = refs2.form.searchQuery.value.trim();\n  currentSearchPage = 1;\n\n  try {\n    refs2.seriesList.innerHTML = '';\n    refs2.endResultsInfo.classList.add('visually-hidden');\n\n    const seriesData = await searchSeries(\n      API_KEY,\n      URLS.SEARCH_SERIES_URL,\n      query,\n      currentSearchPage\n    );\n\n    const { results, total_results } = seriesData.data;\n\n    if (results && results.length > 0) {\n      renderFoundSeries(results);\n      searchObserver.observe(refs2.targetObserverSearch);\n    } else {\n      refs2.endResultsInfo.classList.remove('visually-hidden');\n      notifyNoResults();\n    }\n\n    if (\n      total_results &&\n      total_results <= 20 &&\n      seriesData.data.total_pages === currentSearchPage\n    ) {\n      notifyEndResults();\n      searchObserver.unobserve(refs2.targetObserverSearch);\n    }\n  } catch (error) {\n    console.log('Error fetching series:', error.message);\n  } finally {\n    refs2.form.searchQuery.value = '';\n  }\n}\n\nlet searchObserver = new IntersectionObserver(\n  onLoadMoreSearch,\n  searchObserverOptions\n);\n\nfunction onLoadMoreSearch(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentSearchPage += 1;\n      searchSeries(\n        API_KEY,\n        URLS.SEARCH_SERIES_URL,\n        query,\n        currentSearchPage\n      ).then(dataFound => {\n        const { results } = dataFound.data;\n        renderFoundSeries(results);\n      });\n    }\n  });\n}\n\n/* ======================  SERIES' DETAILS ======================  */\n\nrefs2.seriesContainer.addEventListener('click', onSeriesItemClick);\n\nasync function onSeriesItemClick(e) {\n  e.preventDefault();\n\n  const targetElement = e.target.closest('.series-item');\n  if (targetElement) {\n    const dataId = targetElement.getAttribute('data-id');\n    const data = await fetchSingleSeries(\n      API_KEY,\n      URLS.SINGLE_SERIES_URL,\n      dataId\n    );\n    createSeriesModalMarkup(data);\n  }\n}\n","export const refs2 = {\n  form: document.querySelector('.search-form-series'),\n  seriesContainer: document.querySelector('.series-data-container'),\n  seriesList: document.querySelector('.series-list'),\n  targetObserverSeries: document.querySelector('.js-guard-series'),\n  targetObserverSearch: document.querySelector('.js-guard-search'),\n  backdrop: document.querySelector('.series-backdrop'),\n  modalWrapper: document.querySelector('.series-item-wrapper'),\n  endResultsInfo: document.querySelector('.no-results-info-series'),\n  closeBtn: document.querySelector('.modal-close-btn'),\n};\n","import { refs2 } from '../refs2.js';\nimport { URLS } from '../constants.js';\n\nexport function renderTrendingSeries(series) {\n  console.log(series);\n  const trendingSeries = series\n    .map(\n      ({\n        id,\n        name,\n        overview,\n        vote_average,\n        poster_path,\n        first_air_date,\n      }) => `<li class=\"series-item\" data-id=${id}>\n            <img src=\"${\n              URLS.POSTER_URL\n            }${poster_path}\" class=\"series-poster\" alt=\"series poster\">\n            <div class=\"series-info\">\n            <h2 class=\"series-title\">${name}</h2>\n            <p class=\"series-description\">${overview}</p>\n            <p class=\"series-premiere\">Premiere date: ${first_air_date}</p>\n            <span class=\"series-rate\">Rating: ${vote_average.toFixed(2)}</span>\n            </div>\n          </li>`\n    )\n    .join('');\n\n  refs2.seriesList.insertAdjacentHTML('beforeend', trendingSeries);\n}\n","import { refs2 } from '../refs2';\nimport { URLS, genres } from '../constants';\n\nfunction getGenres(genre_ids) {\n  return genre_ids\n    .map(id => {\n      const genre = genres.find(g => g.id === id);\n      return genre ? genre.name : '';\n    })\n    .filter(Boolean)\n    .join(', ');\n}\n\nexport function renderFoundSeries(foundSeries) {\n  const foundItems = foundSeries\n    .map(\n      ({\n        id,\n        genre_ids,\n        name,\n        overview,\n        first_air_date,\n        vote_average,\n        vote_count,\n        poster_path,\n      }) => {\n        const genreNames = getGenres(genre_ids);\n\n        return `<li class=\"series-item\" data-id=${id}>\n            <img src=\"${\n              URLS.POSTER_URL\n            }${poster_path}\" class=\"series-poster\" alt=\"series poster\">\n            <div class=\"series-info\">\n            <h2 class=\"series-title\">${name}</h2>\n            <p class=\"series-description\">${overview}</p>\n              <p class=\"series-genres\">Genres: ${genreNames || 'No data'}</p>\n                <p class=\"series-premiere\">Premiere date: ${first_air_date}</p>\n                 <span class=\"series-rate\">Rating: ${vote_average.toFixed(\n                   2\n                 )}</span> \n                 <span class=\"series-rate-count\">Total votes: ${vote_count}</span> \n          </div>     \n          </li>`;\n      }\n    )\n    .join('');\n\n  refs2.seriesList.insertAdjacentHTML('beforeend', foundItems);\n}\n","import axios from 'axios';\n\nexport async function searchSeries(key, url, searchQuery, page) {\n  try {\n    const response = await axios.get(\n      `${url}?api_key=${key}&query=${searchQuery}&page=${page}`\n    );\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.log('Error fetching trending series:', error.message);\n  }\n}\n","import axios from 'axios';\nlet isLoading = false;\n\nexport async function fetchSingleSeries(key, url, id) {\n  try {\n    isLoading = true;\n    const response = await axios.get(`${url}/${id}?api_key=${key}`);\n    console.log(response);\n    const seriesMovies = response.data;\n    return seriesMovies;\n  } catch (error) {\n    console.log('Error fetching series:', error.message);\n  } finally {\n    isLoading = false;\n  }\n}\n","import { refs2 } from '../refs2';\nimport { URLS } from '../constants';\n\nimport { notifyAddSuccess, notifyIsInFavorites } from './notifyWarnings';\n\nlet favoriteSeriesList =\n  JSON.parse(localStorage.getItem('favorite_series')) ?? [];\n\nexport async function createSeriesModalMarkup(data) {\n  const {\n    id,\n    created_by,\n    in_production,\n    languages,\n    genres,\n    origin_country,\n    name,\n    first_air_date,\n    number_of_seasons,\n    number_of_episodes,\n    vote_average,\n    vote_count,\n    overview,\n    poster_path,\n  } = data;\n\n  const genreNames = genres.map(genre => genre.name).join(', ');\n  const languagesSpoken = languages.map(language => language).join(', ');\n  const creators = created_by.map(creator => creator.name).join(', ');\n\n  let markup = `<div class=\"series-item-detailed\" id=${id}>\n       <img src=\"${URLS.POSTER_URL}${poster_path}\" class=\"series-poster\" alt=\"series poster\">\n        <h2 class=\"modal-title\">${name}</h2>\n        <p class=\"modal-genres\"><span class=\"modal-bold\">Genres:</span> ${genreNames}</p>\n       \n        <p class=\"orig-country\"><span class=\"modal-bold\">Origin country:</span> ${origin_country}</p>\n        <p class=\"in-production\"><span class=\"modal-bold\">Still in production:</span> ${in_production}</p>\n      \n\n     \n        <p class=\"first-air-date\"><span class=\"modal-bold\">First air date:</span> ${first_air_date}</p>\n        <p class=\"modal-series-description\"><span class=\"modal-bold\">Desription:</span> ${overview}</p>\n      \n        <p class=\"created-by\"><span class=\"modal-bold\">Creators:</span> ${creators}</p>\n        <p class=\"languages\"><span class=\"modal-bold\">Spoken languages:</span> ${languagesSpoken}</p>\n        <div class=\"series-length\">\n        <span class=\"seasons\"><span class=\"modal-bold\">Number of seasons:</span> ${number_of_seasons}</span>\n        <span class=\"episodes\"><span class=\"modal-bold\">Number of episodes:</span> ${number_of_episodes}</span>\n        </div>\n\n        <div class=\"series-modal-rate\">\n         <span class=\"rating\"><span class=\"modal-bold\">Rating:</span> ${vote_average}</span>\n         <span class=\"vote-count\"><span class=\"modal-bold\">Total votes:</span> ${vote_count}</span>\n         </div>\n\n         <button type=\"button\" class=\"series-fav\">Add to favorites</button>\n   \n      </div>`;\n\n  refs2.backdrop.classList.remove('is-hidden');\n  refs2.modalWrapper.innerHTML = markup;\n\n  refs2.backdrop.addEventListener('click', onBackdropClick);\n  window.addEventListener('keydown', onEscKeyPress);\n  refs2.closeBtn.addEventListener('click', onModalClose);\n\n  /* ======================  ADD TO FAVORITES ======================  */\n  const addFavBtn = document.querySelector('.series-fav');\n  addFavBtn.addEventListener('click', () => addToFavorites(data));\n}\n\nfunction onModalClose() {\n  refs2.modalWrapper.innerHTML = '';\n\n  refs2.backdrop.classList.add('is-hidden');\n  // document.body.classList.remove('modal-open');\n\n  refs2.backdrop.removeEventListener('click', onModalClose);\n  refs2.closeBtn.removeEventListener('click', onModalClose);\n  window.removeEventListener('keydown', onEscKeyPress);\n}\n\nfunction onEscKeyPress(event) {\n  if (event.code === 'Escape') {\n    onModalClose();\n  }\n}\n\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    onModalClose();\n  }\n}\n\nfunction addToFavorites(series) {\n  const inStorage = favoriteSeriesList.some(fav => fav.id === series.id);\n  const seriesItem = {\n    id: series.id,\n    name: series.name,\n    createdBy: series.created_by,\n    inProduction: series.in_production,\n    languages: series.languages,\n    genres: series.genres,\n    originCountry: series.origin_country,\n    posterPath: series.poster_path,\n    firstAir: series.first_air_date,\n    numberSeasons: series.number_of_seasons,\n    numberEpisodes: series.number_of_episodes,\n    overview: series.overview,\n    voteAverage: series.vote_average,\n    voteCount: series.vote_count,\n  };\n\n  if (!inStorage) {\n    favoriteSeriesList.push(seriesItem);\n    localStorage.setItem('favorite_series', JSON.stringify(favoriteSeriesList));\n    notifyAddSuccess(series.name);\n  } else {\n    notifyIsInFavorites(series.name);\n  }\n}\n"],"names":["$bpxeT","parcelRequire","$f7f0efa6c7f437e8$export$dd54c2f2d692d36f","form","document","querySelector","seriesContainer","seriesList","targetObserverSeries","targetObserverSearch","backdrop","modalWrapper","endResultsInfo","closeBtn","$70471455671d24b4$export$3a1ca11763a591fc","series","console","log","trendingSeries","map","param","id","name","overview","vote_average","poster_path","first_air_date","concat","$4s6iC","URLS","POSTER_URL","toFixed","join","insertAdjacentHTML","$39d3062942c19417$export$1035edcb0883cee","foundSeries","foundItems","genre_ids","vote_count","genreNames","genre","genres","find","g","filter","Boolean","$39d3062942c19417$var$getGenres","$dbda837601adec74$export$87284bbc4af8de3","key","url","searchQuery","page","$dbda837601adec74$var$_searchSeries","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","$dIxxU","default","get","_ctx","sent","t0","message","$6b848aded986c971$export$18d2d9a21124daea","$6b848aded986c971$var$_fetchSingleSeries","seriesMovies","data","$7bb17b9a23564351$var$ref","$7bb17b9a23564351$var$favoriteSeriesList","JSON","parse","localStorage","getItem","$7bb17b9a23564351$export$6b84cf0fb22670f7","$7bb17b9a23564351$var$_createSeriesModalMarkup","created_by","in_production","languages","origin_country","number_of_seasons","number_of_episodes","languagesSpoken","creators","markup","language","creator","classList","remove","innerHTML","addEventListener","$7bb17b9a23564351$var$onBackdropClick","window","$7bb17b9a23564351$var$onEscKeyPress","$7bb17b9a23564351$var$onModalClose","$7bb17b9a23564351$var$addToFavorites","add","removeEventListener","event","code","currentTarget","target","inStorage","some","fav","seriesItem","createdBy","inProduction","originCountry","posterPath","firstAir","numberSeasons","numberEpisodes","voteAverage","voteCount","$lG111","notifyIsInFavorites","push","setItem","stringify","notifyAddSuccess","$4bd51fddaa51488b$var$API_KEY","$4bd51fddaa51488b$var$query","$4bd51fddaa51488b$var$currentPage","$4bd51fddaa51488b$var$currentSearchPage","$4bd51fddaa51488b$var$fetchTrendingSeries","currentPage1","$4bd51fddaa51488b$var$_fetchTrendingSeries","dataSeries","total_pages","notifyEndResults","$4bd51fddaa51488b$var$trendingObserver","unobserve","results","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","BASE_SERIES_URL","then","trendingObserverOptions","$4bd51fddaa51488b$var$_searchByName","e","seriesData","_data","total_results","preventDefault","$4bd51fddaa51488b$var$searchObserver","value","trim","SEARCH_SERIES_URL","length","observe","notifyNoResults","catch","err","dataFound","searchObserverOptions","$4bd51fddaa51488b$var$_onSeriesItemClick","targetElement","dataId","closest","getAttribute","SINGLE_SERIES_URL"],"version":3,"file":"trendingseries.4a347255.js.map"}