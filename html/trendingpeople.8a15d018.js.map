{"mappings":"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","sources":["src/js/TrendingPeople/fetchTrendingPeople.js","src/js/refs3.js","src/js/TrendingPeople/renderTrendingPeople.js","src/js/TrendingPeople/renderFoundPerson.js","src/js/TrendingPeople/searchPerson.js","src/js/TrendingPeople/fetchSinglePerson.js","src/js/helpers/createPersonModalMarkup.js"],"sourcesContent":["import axios from 'axios';\nimport { refs3 } from '../refs3';\nimport { URLS } from '../constants';\nimport { renderTrendingPeople } from './renderTrendingPeople';\nimport { renderFoundPerson } from './renderFoundPerson';\n\nimport { searchPerson } from './searchPerson';\n\nimport { fetchSinglePerson } from './fetchSinglePerson';\nimport { createPersonModalMarkup } from '../helpers/createPersonModalMarkup';\n\nconst API_KEY = '86bcaf318e232372b2e8e2623c959f88';\nlet query = '';\n\nlet currentPage = 1;\nlet isLoading = false;\n\nexport async function fetchTrendingPeople(key, url, currentPage) {\n  try {\n    isLoading = true;\n    const response = await axios.get(\n      `${url}?api_key=${key}&page=${currentPage}`\n    );\n    // console.log(response);\n    const dataPeople = response.data.results;\n    return dataPeople;\n  } catch (error) {\n    console.log('Error fetching trending people:', error.message);\n  } finally {\n    isLoading = false;\n  }\n}\n\nlet options = {\n  root: null,\n  rootMargin: '400px',\n  threshold: 1.0,\n};\n\nlet observer = new IntersectionObserver(onLoadMore, options);\nfunction onLoadMore(entries, observer) {\n  console.log(entries);\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentPage += 1;\n      if (!query) {\n        fetchTrendingPeople(API_KEY, URLS.BASE_PEOPLE_URL, currentPage).then(\n          data => renderTrendingPeople(data)\n        );\n      } else {\n        fetchPerson();\n      }\n    }\n  });\n}\n\n// if (document.body.id === 'people-page') {\n//   fetchTrendingPeople(API_KEY, URLS.BASE_PEOPLE_URL, currentPage)\n//     .then(data => renderTrendingPeople(data))\n//     .then(() => observer.observe(refs3.targetObserverPeople))\n//     .catch(err => console.log(err));\n// }\n\nfetchTrendingPeople(API_KEY, URLS.BASE_PEOPLE_URL, currentPage)\n  .then(data => renderTrendingPeople(data))\n  .then(() => observer.observe(refs3.targetObserverPeople))\n  .catch(err => console.log(err));\n\n/* ====================== DETAILS ======================  */\n\nrefs3.peopleContainer.addEventListener('click', onPersonItemClick);\n\nasync function onPersonItemClick(e) {\n  e.preventDefault();\n  console.log('Hellow from callback');\n  const targetElement = e.target.closest('.person-item');\n  if (targetElement) {\n    const dataId = targetElement.getAttribute('data-id');\n    const data = await fetchSinglePerson(\n      API_KEY,\n      URLS.SINGLE_PERSON_URL,\n      dataId\n    );\n    createPersonModalMarkup(data);\n  }\n}\n\n/* ====================== SEARCH ======================  */\n\nrefs3.form.addEventListener('submit', fetchPerson);\n\nasync function fetchPerson(e) {\n  // e.preventDefault();\n  if (e) {\n    e.preventDefault();\n  }\n  observer.unobserve(refs3.targetObserverPeople);\n  refs3.backdrop.classList.add('is-hidden');\n  query = refs3.form.searchQuery.value.trim();\n  try {\n    const personData = await searchPerson(\n      API_KEY,\n      URLS.SEARCH_PERSON_URL,\n      query\n    );\n    renderFoundPerson(personData);\n  } catch (error) {\n    console.log('Error fetching person:', error.message);\n  } finally {\n    observer.observe(refs3.targetObserverPeople);\n  }\n}\n","export const refs3 = {\n  form: document.querySelector('.search-form-people'),\n  peopleContainer: document.querySelector('.people-data-container'),\n  peopleList: document.querySelector('.people-list'),\n  targetObserverPeople: document.querySelector('.js-guard-people'),\n  backdrop: document.querySelector('.person-backdrop'),\n  modalWrapper: document.querySelector('.person-item-wrapper'),\n};\n","import { refs3 } from '../refs3';\nimport { genders } from '../constants';\n\nconst POSTER_URL = `https://image.tmdb.org/t/p/w500`;\nconst DEFAULT_IMAGE =\n  'https://t4.ftcdn.net/jpg/00/64/67/63/360_F_64676383_LdbmhiNM6Ypzb3FM4PPuFP9rHe7ri8Ju.jpg';\n\nexport function renderTrendingPeople(people) {\n  console.log(people);\n  const trendingPeople = people\n    .map(({ id, name, gender, known_for_department, profile_path }) => {\n      // const titles = known_for.map(item => item.title || item.name).join(', ');\n\n      const imageSrc = profile_path\n        ? `${POSTER_URL}${profile_path}`\n        : DEFAULT_IMAGE;\n\n      const personGender = genders[gender] || 'Not specified';\n\n      return `<li class=\"person-item\" data-id=${id}>\n            <img\n              src=\"${imageSrc}\"\n              class=\"person-image\"\n              alt=\"person image\"\n            />\n          <div class=\"person-info\">\n            <h2 class=\"person-name\">${name}</h2>\n            <p class=\"person-gender\">${personGender}</p>\n            <p class=\"popular-movies\">Known for: ${known_for_department}</p>\n          </div>\n          </li>`;\n    })\n    .join('');\n\n  refs3.peopleList.insertAdjacentHTML('beforeend', trendingPeople);\n}\n","import { refs3 } from '../refs3';\nimport { genders } from '../constants';\n\nconst POSTER_URL = `https://image.tmdb.org/t/p/w500`;\nconst DEFAULT_IMAGE =\n  'https://t4.ftcdn.net/jpg/00/64/67/63/360_F_64676383_LdbmhiNM6Ypzb3FM4PPuFP9rHe7ri8Ju.jpg';\n\nexport function renderFoundPerson(foundPerson) {\n  console.log(foundPerson);\n  const foundItems = foundPerson\n    .map(({ id, known_for_department, name, gender, profile_path }) => {\n      // const titles = known_for_department\n      //   .map(item => item.title || item.name)\n      //   .join(', ');\n\n      const imageSrc = profile_path\n        ? `${POSTER_URL}${profile_path}`\n        : DEFAULT_IMAGE;\n\n      const personGender = genders[gender] || 'Not specified';\n\n      return `<li class=\"person-item\" data-id=${id}>\n            <img\n              src=\"${imageSrc}\"\n              class=\"person-image\"\n              alt=\"person image\"\n            />\n            <h2 class=\"person-name\">${name}</h2>\n            <p class=\"person-gender\">${personGender}</p>\n          \n          </li>`;\n    })\n    .join('');\n\n  refs3.peopleList.insertAdjacentHTML('beforeend', foundItems);\n}\n","import axios from 'axios';\nimport { refs3 } from '../refs3.js';\n\nexport async function searchPerson(key, url, searchQuery) {\n  try {\n    const response = await axios.get(\n      `${url}?api_key=${key}&query=${searchQuery}`\n    );\n\n    console.log(response);\n    const dataFoundPerson = response.data.results;\n    if (dataFoundPerson) {\n      refs3.peopleList.innerHTML = '';\n    }\n\n    return dataFoundPerson;\n  } catch (error) {\n    console.log('Error fetching person:', error.message);\n  }\n}\n\n// import axios from 'axios';\n// import { refs3 } from '../refs3.js';\n\n// export async function searchPerson(key, url, searchQuery, renderFoundPerson) {\n//   try {\n//     const response = await axios.get(\n//       `${url}?api_key=${key}&query=${searchQuery}`\n//     );\n\n//     console.log(response);\n//     const queryFoundPerson = response.data.results;\n//     if (queryFoundPerson) {\n//       refs3.peopleList.innerHTML = '';\n//     }\n\n//     renderFoundPerson(queryFoundPerson);\n//   } catch (error) {\n//     console.log('Error fetching person:', error.message);\n//   }\n// }\n","import axios from 'axios';\nimport { refs3 } from '../refs3';\nimport { URLS } from '../constants';\n// import { createSeriesModalMarkup } from '../helpers/createSeriesModalMarkup';\nconst API_KEY = '86bcaf318e232372b2e8e2623c959f88';\n\nlet isLoading = false;\n\nexport async function fetchSinglePerson(key, url, id) {\n  try {\n    isLoading = true;\n    const response = await axios.get(`${url}/${id}?api_key=${key}`);\n    // console.log(response);\n    const personDetails = response.data;\n    return personDetails;\n  } catch (error) {\n    console.log('Error fetching person\"s data:', error.message);\n  } finally {\n    isLoading = false;\n  }\n}\n","import { refs3 } from '../refs3';\n\nconst POSTER_URL = `https://image.tmdb.org/t/p/w500`;\n\nexport async function createPersonModalMarkup(data) {\n  const {\n    id,\n    birthday,\n    biography,\n    place_of_birth,\n    gender,\n    name,\n    known_for_department,\n    poster_path,\n    popularity,\n  } = data;\n  console.log(data);\n\n  let markup = `<div class=\"person-item-detailed\" id=${id}>\n           <img src=\"${POSTER_URL}${poster_path}\" class=\"movie-poster\" alt=\"movie poster\">\n            <h2 class=\"modal-name\">${name}</h2>\n            <span class=\"gender\">Gender: ${gender}</span>\n            <span class=\"birthday\">Born: ${birthday}</span>\n            <span class=\"place_of_birth\">Place of birth:${place_of_birth}</span>\n            <p class=\"known_for\">Known for:${known_for_department}</p>\n            <p class=\"biography\">Bio: ${biography}</p>\n            <span class=\"popularity\">Popularity: ${popularity}</span>\n          </div>`;\n\n  refs3.backdrop.classList.remove('is-hidden');\n  refs3.modalWrapper.innerHTML = markup;\n\n  //   refs.closeBtn = document.querySelector('.modal-close-btn');\n  //   refs.closeBtn.addEventListener('click', onModalClose);\n  //   window.addEventListener('keydown', onEscKeyPress);\n  //   console.log(refs.closeBtn);\n}\n"],"names":["$bpxeT","parcelRequire","$a29f26a4a40c2f0a$var$API_KEY","$a29f26a4a40c2f0a$var$query","$a29f26a4a40c2f0a$var$currentPage","$a29f26a4a40c2f0a$export$458029cb8ddc5d51","key","url","currentPage1","$a29f26a4a40c2f0a$var$_fetchTrendingPeople","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","dataPeople","$dIxxU","default","get","concat","_ctx","sent","data","results","console","log","t0","message","$a29f26a4a40c2f0a$var$observer","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","$a29f26a4a40c2f0a$var$fetchPerson","$4s6iC","URLS","BASE_PEOPLE_URL","then","$76fvS","renderTrendingPeople","root","rootMargin","threshold","$a29f26a4a40c2f0a$var$_onPersonItemClick","e","targetElement","dataId","preventDefault","target","closest","getAttribute","$iKlHq","fetchSinglePerson","SINGLE_PERSON_URL","$6W5Ul","createPersonModalMarkup","$a29f26a4a40c2f0a$var$_fetchPerson","personData","unobserve","$e9iRm","refs3","targetObserverPeople","backdrop","classList","add","form","searchQuery","value","trim","$e3qRy","searchPerson","SEARCH_PERSON_URL","$iR07C","renderFoundPerson","observe","catch","err","peopleContainer","addEventListener","$a4d089102ee19eea$export$1667d6aa2cee11d8","document","querySelector","peopleList","modalWrapper","$52b520831d0c27f6$export$1f3529df0466b8e9","people","trendingPeople","map","param","id","name","gender","known_for_department","profile_path","imageSrc","personGender","genders","join","insertAdjacentHTML","$db9d45747ac3d0d4$export$706c7750293f7a13","foundPerson","foundItems","$a3b62ede7df7fa7d$export$791a87ce43433885","$a3b62ede7df7fa7d$var$_searchPerson","dataFoundPerson","innerHTML","$da5d5aed0ab69a80$export$bda05f064222d25a","$da5d5aed0ab69a80$var$_fetchSinglePerson","personDetails","$50ccbe03e1f09353$var$POSTER_URL","$50ccbe03e1f09353$export$9a7ad2d283fab89","$50ccbe03e1f09353$var$_createPersonModalMarkup","birthday","biography","place_of_birth","poster_path","popularity","markup","remove"],"version":3,"file":"trendingpeople.8a15d018.js.map"}