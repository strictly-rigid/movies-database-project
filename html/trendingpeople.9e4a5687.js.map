{"mappings":"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","sources":["src/js/TrendingPeople/fetchTrendingPeople.js","src/js/refs3.js","src/js/TrendingPeople/renderTrendingPeople.js","src/js/TrendingPeople/renderFoundPerson.js","src/js/TrendingPeople/searchPerson.js","src/js/TrendingPeople/fetchSinglePerson.js","src/js/helpers/createPersonModalMarkup.js","src/js/helpers/fetchers.js","src/js/helpers/setNewObserver.js"],"sourcesContent":["import axios from 'axios';\nimport { refs3 } from '../refs3';\nimport {\n  URLS,\n  trendingObserverOptions,\n  searchObserverOptions,\n} from '../constants';\nimport { renderTrendingPeople } from './renderTrendingPeople';\nimport { renderFoundPerson } from './renderFoundPerson';\nimport { searchPerson } from './searchPerson';\nimport { fetchSinglePerson } from './fetchSinglePerson';\nimport { createPersonModalMarkup } from '../helpers/createPersonModalMarkup';\nimport { notifyEndResults, notifyNoResults } from '../helpers/notifyWarnings';\nimport { fetchData } from '../helpers/fetchers';\nimport { setNewObserver } from '../helpers/setNewObserver';\n\nconst API_KEY = '86bcaf318e232372b2e8e2623c959f88';\nlet query = '';\nlet currentPage = 1;\nlet currentSearchPage = 1;\nlet isLoading = false;\n\n/* ====================== TRENDING ======================  */\n\nasync function fetchTrendingPeople(currentPage) {\n  try {\n    const response = await fetchData(URLS.BASE_PEOPLE_URL, {\n      api_key: API_KEY,\n      page: currentPage,\n    });\n\n    if (response.total_pages === currentSearchPage) {\n      notifyEndResults();\n      trendingObserver.unobserve(refs3.targetObserverPeople);\n    }\n    const dataPeople = response.results;\n    return dataPeople;\n  } catch (error) {\n    console.log('Error fetching trending people:', error.message);\n  } finally {\n    isLoading = false;\n  }\n}\n\nconst trendingObserver = setNewObserver(\n  onLoadMoreTrending,\n  trendingObserverOptions\n);\nfunction onLoadMoreTrending(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentPage += 1;\n      fetchTrendingPeople(currentPage).then(data => renderTrendingPeople(data));\n    }\n  });\n}\n\n// Initializing fetch request for trending\n\nfetchTrendingPeople(currentPage)\n  .then(data => renderTrendingPeople(data))\n  .then(() => trendingObserver.observe(refs3.targetObserverPeople))\n  .catch(err => console.log(err));\n\n/* ====================== SEARCH ======================  */\n\nrefs3.form.addEventListener('submit', searchByName);\n\nasync function searchByName(e) {\n  e.preventDefault();\n\n  trendingObserver.unobserve(refs3.targetObserverPeople);\n  searchObserver.unobserve(refs3.targetObserverSearch);\n\n  refs3.backdrop.classList.add('is-hidden');\n  query = refs3.form.searchQuery.value.trim();\n  currentSearchPage = 1;\n\n  try {\n    refs3.peopleList.innerHTML = '';\n    refs3.endResultsInfo.classList.add('visually-hidden');\n\n    const personData = await searchPerson(\n      API_KEY,\n      URLS.SEARCH_PERSON_URL,\n      query,\n      currentSearchPage\n    );\n\n    const { results, total_results } = personData.data;\n\n    if (results && results.length > 0) {\n      renderFoundPerson(results);\n      searchObserver.observe(refs3.targetObserverSearch);\n    } else {\n      refs3.endResultsInfo.classList.remove('visually-hidden');\n      notifyNoResults();\n    }\n\n    if (\n      total_results &&\n      total_results <= 20 &&\n      personData.data.total_pages === currentSearchPage\n    ) {\n      notifyEndResults();\n      searchObserver.unobserve(refs3.targetObserverSearch);\n    }\n  } catch (error) {\n    console.log('Error fetching person:', error.message);\n  } finally {\n    refs3.form.searchQuery.value = '';\n  }\n}\n\nlet searchObserver = new IntersectionObserver(\n  onLoadMoreSearch,\n  searchObserverOptions\n);\n\nfunction onLoadMoreSearch(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentSearchPage += 1;\n      searchPerson(\n        API_KEY,\n        URLS.SEARCH_PERSON_URL,\n        query,\n        currentSearchPage\n      ).then(dataFound => {\n        const { results } = dataFound.data;\n        renderFoundPerson(results);\n      });\n    }\n  });\n}\n\n/* ====================== PERSON'S DETAILS ======================  */\n\nrefs3.peopleContainer.addEventListener('click', onPersonItemClick);\n\nasync function onPersonItemClick(e) {\n  e.preventDefault();\n\n  const targetElement = e.target.closest('.person-item');\n  if (targetElement) {\n    const dataId = targetElement.getAttribute('data-id');\n    const data = await fetchSinglePerson(\n      API_KEY,\n      URLS.SINGLE_PERSON_URL,\n      dataId\n    );\n    createPersonModalMarkup(data);\n  }\n}\n\n// import axios from 'axios';\n// import { refs3 } from '../refs3';\n// import {\n//   URLS,\n//   trendingObserverOptions,\n//   searchObserverOptions,\n// } from '../constants';\n// import { renderTrendingPeople } from './renderTrendingPeople';\n// import { renderFoundPerson } from './renderFoundPerson';\n// import { searchPerson } from './searchPerson';\n// import { fetchSinglePerson } from './fetchSinglePerson';\n// import { createPersonModalMarkup } from '../helpers/createPersonModalMarkup';\n// import { notifyEndResults, notifyNoResults } from '../helpers/notifyWarnings';\n\n// const API_KEY = '86bcaf318e232372b2e8e2623c959f88';\n// let query = '';\n// let currentPage = 1;\n// let currentSearchPage = 1;\n// let isLoading = false;\n\n// /* ====================== TRENDING ======================  */\n\n// async function fetchTrendingPeople(key, url, currentPage) {\n//   try {\n//     isLoading = true;\n//     const response = await axios.get(\n//       `${url}?api_key=${key}&page=${currentPage}`\n//     );\n\n//     if (response.data.total_pages === currentSearchPage) {\n//       notifyEndResults();\n//       trendingObserver.unobserve(refs3.targetObserverPeople);\n//     }\n//     const dataPeople = response.data.results;\n//     return dataPeople;\n//   } catch (error) {\n//     console.log('Error fetching trending people:', error.message);\n//   } finally {\n//     isLoading = false;\n//   }\n// }\n\n// let trendingObserver = new IntersectionObserver(\n//   onLoadMoreTrending,\n//   trendingObserverOptions\n// );\n// function onLoadMoreTrending(entries) {\n//   entries.forEach(entry => {\n//     if (entry.isIntersecting) {\n//       currentPage += 1;\n//       fetchTrendingPeople(API_KEY, URLS.BASE_PEOPLE_URL, currentPage).then(\n//         data => renderTrendingPeople(data)\n//       );\n//     }\n//   });\n// }\n\n// fetchTrendingPeople(API_KEY, URLS.BASE_PEOPLE_URL, currentPage)\n//   .then(data => renderTrendingPeople(data))\n//   .then(() => trendingObserver.observe(refs3.targetObserverPeople))\n//   .catch(err => console.log(err));\n\n// /* ====================== SEARCH ======================  */\n\n// refs3.form.addEventListener('submit', searchByName);\n\n// async function searchByName(e) {\n//   e.preventDefault();\n\n//   trendingObserver.unobserve(refs3.targetObserverPeople);\n//   searchObserver.unobserve(refs3.targetObserverSearch);\n\n//   refs3.backdrop.classList.add('is-hidden');\n//   query = refs3.form.searchQuery.value.trim();\n//   currentSearchPage = 1;\n\n//   try {\n//     refs3.peopleList.innerHTML = '';\n//     refs3.endResultsInfo.classList.add('visually-hidden');\n\n//     const personData = await searchPerson(\n//       API_KEY,\n//       URLS.SEARCH_PERSON_URL,\n//       query,\n//       currentSearchPage\n//     );\n\n//     const { results, total_results } = personData.data;\n\n//     if (results && results.length > 0) {\n//       renderFoundPerson(results);\n//       searchObserver.observe(refs3.targetObserverSearch);\n//     } else {\n//       refs3.endResultsInfo.classList.remove('visually-hidden');\n//       notifyNoResults();\n//     }\n\n//     if (\n//       total_results &&\n//       total_results <= 20 &&\n//       personData.data.total_pages === currentSearchPage\n//     ) {\n//       notifyEndResults();\n//       searchObserver.unobserve(refs3.targetObserverSearch);\n//     }\n//   } catch (error) {\n//     console.log('Error fetching person:', error.message);\n//   } finally {\n//     refs3.form.searchQuery.value = '';\n//   }\n// }\n\n// let searchObserver = new IntersectionObserver(\n//   onLoadMoreSearch,\n//   searchObserverOptions\n// );\n\n// function onLoadMoreSearch(entries) {\n//   entries.forEach(entry => {\n//     if (entry.isIntersecting) {\n//       currentSearchPage += 1;\n//       searchPerson(\n//         API_KEY,\n//         URLS.SEARCH_PERSON_URL,\n//         query,\n//         currentSearchPage\n//       ).then(dataFound => {\n//         const { results } = dataFound.data;\n//         renderFoundPerson(results);\n//       });\n//     }\n//   });\n// }\n\n// /* ====================== PERSON'S DETAILS ======================  */\n\n// refs3.peopleContainer.addEventListener('click', onPersonItemClick);\n\n// async function onPersonItemClick(e) {\n//   e.preventDefault();\n\n//   const targetElement = e.target.closest('.person-item');\n//   if (targetElement) {\n//     const dataId = targetElement.getAttribute('data-id');\n//     const data = await fetchSinglePerson(\n//       API_KEY,\n//       URLS.SINGLE_PERSON_URL,\n//       dataId\n//     );\n//     createPersonModalMarkup(data);\n//   }\n// }\n","export const refs3 = {\n  form: document.querySelector('.search-form-people'),\n  peopleContainer: document.querySelector('.people-data-container'),\n  peopleList: document.querySelector('.people-list'),\n  targetObserverPeople: document.querySelector('.js-guard-people'),\n  targetObserverSearch: document.querySelector('.js-guard-search'),\n  backdrop: document.querySelector('.person-backdrop'),\n  modalWrapper: document.querySelector('.person-item-wrapper'),\n  endResultsInfo: document.querySelector('.no-results-info-people'),\n  closeBtn: document.querySelector('.modal-people-close-icon'),\n};\n","import { refs3 } from '../refs3';\nimport { URLS, genders } from '../constants';\n\nexport function renderTrendingPeople(people) {\n  const trendingPeople = people\n    .map(({ id, name, gender, known_for_department, profile_path }) => {\n      const imageSrc = profile_path\n        ? `${URLS.POSTER_URL}${profile_path}`\n        : URLS.DEFAULT_IMAGE;\n\n      const personGender = genders[gender] || 'Not specified';\n\n      return `<li class=\"person-item\" data-id=${id}>\n            <img\n              src=\"${imageSrc}\"\n              class=\"person-image\"\n              alt=\"person image\"\n            />\n          <div class=\"person-info\">\n            <h2 class=\"person-name\">${name}</h2>\n            <p class=\"person-gender\">${personGender}</p>\n            <p class=\"popular-movies\">Known for: ${\n              known_for_department || 'No data'\n            } </p>\n          </div>\n          </li>`;\n    })\n    .join('');\n\n  refs3.peopleList.insertAdjacentHTML('beforeend', trendingPeople);\n}\n","import { refs3 } from '../refs3';\nimport { URLS, genders } from '../constants';\n\nexport function renderFoundPerson(foundPerson) {\n  const foundItems = foundPerson\n    .map(({ id, name, gender, profile_path }) => {\n      const imageSrc = profile_path\n        ? `${URLS.POSTER_URL}${profile_path}`\n        : URLS.DEFAULT_IMAGE;\n\n      const personGender = genders[gender] || 'Not specified';\n\n      return `<li class=\"person-item\" data-id=${id}>\n            <img\n              src=\"${imageSrc}\"\n              class=\"person-image\"\n              alt=\"person image\"\n            />\n            <h2 class=\"person-name\">${name}</h2>\n            <p class=\"person-gender\">${personGender}</p>\n          \n          </li>`;\n    })\n    .join('');\n\n  refs3.peopleList.insertAdjacentHTML('beforeend', foundItems);\n}\n","import axios from 'axios';\n\nexport async function searchPerson(key, url, searchQuery, page) {\n  try {\n    const response = await axios.get(\n      `${url}?api_key=${key}&query=${searchQuery}&page=${page}`\n    );\n\n    console.log(response);\n\n    return response;\n  } catch (error) {\n    console.log('Error fetching person:', error.message);\n  }\n}\n","import axios from 'axios';\n\nlet isLoading = false;\n\nexport async function fetchSinglePerson(key, url, id) {\n  try {\n    isLoading = true;\n    const response = await axios.get(`${url}/${id}?api_key=${key}`);\n    const personDetails = response.data;\n\n    return personDetails;\n  } catch (error) {\n    console.log('Error fetching person\"s data:', error.message);\n  } finally {\n    isLoading = false;\n  }\n}\n","import { refs3 } from '../refs3';\nimport { URLS, genders } from '../constants';\nimport { onBackdropClick, onEscKeyPress } from './onCloseFunctions';\n\nimport { notifyAddSuccess, notifyIsInFavorites } from './notifyWarnings';\n\nconst favoritePeopleList =\n  JSON.parse(localStorage.getItem('favorite_people')) ?? [];\n\nexport async function createPersonModalMarkup(data) {\n  const {\n    id,\n    birthday,\n    biography,\n    place_of_birth,\n    gender,\n    name,\n    known_for_department,\n    profile_path,\n    popularity,\n  } = data;\n\n  const personImg = profile_path\n    ? `${URLS.POSTER_URL}${profile_path}`\n    : URLS.DEFAULT_IMAGE;\n  const personGender = genders[gender] || 'Not specified';\n\n  let markup = `<div class=\"person-item-detailed\" id=${id}>\n           <img src=\"${personImg}\" class=\"person-image\" alt=\"person image\">\n            <h2 class=\"modal-name modal-title\">${name}</h2>\n            <p class=\"gender\"> <span class=\"modal-bold\"> Gender:</span> ${personGender}</p>\n            <p class=\"birthday\"> <span class=\"modal-bold\"> Born:</span> ${\n              birthday || 'unknown'\n            }</p>\n            <p class=\"place_of_birth\"> <span class=\"modal-bold\"> Place of birth:</span> ${\n              place_of_birth || 'unknown'\n            }</span>\n            <p class=\"known_for\"> <span class=\"modal-bold\"> Known for:</span> ${\n              known_for_department || 'No data'\n            }</p>\n            <p class=\"biography\"> <span class=\"modal-bold\">Bio:</span> ${\n              biography || 'no info'\n            }</p>\n            <p class=\"popularity\"> <span class=\"modal-bold\"> Popularity:</span> ${popularity}</p>\n            <button type=\"button\" class=\"person-fav\">Add to favorites</button>\n          </div>`;\n\n  refs3.backdrop.classList.remove('is-hidden');\n  refs3.modalWrapper.innerHTML = markup;\n\n  refs3.backdrop.addEventListener('click', event =>\n    onBackdropClick(event, onModalClose)\n  );\n  window.addEventListener('keydown', event =>\n    onEscKeyPress(event, onModalClose)\n  );\n  refs3.closeBtn.addEventListener('click', onModalClose);\n\n  /* ======================  ADD TO FAVORITES ======================  */\n  const addFavBtn = document.querySelector('.person-fav');\n  addFavBtn.addEventListener('click', () => addToFavorites(data));\n}\n\nfunction onModalClose() {\n  refs3.modalWrapper.innerHTML = '';\n\n  refs3.backdrop.classList.add('is-hidden');\n\n  refs3.backdrop.removeEventListener('click', onModalClose);\n  refs3.closeBtn.removeEventListener('click', onModalClose);\n  window.removeEventListener('keydown', onEscKeyPress);\n}\n\nfunction addToFavorites(person) {\n  const inStorage = favoritePeopleList.some(fav => fav.id === person.id);\n  const personItem = {\n    id: person.id,\n    name: person.name,\n    gender: person.gender,\n    birthday: person.birthday,\n    biography: person.biography,\n    knownFor: person.known_for_department,\n    placeOfBirth: person.place_of_birth,\n    profile_path: person.profile_path,\n    popularity: person.popularity,\n  };\n\n  if (!inStorage) {\n    favoritePeopleList.push(personItem);\n    localStorage.setItem('favorite_people', JSON.stringify(favoritePeopleList));\n    notifyAddSuccess(person.name);\n  } else {\n    notifyIsInFavorites(person.name);\n  }\n}\n","import axios from 'axios';\n\nexport async function fetchData(url, params = {}) {\n  try {\n    isLoading = true;\n    const response = await axios.get(url, { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error.message);\n    throw error;\n  } finally {\n    isLoading = false;\n  }\n}\n","export function setNewObserver(callback, options) {\n  return new IntersectionObserver(callback, options);\n}\n"],"names":["$bpxeT","parcelRequire","$a4d089102ee19eea$export$1667d6aa2cee11d8","form","document","querySelector","peopleContainer","peopleList","targetObserverPeople","targetObserverSearch","backdrop","modalWrapper","endResultsInfo","closeBtn","$52b520831d0c27f6$export$1f3529df0466b8e9","people","trendingPeople","map","param","id","name","gender","known_for_department","profile_path","imageSrc","concat","$4s6iC","URLS","POSTER_URL","DEFAULT_IMAGE","personGender","genders","join","insertAdjacentHTML","$db9d45747ac3d0d4$export$706c7750293f7a13","foundPerson","foundItems","$a3b62ede7df7fa7d$export$791a87ce43433885","key","url","searchQuery","page","$a3b62ede7df7fa7d$var$_searchPerson","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","$dIxxU","default","get","_ctx","sent","console","log","t0","message","$da5d5aed0ab69a80$export$bda05f064222d25a","$da5d5aed0ab69a80$var$_fetchSinglePerson","personDetails","data","$50ccbe03e1f09353$var$ref","$50ccbe03e1f09353$var$favoritePeopleList","JSON","parse","localStorage","getItem","$50ccbe03e1f09353$export$9a7ad2d283fab89","$50ccbe03e1f09353$var$_createPersonModalMarkup","birthday","biography","place_of_birth","popularity","personImg","markup","classList","remove","innerHTML","addEventListener","event","$gOfal","onBackdropClick","$50ccbe03e1f09353$var$onModalClose","window","onEscKeyPress","$50ccbe03e1f09353$var$addToFavorites","add","removeEventListener","person","inStorage","some","fav","personItem","knownFor","placeOfBirth","$lG111","notifyIsInFavorites","push","setItem","stringify","notifyAddSuccess","$bda2c7cf4b156a4d$export$8134c072fddab6a5","$bda2c7cf4b156a4d$var$_fetchData","params","_args","length","isLoading","error","$a29f26a4a40c2f0a$var$API_KEY","$a29f26a4a40c2f0a$var$query","$a29f26a4a40c2f0a$var$currentPage","$a29f26a4a40c2f0a$var$currentSearchPage","$a29f26a4a40c2f0a$var$fetchTrendingPeople","currentPage1","$a29f26a4a40c2f0a$var$_fetchTrendingPeople","dataPeople","BASE_PEOPLE_URL","api_key","total_pages","notifyEndResults","$a29f26a4a40c2f0a$var$trendingObserver","unobserve","results","callback","options","entries","forEach","entry","isIntersecting","then","trendingObserverOptions","IntersectionObserver","$a29f26a4a40c2f0a$var$_searchByName","e","personData","_data","total_results","preventDefault","$a29f26a4a40c2f0a$var$searchObserver","value","trim","SEARCH_PERSON_URL","observe","notifyNoResults","catch","err","dataFound","searchObserverOptions","$a29f26a4a40c2f0a$var$_onPersonItemClick","targetElement","dataId","target","closest","getAttribute","SINGLE_PERSON_URL"],"version":3,"file":"trendingpeople.9e4a5687.js.map"}