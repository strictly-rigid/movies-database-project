{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,aCAaC,EAAO,CAClBC,KAAMC,SAASC,cAAc,gBAC7BC,gBAAiBF,SAASC,cAAc,mBACxCE,WAAYH,SAASC,cAAc,gBACnCG,qBAAsBJ,SAASC,cAAc,oBAC7CI,qBAAsBL,SAASC,cAAc,oBAC7CK,SAAUN,SAASC,cAAc,aACjCM,aAAcP,SAASC,cAAc,uBACrCO,eAAgBR,SAASC,cAAc,2BACvCQ,SAAUT,SAASC,cAAc,qB,uCCT5B,SAASS,EAAUC,EAAWC,GACnC,OAAOD,EACJE,KAAI,SAAAC,GACH,IAAMC,EAAQH,EAAOI,MAAK,SAAAC,G,OAAKA,EAAEH,KAAOA,C,IACxC,OAAOC,EAAQA,EAAMG,KAAO,E,IAE7BC,OAAOC,SACPC,KAAK,K,CCHH,SAASC,EAAqBC,GACnC,IAAMC,EAAiBD,EACpBV,KACC,SAAAY,G,IACEX,EAAEW,EAAFX,GACAH,EAASc,EAATd,UACAe,EAAcD,EAAdC,eACAC,EAAQF,EAARE,SACAC,EAAYH,EAAZG,aACAC,EAAWJ,EAAXI,YAEMC,EAAapB,EAAUC,EAAWoB,EAAAnB,QACxC,MAAO,mCAEDoB,OAFoClB,EAAG,6BAGtCkB,OADDD,EAAAE,KAAKC,YAGmBF,OAFvBH,EAAY,0HAGgBG,OADLN,EAAe,oDAGvCM,OAF6BL,EAAS,sDAILK,OAFjCF,GAAc,6BACf,uDAC0DE,OAAxBJ,EAAaO,QAAQ,GAAG,qD,IAMlEd,KAAK,IAERvB,EAAKK,WAAWiC,mBAAmB,YAAaZ,E,cC9B3C,SAASa,EAAkBC,GAChC,IAAMC,EAAaD,EAChBzB,KACC,SAAAY,G,IACEX,EAAEW,EAAFX,GACAH,EAASc,EAATd,UACAe,EAAcD,EAAdC,eACAC,EAAQF,EAARE,SACAa,EAAYf,EAAZe,aACAZ,EAAYH,EAAZG,aACAa,EAAUhB,EAAVgB,WACAZ,EAAWJ,EAAXI,YAEMC,EAAapB,EAAUC,EAAWoB,EAAAnB,QAExC,MAAO,mCAEDoB,OAFoClB,EAAG,6BAGtCkB,OADDD,EAAAE,KAAKC,YAGmBF,OAFvBH,EAAY,0HAGgBG,OADLN,EAAe,oDAGrCM,OAF2BL,EAAS,wDAIIK,OAFxCF,GAAc,6BACf,gEAEgCE,OADSQ,EAAa,uDAENR,OADhBJ,EAAaO,QAAQ,GAAG,2EACGH,OAAXS,EAAW,mD,IAKrEpB,KAAK,IAERvB,EAAKK,WAAWiC,mBAAmB,YAAaG,E,CCtClD3C,EAAAC,EAAA,S,mCAEsB6C,EAAYC,EAAKC,EAAKC,EAAaC,G,OAAnCC,EAAWC,MAAAC,KAAAC,U,UAAXH,I,OAAAA,EAAfI,EAAAvD,EAAA,CAAAuD,EAAAC,GAAAC,MAAA,SAAAC,EAA2BX,EAAKC,EAAKC,EAAaC,G,IAE/CS,E,2FAAiBC,EAAAC,QAAMC,IAC3B,GAAkB1B,OAAfY,EAAI,aAAwBZ,OAAbW,EAAI,WAA6BX,OAApBa,EAAY,UAAab,OAALc,I,cAD/CS,EAAQI,EAAAC,K,kBAIPL,G,gCAEPM,QAAQC,IAAI,kCAAmCH,EAAAI,GAAMC,S,0DARxBhB,MAAAC,KAAAC,U,CCFjCtD,EAAAC,EAAA,S,mCAGsBoE,EAAiBtB,EAAKC,EAAK9B,G,OAA3BoD,EAAgBlB,MAAAC,KAAAC,U,UAAhBgB,I,OAAAA,EAAff,EAAAvD,EAAA,CAAAuD,EAAAC,GAAAC,MAAA,SAAAC,EAAgCX,EAAKC,EAAK9B,G,IAGvCyC,EAEAY,E,mFAHM,E,SACWX,EAAAC,QAAMC,IAAI,GAAU1B,OAAPY,EAAI,KAAiBZ,OAAdlB,EAAG,aAAekB,OAAJW,I,cAAnDY,EAAQI,EAAAC,KACdC,QAAQC,IAAIP,GACNY,EAAaZ,EAASa,K,kBACrBD,G,kCAEPN,QAAQC,IAAI,0BAA2BH,EAAAI,GAAMC,S,0BAEjC,E,8EAVsBhB,MAAAC,KAAAC,U,CCHtCtD,EAAAC,EAAA,S,0BAAA,IAOEwE,E,0BADEC,EACiD,QAAnDD,EAAAE,KAAKC,MAAMC,aAAaC,QAAQ,2BAAmB,IAAnDL,IAAuD,G,SAEnCM,EAAkBP,G,OAAlBQ,EAAiB5B,MAAAC,KAAAC,U,UAAjB0B,I,OAAAA,EAAfzB,EAAAvD,EAAA,CAAAuD,EAAAC,GAAAC,MAAA,SAAAC,EAAiCc,G,IAEpCtD,EACA+D,EACAjE,EACAkE,EACAC,EACArD,EACAc,EACAwC,EACAC,EACAC,EACAtD,EACAa,EACAd,EACAE,EAGIC,EACAqD,EAIFC,E,kEArBFtE,EAcEsD,EAdFtD,GACA+D,EAaET,EAbFS,OACAjE,EAYEwD,EAZFxD,OACAkE,EAWEV,EAXFU,eACAC,EAUEX,EAVFW,MACArD,EASE0C,EATF1C,eACAc,EAQE4B,EARF5B,aACAwC,EAOEZ,EAPFY,QACAC,EAMEb,EANFa,QACAC,EAKEd,EALFc,iBACAtD,EAIEwC,EAJFxC,aACAa,EAGE2B,EAHF3B,WACAd,EAEEyC,EAFFzC,SACAE,EACEuC,EADFvC,YAGIC,EAAalB,EAAOC,KAAI,SAAAE,G,OAASA,EAAMG,I,IAAMG,KAAK,MAClD8D,EAAYD,EACfrE,KAAI,SAAAwE,G,OAAYA,EAASC,Y,IACzBjE,KAAK,MAEJ+D,EAAS,uCAELpD,OAF4ClB,EAAG,yBAG9CkB,OADDD,EAAAE,KAAKC,YAEmBF,OADvBH,EAAY,gFAEoEG,OADzD+C,EAAM,oGAEkC/C,OADiBN,EAAe,mFAErBM,OADXF,EAAW,6FAECE,OADD8C,EAAe,8FAEX9C,OADHQ,EAAa,iGAElBR,OADQL,EAAS,yFAE1BK,OADSmD,EAAU,gFAIjBnD,QAFhE6C,EAAS,KACT1C,UAAU,yFAI+CH,QAFzDgD,EAAU,KACV7C,UAAU,kFAImDH,OAHJiD,EAAQ,mIAIKjD,OADTJ,EAAa,2FACOI,OAAXS,EAAW,uHAMzF3C,EAAKQ,SAASiF,UAAUC,OAAO,aAC/B1F,EAAKS,aAAakF,UAAYL,EAE9BtF,EAAKQ,SAASoF,iBAAiB,SAAS,SAAAC,G,OACtC,EAAAC,EAAAC,iBAAgBF,EAAOG,E,IAEzBC,OAAOL,iBAAiB,WAAW,SAAAC,G,OACjC,EAAAC,EAAAI,eAAcL,EAAOG,E,IAEvBhG,EAAKW,SAASiF,iBAAiB,QAASI,GAGtB9F,SAASC,cAAc,eAC/ByF,iBAAiB,SAAS,W,OAAMO,EAAe7B,E,iDA/DpBpB,MAAAC,KAAAC,U,CAkEvC,SAAS4C,IACPhG,EAAKS,aAAakF,UAAY,GAE9B3F,EAAKQ,SAASiF,UAAUW,IAAI,aAE5BpG,EAAKQ,SAAS6F,oBAAoB,QAASL,GAC3ChG,EAAKW,SAAS0F,oBAAoB,QAASL,GAC3CC,OAAOI,oBAAoB,UAAWP,EAAAI,c,CAGxC,SAASC,EAAeG,GACtB,IAAMC,EAAY/B,EAAmBgC,MAAK,SAAAC,G,OAAOA,EAAIzF,KAAOsF,EAAMtF,E,IAC5D0F,EAAY,CAChB1F,GAAIsF,EAAMtF,GACViE,MAAOqB,EAAMrB,MACb0B,UAAWL,EAAM1E,eACjBmD,OAAQuB,EAAMvB,OACdM,UAAWiB,EAAMlB,iBACjBtE,OAAQwF,EAAMxF,OACd8F,cAAeN,EAAMtB,eACrB6B,YAAaP,EAAM5D,aACnBoE,WAAYR,EAAMvE,YAClBmD,QAASoB,EAAMpB,QACfC,QAASmB,EAAMnB,QACftD,SAAUyE,EAAMzE,SAChBkF,YAAaT,EAAMxE,aACnBkF,UAAWV,EAAM3D,YAGd4D,GAKH,EAAAU,EAAAC,qBAAoBZ,EAAMrB,QAJ1BT,EAAmB2C,KAAKT,GACxB/B,aAAayC,QAAQ,kBAAmB3C,KAAK4C,UAAU7C,KACvD,EAAAyC,EAAAK,kBAAiBhB,EAAMrB,O,kBPxFrBsC,EAAU,mCAEZC,EAAQ,GACRC,EAAc,EACdC,EAAoB,E,SAKTC,EAAoB9E,EAAKC,EAAK8E,G,OAA9BC,EAAmB3E,MAAAC,KAAAC,U,UAAnByE,I,OAAAA,EAAfxE,EAAAvD,EAAA,CAAAuD,EAAAC,GAAAC,MAAA,SAAAC,EAAmCX,EAAKC,EAAK8E,G,IAGnCnE,EAQAY,E,kFATNyD,WAAY,E,SACWpE,EAAAC,QAAMC,IAC3B,GAAkB1B,OAAfY,EAAI,aAAuBZ,OAAZW,EAAI,UAAoBX,OAAZ0F,I,cAD1BnE,EAAQI,EAAAC,MAIDQ,KAAKyD,cAAgBL,KAChC,EAAAT,EAAAe,oBACAC,EAAiBC,UAAUlI,EAAKM,uBAE5B+D,EAAaZ,EAASa,KAAK6D,Q,kBAC1B9D,G,kCAEPN,QAAQC,IAAI,kCAAmCH,EAAAI,GAAMC,S,yBAErD4D,WAAY,E,8EAhBkB5E,MAAAC,KAAAC,U,CAoBlC,IAAI6E,EAAmB,IAAIG,sBAI3B,SAA4BC,EAASC,GACnCvE,QAAQC,IAAIqE,GACZA,EAAQE,SAAQ,SAAAC,GACVA,EAAMC,iBACRhB,GAAe,EACfE,EAAoBJ,EAAStF,EAAAE,KAAKuG,gBAAiBjB,GAAakB,MAC9D,SAAArE,G,OAAQ9C,EAAqB8C,E,UARnCrC,EAAA2G,yB,SAsBaC,I,OAAAA,EAAfxF,EAAAvD,EAAA,CAAAuD,EAAAC,GAAAC,MAAA,SAAAC,EAA4BsF,G,IAclBC,EAO6BC,EAA3Bb,EAASc,E,yEApBnBH,EAAEI,iBAEFjB,EAAiBC,UAAUlI,EAAKM,sBAChC6I,EAAejB,UAAUlI,EAAKO,sBAE9BP,EAAKQ,SAASiF,UAAUW,IAAI,aAC5BoB,EAAQxH,EAAKC,KAAK8C,YAAYqG,MAAMC,OACpC3B,EAAoB,E,SAGlB1H,EAAKK,WAAWsF,UAAY,GAC5B3F,EAAKU,eAAe+E,UAAUW,IAAI,mB,UAETxD,EACvB2E,EACAtF,EAAAE,KAAKmH,iBACL9B,EACAE,G,QAJIqB,EAAUlF,EAAAC,KAOmBkF,EAAAD,EAAWzE,KAAtC6D,EAA2Ba,EAA3Bb,QAASc,EAAkBD,EAAlBC,cAEbd,GAAWA,EAAQoB,OAAS,GAC9BhH,EAAkB4F,GAClBgB,EAAeK,QAAQxJ,EAAKO,wBAE5BP,EAAKU,eAAe+E,UAAUC,OAAO,oBACrC,EAAAuB,EAAAwC,oBAIAR,GACAA,GAAiB,IACjBF,EAAWzE,KAAKyD,cAAgBL,KAEhC,EAAAT,EAAAe,oBACAmB,EAAejB,UAAUlI,EAAKO,uB,kDAGhCwD,QAAQC,IAAI,yBAA0BH,EAAAI,GAAMC,S,yBAE5ClE,EAAKC,KAAK8C,YAAYqG,MAAQ,G,8EA1CPlG,MAAAC,KAAAC,U,CAR3BuE,EAAoBJ,EAAStF,EAAAE,KAAKuG,gBAAiBjB,GAChDkB,MAAK,SAAArE,G,OAAQ9C,EAAqB8C,E,IAClCqE,MAAK,W,OAAMV,EAAiBuB,QAAQxJ,EAAKM,qB,IACzCoJ,OAAM,SAAAC,G,OAAO5F,QAAQC,IAAI2F,E,IAG5B3J,EAAKC,KAAK2F,iBAAiB,U,SAECkD,G,OAAbD,EAAY3F,MAAAC,KAAAC,U,IA8C3B,IAAI+F,EAAiB,IAAIf,sBAKzB,SAA0BC,GACxBA,EAAQE,SAAQ,SAAAC,GACVA,EAAMC,iBACRf,GAAqB,EACrB9E,EACE2E,EACAtF,EAAAE,KAAKmH,iBACL9B,EACAE,GACAiB,MAAK,SAAAiB,GAELrH,EADoBqH,EAAUtF,KAAtB6D,Q,UAbdlG,EAAA4H,uB,SAwBaC,I,OAAAA,EAAfzG,EAAAvD,EAAA,CAAAuD,EAAAC,GAAAC,MAAA,SAAAC,EAAiCsF,G,IAGzBiB,EAEEC,E,qEAJRlB,EAAEI,mBAEIa,EAAgBjB,EAAEmB,OAAOC,QAAQ,iBACtB,C,sBACTF,EAASD,EAAcI,aAAa,W,SACvBhG,EAAiBoD,EAAStF,EAAAE,KAAKiI,iBAAkBJ,G,OACpEnF,EADUhB,EAAAC,M,4CANkBZ,MAAAC,KAAAC,U,CAFhCpD,EAAKI,gBAAgBwF,iBAAiB,S,SAELkD,G,OAAlBgB,EAAiB5G,MAAAC,KAAAC,U","sources":["src/index.js","src/js/refs.js","src/js/helpers/getGenres.js","src/js/TrendingMovies/renderTrendingMovies.js","src/js/TrendingMovies/renderFoundMovies.js","src/js/TrendingMovies/searchMovie.js","src/js/TrendingMovies/fetchSingleMovie.js","src/js/helpers/createModalMarkup.js"],"sourcesContent":["import { refs } from './js/refs';\nimport axios from 'axios';\nimport {\n  URLS,\n  trendingObserverOptions,\n  searchObserverOptions,\n} from './js/constants.js';\n\nimport { renderTrendingMovies } from './js/TrendingMovies/renderTrendingMovies.js';\nimport { renderFoundMovies } from './js/TrendingMovies/renderFoundMovies.js';\n\nimport { searchMovie } from './js/TrendingMovies/searchMovie.js';\nimport { fetchSingleMovie } from './js/TrendingMovies/fetchSingleMovie.js';\nimport { createModalMarkup } from './js/helpers/createModalMarkup.js';\nimport {\n  notifyEndResults,\n  notifyNoResults,\n} from './js/helpers/notifyWarnings.js';\n\nconst API_KEY = '86bcaf318e232372b2e8e2623c959f88';\n\nlet query = '';\nlet currentPage = 1;\nlet currentSearchPage = 1;\nlet isSearching = false;\n\n/* ====================== TRENDING ======================  */\n\nasync function fetchTrendingMovies(key, url, currentPage) {\n  try {\n    isLoading = true;\n    const response = await axios.get(\n      `${url}?api_key=${key}&page=${currentPage}`\n    );\n\n    if (response.data.total_pages === currentSearchPage) {\n      notifyEndResults();\n      trendingObserver.unobserve(refs.targetObserverMovies);\n    }\n    const dataMovies = response.data.results;\n    return dataMovies;\n  } catch (error) {\n    console.log('Error fetching trending movies:', error.message);\n  } finally {\n    isLoading = false;\n  }\n}\n\nlet trendingObserver = new IntersectionObserver(\n  onLoadMoreTrending,\n  trendingObserverOptions\n);\nfunction onLoadMoreTrending(entries, observer) {\n  console.log(entries);\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentPage += 1;\n      fetchTrendingMovies(API_KEY, URLS.BASE_MOVIES_URL, currentPage).then(\n        data => renderTrendingMovies(data)\n      );\n    }\n  });\n}\n\nfetchTrendingMovies(API_KEY, URLS.BASE_MOVIES_URL, currentPage)\n  .then(data => renderTrendingMovies(data))\n  .then(() => trendingObserver.observe(refs.targetObserverMovies))\n  .catch(err => console.log(err));\n\n/* ====================== SEARCH ======================  */\nrefs.form.addEventListener('submit', searchByName);\n\nasync function searchByName(e) {\n  e.preventDefault();\n\n  trendingObserver.unobserve(refs.targetObserverMovies);\n  searchObserver.unobserve(refs.targetObserverSearch);\n\n  refs.backdrop.classList.add('is-hidden');\n  query = refs.form.searchQuery.value.trim();\n  currentSearchPage = 1;\n\n  try {\n    refs.moviesList.innerHTML = '';\n    refs.endResultsInfo.classList.add('visually-hidden');\n\n    const moviesData = await searchMovie(\n      API_KEY,\n      URLS.SEARCH_MOVIE_URL,\n      query,\n      currentSearchPage\n    );\n\n    const { results, total_results } = moviesData.data;\n\n    if (results && results.length > 0) {\n      renderFoundMovies(results);\n      searchObserver.observe(refs.targetObserverSearch);\n    } else {\n      refs.endResultsInfo.classList.remove('visually-hidden');\n      notifyNoResults();\n    }\n\n    if (\n      total_results &&\n      total_results <= 20 &&\n      moviesData.data.total_pages === currentSearchPage\n    ) {\n      notifyEndResults();\n      searchObserver.unobserve(refs.targetObserverSearch);\n    }\n  } catch (error) {\n    console.log('Error fetching movies:', error.message);\n  } finally {\n    refs.form.searchQuery.value = '';\n  }\n}\n\nlet searchObserver = new IntersectionObserver(\n  onLoadMoreSearch,\n  searchObserverOptions\n);\n\nfunction onLoadMoreSearch(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentSearchPage += 1;\n      searchMovie(\n        API_KEY,\n        URLS.SEARCH_MOVIE_URL,\n        query,\n        currentSearchPage\n      ).then(dataFound => {\n        const { results } = dataFound.data;\n        renderFoundMovies(results);\n      });\n    }\n  });\n}\n\n/* ======================  MOVIE'S DETAILS ======================  */\n\nrefs.moviesContainer.addEventListener('click', onMoviesItemClick);\n\nasync function onMoviesItemClick(e) {\n  e.preventDefault();\n\n  const targetElement = e.target.closest('.movies-item');\n  if (targetElement) {\n    const dataId = targetElement.getAttribute('data-id');\n    const data = await fetchSingleMovie(API_KEY, URLS.SINGLE_MOVIE_URL, dataId);\n    createModalMarkup(data);\n  }\n}\n","export const refs = {\n  form: document.querySelector('.search-form'),\n  moviesContainer: document.querySelector('.data-container'),\n  moviesList: document.querySelector('.movies-list'),\n  targetObserverMovies: document.querySelector('.js-guard-movies'),\n  targetObserverSearch: document.querySelector('.js-guard-search'),\n  backdrop: document.querySelector('.backdrop'),\n  modalWrapper: document.querySelector('.movie-item-wrapper'),\n  endResultsInfo: document.querySelector('.no-results-info-movies'),\n  closeBtn: document.querySelector('.modal-close-btn'),\n};\n","export function getGenres(genre_ids, genres) {\n  return genre_ids\n    .map(id => {\n      const genre = genres.find(g => g.id === id);\n      return genre ? genre.name : '';\n    })\n    .filter(Boolean)\n    .join(', ');\n}\n","import { refs } from '../refs';\nimport { URLS, genres } from '../constants';\nimport { getGenres } from '../helpers/getGenres';\n\nexport function renderTrendingMovies(movies) {\n  const trendingMovies = movies\n    .map(\n      ({\n        id,\n        genre_ids,\n        original_title,\n        overview,\n        vote_average,\n        poster_path,\n      }) => {\n        const genreNames = getGenres(genre_ids, genres);\n        return `<li class=\"movies-item\" data-id=${id}>\n            <img src=\"${\n              URLS.POSTER_URL\n            }${poster_path}\" class=\"movie-poster\" alt=\"movie poster\">\n            <div class=\"movie-info\">\n            <h2 class=\"movie-title\">${original_title}</h2>\n            <p class=\"movie-description\">${overview}</p>\n            <p class=\"movie-genres\">Genres: ${\n              genreNames || 'Sorry, no genres available'\n            }</p>\n            <span class=\"movie-rate\">Rating: ${vote_average.toFixed(2)}</span> \n          </div>\n     \n          </li>`;\n      }\n    )\n    .join('');\n\n  refs.moviesList.insertAdjacentHTML('beforeend', trendingMovies);\n}\n","import { refs } from '../refs';\nimport { URLS, genres } from '../constants';\nimport { getGenres } from '../helpers/getGenres';\n\nexport function renderFoundMovies(foundMovies) {\n  const foundItems = foundMovies\n    .map(\n      ({\n        id,\n        genre_ids,\n        original_title,\n        overview,\n        release_date,\n        vote_average,\n        vote_count,\n        poster_path,\n      }) => {\n        const genreNames = getGenres(genre_ids, genres);\n\n        return `<li class=\"movies-item\" data-id=${id}>\n            <img src=\"${\n              URLS.POSTER_URL\n            }${poster_path}\" class=\"movie-poster\" alt=\"movie poster\">\n            <div class=\"movie-info\">\n            <h2 class=\"movie-title\">${original_title}</h2>\n            <p class=\"movie-description\">${overview}</p>\n              <p class=\"movie-genres\">Genres: ${\n                genreNames || 'Sorry, no genres available'\n              }</p>\n                <p class=\"movie-genres\">Release date: ${release_date}</p>\n            <span class=\"movie-rate\">Rating: ${vote_average.toFixed(2)}</span> \n                 <span class=\"movie-rate-count\">Total votes: ${vote_count}</span> \n          </div>     \n          </li>`;\n      }\n    )\n    .join('');\n\n  refs.moviesList.insertAdjacentHTML('beforeend', foundItems);\n}\n","import axios from 'axios';\n\nexport async function searchMovie(key, url, searchQuery, page) {\n  try {\n    const response = await axios.get(\n      `${url}?api_key=${key}&query=${searchQuery}&page=${page}`\n    );\n    // console.log(response);\n    return response;\n  } catch (error) {\n    console.log('Error fetching trending movies:', error.message);\n  }\n}\n","import axios from 'axios';\nlet isLoading = false;\n\nexport async function fetchSingleMovie(key, url, id) {\n  try {\n    isLoading = true;\n    const response = await axios.get(`${url}/${id}?api_key=${key}`);\n    console.log(response);\n    const dataMovies = response.data;\n    return dataMovies;\n  } catch (error) {\n    console.log('Error fetching a movie:', error.message);\n  } finally {\n    isLoading = false;\n  }\n}\n","import { refs } from '../refs';\nimport { URLS } from '../constants';\n\nimport { onBackdropClick, onEscKeyPress } from './onCloseFunctions';\nimport { notifyAddSuccess, notifyIsInFavorites } from './notifyWarnings';\n\nlet favoriteMoviesList =\n  JSON.parse(localStorage.getItem('favorite_movies')) ?? [];\n\nexport async function createModalMarkup(data) {\n  const {\n    id,\n    budget,\n    genres,\n    origin_country,\n    title,\n    original_title,\n    release_date,\n    revenue,\n    runtime,\n    spoken_languages,\n    vote_average,\n    vote_count,\n    overview,\n    poster_path,\n  } = data;\n\n  const genreNames = genres.map(genre => genre.name).join(', ');\n  const languages = spoken_languages\n    .map(language => language.english_name)\n    .join(', ');\n\n  let markup = `<div class=\"movie-item-detailed\" id=${id}>\n        <img src=\"${\n          URLS.POSTER_URL\n        }${poster_path}\" class=\"movie-poster\" alt=\"movie poster\">\n        <h2 class=\"modal-title\">${title}</h2>\n        <h3 class=\"modal-original-title\"><span class=\"modal-bold\">Original title</span>: ${original_title}</h3>\n        <p class=\"modal-genres\"><span class=\"modal-bold\">Genres:</span> ${genreNames}</p>\n        <p class=\"orig-country\"><span class=\"modal-bold\">Country of origin:</span> ${origin_country}</p>\n        <p class=\"modal-release-date\"><span class=\"modal-bold\">Release date:</span> ${release_date}</p>\n        <p class=\"modal-movie-description\"><span class=\"modal-bold\">Desription:</span> ${overview}</p>\n        <p class=\"languages\"><span class=\"modal-bold\">Spoken languages:</span> ${languages}</p>\n        <span class=\"budget\"><span class=\"modal-bold\">Budget:</span> $${(\n          budget / 1000000\n        ).toFixed()} mln</span>\n        <span class=\"revenue\"><span class=\"modal-bold\">Revenue:</span> $${(\n          revenue / 1000000\n        ).toFixed()} mln</span>\n        <p class=\"runtime\"><span class=\"modal-bold\">Time:</span> ${runtime} minutes</p>\n\n         <div class=\"movies-modal-rate\">\n        <span class=\"rating\"><span class=\"modal-bold\">Rating:</span> ${vote_average}</span>\n        <span class=\"vote-count\"><span class=\"modal-bold\">Total votes:</span> ${vote_count}</span>\n        </div>\n\n        <button type=\"button\" class=\"movies-fav\">Add to favorites</button>\n      </div>`;\n\n  refs.backdrop.classList.remove('is-hidden');\n  refs.modalWrapper.innerHTML = markup;\n\n  refs.backdrop.addEventListener('click', event =>\n    onBackdropClick(event, onModalClose)\n  );\n  window.addEventListener('keydown', event =>\n    onEscKeyPress(event, onModalClose)\n  );\n  refs.closeBtn.addEventListener('click', onModalClose);\n\n  /* ======================  ADD TO FAVORITES ======================  */\n  const addFavBtn = document.querySelector('.movies-fav');\n  addFavBtn.addEventListener('click', () => addToFavorites(data));\n}\n\nfunction onModalClose() {\n  refs.modalWrapper.innerHTML = '';\n\n  refs.backdrop.classList.add('is-hidden');\n\n  refs.backdrop.removeEventListener('click', onModalClose);\n  refs.closeBtn.removeEventListener('click', onModalClose);\n  window.removeEventListener('keydown', onEscKeyPress);\n}\n\nfunction addToFavorites(movie) {\n  const inStorage = favoriteMoviesList.some(fav => fav.id === movie.id);\n  const movieItem = {\n    id: movie.id,\n    title: movie.title,\n    origTitle: movie.original_title,\n    budget: movie.budget,\n    languages: movie.spoken_languages,\n    genres: movie.genres,\n    originCountry: movie.origin_country,\n    releaseDate: movie.release_date,\n    posterPath: movie.poster_path,\n    revenue: movie.revenue,\n    runtime: movie.runtime,\n    overview: movie.overview,\n    voteAverage: movie.vote_average,\n    voteCount: movie.vote_count,\n  };\n\n  if (!inStorage) {\n    favoriteMoviesList.push(movieItem);\n    localStorage.setItem('favorite_movies', JSON.stringify(favoriteMoviesList));\n    notifyAddSuccess(movie.title);\n  } else {\n    notifyIsInFavorites(movie.title);\n  }\n}\n"],"names":["$bpxeT","parcelRequire","$37e33676934ad046$export$21666b427502ea6d","form","document","querySelector","moviesContainer","moviesList","targetObserverMovies","targetObserverSearch","backdrop","modalWrapper","endResultsInfo","closeBtn","$85c58b14da9c2029$export$c5604fa8028da00","genre_ids","genres","map","id","genre","find","g","name","filter","Boolean","join","$4bcacd1770b5f760$export$ae4a60d31ab53252","movies","trendingMovies","param","original_title","overview","vote_average","poster_path","genreNames","$4s6iC","concat","URLS","POSTER_URL","toFixed","insertAdjacentHTML","$1dd08296ea6f3ae9$export$e70f4eb8e1a081ef","foundMovies","foundItems","release_date","vote_count","$458a420dbe5c4a85$export$dd14e5c8db127693","key","url","searchQuery","page","$458a420dbe5c4a85$var$_searchMovie","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","$dIxxU","default","get","_ctx","sent","console","log","t0","message","$27bd9ee829202bf4$export$7206e9da159570de","$27bd9ee829202bf4$var$_fetchSingleMovie","dataMovies","data","$a1904e15730cf304$var$ref","$a1904e15730cf304$var$favoriteMoviesList","JSON","parse","localStorage","getItem","$a1904e15730cf304$export$fc0ff788b21a7621","$a1904e15730cf304$var$_createModalMarkup","budget","origin_country","title","revenue","runtime","spoken_languages","languages","markup","language","english_name","classList","remove","innerHTML","addEventListener","event","$gOfal","onBackdropClick","$a1904e15730cf304$var$onModalClose","window","onEscKeyPress","$a1904e15730cf304$var$addToFavorites","add","removeEventListener","movie","inStorage","some","fav","movieItem","origTitle","originCountry","releaseDate","posterPath","voteAverage","voteCount","$lG111","notifyIsInFavorites","push","setItem","stringify","notifyAddSuccess","$b8f9b7833fa37166$var$API_KEY","$b8f9b7833fa37166$var$query","$b8f9b7833fa37166$var$currentPage","$b8f9b7833fa37166$var$currentSearchPage","$b8f9b7833fa37166$var$fetchTrendingMovies","currentPage1","$b8f9b7833fa37166$var$_fetchTrendingMovies","isLoading","total_pages","notifyEndResults","$b8f9b7833fa37166$var$trendingObserver","unobserve","results","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","BASE_MOVIES_URL","then","trendingObserverOptions","$b8f9b7833fa37166$var$_searchByName","e","moviesData","_data","total_results","preventDefault","$b8f9b7833fa37166$var$searchObserver","value","trim","SEARCH_MOVIE_URL","length","observe","notifyNoResults","catch","err","dataFound","searchObserverOptions","$b8f9b7833fa37166$var$_onMoviesItemClick","targetElement","dataId","target","closest","getAttribute","SINGLE_MOVIE_URL"],"version":3,"file":"index.63077891.js.map"}